{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "15790957246226801852"
    }
  },
  "parameters": {
    "appName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Prefix for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "uat",
        "prd"
      ],
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "vnetName": {
      "type": "string"
    },
    "vnetResourceGroupName": {
      "type": "string"
    },
    "vnetResourceGroupLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "vnetAddressRange": {
      "type": "string"
    },
    "vnetSubnetPrefixLength": {
      "type": "int",
      "defaultValue": 27
    },
    "vnetHasCustomDnsServers": {
      "type": "bool",
      "defaultValue": false
    },
    "privateDnsZonesResourceGroupName": {
      "type": "string",
      "defaultValue": "[parameters('vnetResourceGroupName')]"
    },
    "apimRouteTableName": {
      "type": "string"
    },
    "appGatewayRouteTableName": {
      "type": "string"
    },
    "apimServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "apimEnableLoggers": {
      "type": "bool",
      "defaultValue": false
    },
    "apimRateLimitCalls": {
      "type": "int",
      "defaultValue": 100
    },
    "apimRateLimitPeriod": {
      "type": "int",
      "defaultValue": 60
    },
    "eventHubNamespaceName": {
      "type": "string",
      "defaultValue": ""
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerRegistryResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerRegistryAdminUserEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "backendAppServicePlanName": {
      "type": "string",
      "defaultValue": ""
    },
    "backendServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "backendOpenApiSpecJson": {
      "type": "string",
      "defaultValue": ""
    },
    "indexingFunctionAppServicePlanName": {
      "type": "string",
      "defaultValue": ""
    },
    "indexingFunctionAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "indexingFunctionAppStorageAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "gatewayName": {
      "type": "string",
      "defaultValue": ""
    },
    "gatewayAllowedIps": {
      "type": "array",
      "defaultValue": []
    },
    "gatewayPreventionMode": {
      "type": "bool",
      "defaultValue": false
    },
    "gatewayPublicUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "gatewayBase64EncodedCertificate": {
      "type": "securestring",
      "defaultValue": ""
    },
    "gatewayCertificatePassword": {
      "type": "securestring",
      "defaultValue": ""
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": ""
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": ""
    },
    "applicationInsightsDashboardName": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "searchServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "searchServiceResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "searchServiceResourceGroupLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "searchServiceSkuName": {
      "type": "string",
      "defaultValue": ""
    },
    "searchIndexName": {
      "type": "string",
      "defaultValue": "gptkbindex"
    },
    "searchFeedbackIndexName": {
      "type": "string",
      "defaultValue": "gptkbindex"
    },
    "searchFeedbackIndexAnalyzerName": {
      "type": "string",
      "defaultValue": "gptkbindexanalyzer"
    },
    "searchUseSemanticSearch": {
      "type": "bool",
      "defaultValue": true
    },
    "searchUsePromptFlow": {
      "type": "bool",
      "defaultValue": false
    },
    "searchSemanticSearchConfig": {
      "type": "string",
      "defaultValue": "default"
    },
    "searchTopK": {
      "type": "int",
      "defaultValue": 5
    },
    "searchEnableInDomain": {
      "type": "bool",
      "defaultValue": false
    },
    "searchContentColumns": {
      "type": "string",
      "defaultValue": "chunk"
    },
    "searchFilenameColumn": {
      "type": "string",
      "defaultValue": "filename"
    },
    "searchTitleColumn": {
      "type": "string",
      "defaultValue": "title"
    },
    "searchUrlColumn": {
      "type": "string",
      "defaultValue": "location_url"
    },
    "searchVectorColumns": {
      "type": "string",
      "defaultValue": "vector"
    },
    "searchIndexPreChunked": {
      "type": "bool",
      "defaultValue": false
    },
    "searchPermittedGroupsColumn": {
      "type": "string",
      "defaultValue": ""
    },
    "searchQueryType": {
      "type": "string",
      "defaultValue": "vector_semantic_hybrid"
    },
    "searchStrictness": {
      "type": "string",
      "defaultValue": "3"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "storageResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "storageResourceGroupLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "storageSkuName": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ]
    },
    "deployOpenAi": {
      "type": "bool",
      "defaultValue": true
    },
    "openAiResourceName": {
      "type": "string",
      "defaultValue": ""
    },
    "openAiResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "openAiResourceGroupLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "openAiResourceNameSecondary": {
      "type": "string",
      "defaultValue": ""
    },
    "openAiResourceGroupNameSecondary": {
      "type": "string",
      "defaultValue": ""
    },
    "openAiResourceGroupLocationSecondary": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "openAiSkuName": {
      "type": "string",
      "defaultValue": ""
    },
    "openAIModelDeploymentName": {
      "type": "string",
      "defaultValue": "turbo16k"
    },
    "openAIModelName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo-16k",
      "allowedValues": [
        "gpt-35-turbo-16k",
        "gpt-4o"
      ]
    },
    "openAIModelVersion": {
      "type": "string",
      "defaultValue": "0613"
    },
    "openAIModelSkuTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "openAIModelCapacity": {
      "type": "int",
      "defaultValue": 30
    },
    "openAIModelSkuTierSecondary": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "openAIModelCapacitySecondary": {
      "type": "int",
      "defaultValue": 30
    },
    "openAITemperature": {
      "type": "int",
      "defaultValue": 0
    },
    "openAITopP": {
      "type": "int",
      "defaultValue": 1
    },
    "openAIMaxTokens": {
      "type": "int",
      "defaultValue": 1000
    },
    "openAIStopSequence": {
      "type": "string",
      "defaultValue": ""
    },
    "openAISystemMessage": {
      "type": "string",
      "defaultValue": "You are an AI assistant that helps people find information."
    },
    "openAIApiVersion": {
      "type": "string",
      "defaultValue": "2024-06-01"
    },
    "openAIStream": {
      "type": "bool",
      "defaultValue": true
    },
    "openAIEmbeddingDeploymentName": {
      "type": "string",
      "defaultValue": "embedding"
    },
    "openAIEmbeddingModelName": {
      "type": "string",
      "defaultValue": "text-embedding-3-large"
    },
    "openAIEmbeddingModelVersion": {
      "type": "string",
      "defaultValue": ""
    },
    "openAIEmbeddingModelCapacity": {
      "type": "int",
      "defaultValue": 350
    },
    "openAIEmbeddingModelSkuTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "openAIModelMaxTokens": {
      "type": "string",
      "defaultValue": "None"
    },
    "openAIModelStopSequence": {
      "type": "string",
      "defaultValue": "\\n"
    },
    "openAIModelStream": {
      "type": "bool",
      "defaultValue": false
    },
    "openAIEmbeddingDeploymentSecondaryEnabled": {
      "type": "bool",
      "defaultValue": false
    },
    "formRecognizerServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "formRecognizerResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "formRecognizerResourceGroupLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "formRecognizerSkuName": {
      "type": "string",
      "defaultValue": ""
    },
    "formRecognizerApiVersion": {
      "type": "string",
      "defaultValue": "2023-07-31"
    },
    "languageServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "languageServiceResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "languageServiceResourceGroupLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]"
    },
    "languageServiceSkuName": {
      "type": "string",
      "defaultValue": ""
    },
    "authClientId": {
      "type": "string",
      "defaultValue": ""
    },
    "authClientSecret": {
      "type": "securestring",
      "defaultValue": ""
    },
    "cosmosAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "cosmosSecondaryRegion": {
      "type": "string",
      "defaultValue": ""
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "assignRbacRoles": {
      "type": "bool",
      "defaultValue": true
    },
    "assignApimRoles": {
      "type": "bool",
      "defaultValue": true
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "$fxv#1": "{\r\n    \"openapi\": \"3.0.1\",\r\n    \"info\": {\r\n        \"title\": \"Message Generation API\",\r\n        \"description\": \"API for generating responses to user messages.\",\r\n        \"version\": \"1.0\"\r\n    },\r\n    \"servers\": [\r\n        {\r\n            \"url\": \"http://apim-zmu3dgqbq2cwi.azure-api.net/v1\"\r\n        },\r\n        {\r\n            \"url\": \"https://apim-zmu3dgqbq2cwi.azure-api.net/v1\"\r\n        }\r\n    ],\r\n    \"paths\": {\r\n        \"/message/feedback\": {\r\n            \"post\": {\r\n                \"summary\": \"Submit feedback for a message\",\r\n                \"description\": \"Submit feedback for a message\",\r\n                \"operationId\": \"post-message-feedback\",\r\n                \"requestBody\": {\r\n                    \"content\": {\r\n                        \"application/json\": {\r\n                            \"schema\": {\r\n                                \"required\": [\r\n                                    \"message_id\",\r\n                                    \"message_feedback\"\r\n                                ],\r\n                                \"type\": \"object\",\r\n                                \"properties\": {\r\n                                    \"message_id\": {\r\n                                        \"type\": \"string\",\r\n                                        \"format\": \"uuid\",\r\n                                        \"example\": \"c42473d6-245d-451e-a5aa-2194a7057381\"\r\n                                    },\r\n                                    \"message_feedback\": {\r\n                                        \"type\": \"string\",\r\n                                        \"example\": \"out_of_scope\"\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"example\": {\r\n                                \"message_id\": \"c42473d6-245d-451e-a5aa-2194a7057381\",\r\n                                \"message_feedback\": \"out_of_scope\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"Successfully updated message with feedback\",\r\n                        \"content\": {\r\n                            \"application/json\": {\r\n                                \"schema\": {\r\n                                    \"type\": \"object\",\r\n                                    \"properties\": {\r\n                                        \"message\": {\r\n                                            \"type\": \"string\",\r\n                                            \"example\": \"Successfully updated message with feedback out_of_scope\"\r\n                                        },\r\n                                        \"message_id\": {\r\n                                            \"type\": \"string\",\r\n                                            \"format\": \"uuid\",\r\n                                            \"example\": \"c42473d6-245d-451e-a5aa-2194a7057381\"\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"example\": {\r\n                                    \"message\": \"Successfully updated message with feedback out_of_scope\",\r\n                                    \"message_id\": \"c42473d6-245d-451e-a5aa-2194a7057381\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/message/update\": {\r\n            \"post\": {\r\n                \"summary\": \"Update a message\",\r\n                \"description\": \"Update a message\",\r\n                \"operationId\": \"post-message-update\",\r\n                \"requestBody\": {\r\n                    \"content\": {\r\n                        \"application/json\": {\r\n                            \"schema\": {\r\n                                \"required\": [\r\n                                    \"messages\",\r\n                                    \"conversation_id\"\r\n                                ],\r\n                                \"type\": \"object\",\r\n                                \"properties\": {\r\n                                    \"messages\": {\r\n                                        \"type\": \"array\",\r\n                                        \"items\": {\r\n                                            \"type\": \"object\",\r\n                                            \"properties\": {\r\n                                                \"role\": {\r\n                                                    \"type\": \"string\"\r\n                                                },\r\n                                                \"content\": {\r\n                                                    \"type\": \"string\"\r\n                                                },\r\n                                                \"id\": {\r\n                                                    \"type\": \"string\"\r\n                                                },\r\n                                                \"date\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"format\": \"date-time\"\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"conversation_id\": {\r\n                                        \"type\": \"string\"\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"example\": {\r\n                                \"messages\": [\r\n                                    {\r\n                                        \"role\": \"string\",\r\n                                        \"content\": \"string\",\r\n                                        \"id\": \"string\",\r\n                                        \"date\": \"string\"\r\n                                    }\r\n                                ],\r\n                                \"conversation_id\": \"string\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"Successful response\",\r\n                        \"content\": {\r\n                            \"application/json\": {\r\n                                \"schema\": {\r\n                                    \"required\": [\r\n                                        \"success\"\r\n                                    ],\r\n                                    \"type\": \"object\",\r\n                                    \"properties\": {\r\n                                        \"success\": {\r\n                                            \"type\": \"boolean\"\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"example\": {\r\n                                    \"success\": true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/message/generate\": {\r\n            \"post\": {\r\n                \"summary\": \"Generate a response to a user message\",\r\n                \"description\": \"Generate a response to a user message\",\r\n                \"operationId\": \"post-message-generate\",\r\n                \"requestBody\": {\r\n                    \"content\": {\r\n                        \"application/json\": {\r\n                            \"schema\": {\r\n                                \"type\": \"object\",\r\n                                \"properties\": {\r\n                                    \"messages\": {\r\n                                        \"type\": \"array\",\r\n                                        \"items\": {\r\n                                            \"type\": \"object\",\r\n                                            \"properties\": {\r\n                                                \"role\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"example\": \"user\"\r\n                                                },\r\n                                                \"content\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"example\": \"What is AAIP?\"\r\n                                                },\r\n                                                \"id\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"example\": \"091bf230-e99c-9451-ec91-f9b17c4d56f6\"\r\n                                                },\r\n                                                \"date\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"format\": \"date-time\",\r\n                                                    \"example\": \"2024-07-27T09:14:38.0000000+00:00\"\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    \"conversation_id\": {\r\n                                        \"type\": \"string\",\r\n                                        \"nullable\": true,\r\n                                        \"example\": null\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"example\": {\r\n                                \"messages\": [\r\n                                    {\r\n                                        \"role\": \"user\",\r\n                                        \"content\": \"What is AAIP?\",\r\n                                        \"id\": \"091bf230-e99c-9451-ec91-f9b17c4d56f6\",\r\n                                        \"date\": \"2024-07-27T09:14:38.0000000+00:00\"\r\n                                    }\r\n                                ],\r\n                                \"conversation_id\": null\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"Successful response\",\r\n                        \"content\": {\r\n                            \"application/json\": {\r\n                                \"schema\": {\r\n                                    \"type\": \"object\",\r\n                                    \"properties\": {\r\n                                        \"apim-request-id\": {\r\n                                            \"type\": \"string\",\r\n                                            \"example\": \"f7ab0ae3-4536-44d9-b490-346cf6a9e4bf\"\r\n                                        },\r\n                                        \"choices\": {\r\n                                            \"type\": \"array\",\r\n                                            \"items\": {\r\n                                                \"type\": \"object\",\r\n                                                \"properties\": {\r\n                                                    \"messages\": {\r\n                                                        \"type\": \"array\",\r\n                                                        \"items\": {\r\n                                                            \"type\": \"object\",\r\n                                                            \"properties\": {\r\n                                                                \"content\": {\r\n                                                                    \"type\": \"string\",\r\n                                                                    \"example\": \"\"\r\n                                                                },\r\n                                                                \"role\": {\r\n                                                                    \"type\": \"string\",\r\n                                                                    \"example\": \"tool\"\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        },\r\n                                        \"created\": {\r\n                                            \"type\": \"integer\",\r\n                                            \"example\": 1722544494\r\n                                        },\r\n                                        \"history_metadata\": {\r\n                                            \"type\": \"object\",\r\n                                            \"properties\": {\r\n                                                \"conversation_id\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"example\": \"6f83b969-a393-41b9-acd5-e5d10d8752d7\"\r\n                                                },\r\n                                                \"date\": {\r\n                                                    \"type\": \"string\",\r\n                                                    \"example\": \"2024-08-01 14:34:47 MDT-0600\"\r\n                                                }\r\n                                            }\r\n                                        },\r\n                                        \"id\": {\r\n                                            \"type\": \"string\",\r\n                                            \"example\": \"9bbdf5ff-eb25-4214-8ac9-7de5274a2766\"\r\n                                        },\r\n                                        \"model\": {\r\n                                            \"type\": \"string\",\r\n                                            \"example\": \"gpt-4o\"\r\n                                        },\r\n                                        \"object\": {\r\n                                            \"type\": \"string\",\r\n                                            \"example\": \"extensions.chat.completion\"\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"example\": {\r\n                                    \"apim-request-id\": \"f7ab0ae3-4536-44d9-b490-346cf6a9e4bf\",\r\n                                    \"choices\": [\r\n                                        {\r\n                                            \"messages\": [\r\n                                                {\r\n                                                    \"content\": \"\",\r\n                                                    \"role\": \"tool\"\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    ],\r\n                                    \"created\": 1722544494,\r\n                                    \"history_metadata\": {\r\n                                        \"conversation_id\": \"6f83b969-a393-41b9-acd5-e5d10d8752d7\",\r\n                                        \"date\": \"2024-08-01 14:34:47 MDT-0600\"\r\n                                    },\r\n                                    \"id\": \"9bbdf5ff-eb25-4214-8ac9-7de5274a2766\",\r\n                                    \"model\": \"gpt-4o\",\r\n                                    \"object\": \"extensions.chat.completion\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"components\": {\r\n        \"securitySchemes\": {\r\n            \"apiKeyHeader\": {\r\n                \"type\": \"apiKey\",\r\n                \"name\": \"Ocp-Apim-Subscription-Key\",\r\n                \"in\": \"header\"\r\n            },\r\n            \"apiKeyQuery\": {\r\n                \"type\": \"apiKey\",\r\n                \"name\": \"subscription-key\",\r\n                \"in\": \"query\"\r\n            }\r\n        }\r\n    },\r\n    \"security\": [\r\n        {\r\n            \"apiKeyHeader\": []\r\n        },\r\n        {\r\n            \"apiKeyQuery\": []\r\n        }\r\n    ]\r\n}",
    "$fxv#2": {
      "AccessReviewOperatorServiceRole": "76cc9ee4-d5d3-4a45-a930-26add3d73475",
      "AcrDelete": "c2f4ef07-c644-48eb-af81-4b1b4947fb11",
      "AcrImageSigner": "6cef56e8-d556-48e5-a04f-b8e64114680f",
      "AcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
      "AcrPush": "8311e382-0749-4cb8-b61a-304f252e45ec",
      "AcrQuarantineReader": "cdda3590-29a3-44f6-95f2-9f980659eb04",
      "AcrQuarantineWriter": "c8d4ff99-41c3-41a8-9f60-21dfdad59608",
      "AdvisorReviewsContributor": "8aac15f0-d885-4138-8afa-bfb5872f7d13",
      "AdvisorReviewsReader": "c64499e0-74c3-47ad-921c-13865957895c",
      "AgFoodPlatformDatasetAdmin": "a8d4b70f-0fb9-4f72-b267-b87b2f990aec",
      "AgFoodPlatformSensorPartnerContributor": "6b77f0a0-0d89-41cc-acd1-579c22c17a67",
      "AgFoodPlatformServiceAdmin": "f8da80de-1ff9-4747-ad80-a19b7f6079e3",
      "AgFoodPlatformServiceContributor": "8508508a-4469-4e45-963b-2518ee0bb728",
      "AgFoodPlatformServiceReader": "7ec7ccdc-f61e-41fe-9aaf-980df0a44eba",
      "AnyBuildBuilder": "a2138dac-4907-4679-a376-736901ed8ad8",
      "APIManagementDeveloperPortalContentEditor": "c031e6a8-4391-4de0-8d69-4706a7ed3729",
      "APIManagementServiceContributor": "312a565d-c81f-4fd8-895a-4e21e48d571c",
      "APIManagementServiceOperatorRole": "e022efe7-f5ba-4159-bbe4-b44f577e9b61",
      "APIManagementServiceReaderRole": "71522526-b88f-4d52-b57f-d31fc3546d0d",
      "APIManagementServiceWorkspaceAPIDeveloper": "9565a273-41b9-4368-97d2-aeb0c976a9b3",
      "APIManagementServiceWorkspaceAPIProductManager": "d59a3e9c-6d52-4a5a-aeed-6bf3cf0e31da",
      "APIManagementWorkspaceAPIDeveloper": "56328988-075d-4c6a-8766-d93edd6725b6",
      "APIManagementWorkspaceAPIProductManager": "73c2c328-d004-4c5e-938c-35c6f5679a1f",
      "APIManagementWorkspaceContributor": "0c34c906-8d99-4cb7-8bb7-33f5b0a1a799",
      "APIManagementWorkspaceReader": "ef1c2c96-4a77-49e8-b9a4-6179fe1d2fd2",
      "AppComplianceAutomationAdministrator": "0f37683f-2463-46b6-9ce7-9b788b988ba2",
      "AppComplianceAutomationReader": "ffc6bbe0-e443-4c3b-bf54-26581bb2f78e",
      "AppConfigurationDataOwner": "5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b",
      "AppConfigurationDataReader": "516239f1-63e1-4d78-a4de-a74fb236a071",
      "AppGwforContainersConfigurationManager": "fbc52c3f-28ad-4303-a892-8a056630b8f1",
      "ApplicationGroupContributor": "ca6382a4-1721-4bcf-a114-ff0c70227b6b",
      "ApplicationInsightsComponentContributor": "ae349356-3a1b-4a5e-921d-050484c6347e",
      "ApplicationInsightsSnapshotDebugger": "08954f03-6346-4c2e-81c0-ec3a5cfae23b",
      "ASEShareRefreshData": "e2472aa6-cbfa-4fa6-91aa-72a0569352db",
      "AttestationContributor": "bbf86eb8-f7b4-4cce-96e4-18cddf81d86e",
      "AttestationReader": "fd1bd22b-8476-40bc-a0bc-69b95687b9f3",
      "AutomationContributor": "f353d9bd-d4a6-484e-a77a-8050b599b867",
      "AutomationJobOperator": "4fe576fe-1146-4730-92eb-48519fa6bf9f",
      "AutomationOperator": "d3881f73-407a-4167-8283-e981cbba0404",
      "AutomationRunbookOperator": "5fb5aef8-1081-4b8e-bb16-9d5d0385bab5",
      "AutonomousDevelopmentPlatformDataContributor(Preview)": "b8b15564-4fa6-4a59-ab12-03e1d9594795",
      "AutonomousDevelopmentPlatformDataOwner(Preview)": "27f8b550-c507-4db9-86f2-f4b8e816d59d",
      "AutonomousDevelopmentPlatformDataReader(Preview)": "d63b75f7-47ea-4f27-92ac-e0d173aaf093",
      "AvereContributor": "4f8fab4f-1852-4a58-a46a-8eaf358af14a",
      "AvereOperator": "c025889f-8102-4ebf-b32c-fc0c6f0c6bd9",
      "AzureAIDeveloper": "64702f94-c441-49e6-a78b-ef80e0188fee",
      "AzureAIInferenceDeploymentOperator": "3afb7f49-54cb-416e-8c09-6dc049efa503",
      "AzureAPICenterDataReader": "c7244dfb-f447-457d-b2ba-3999044d1706",
      "AzureArcEnabledKubernetesClusterUserRole": "00493d72-78f6-4148-b6c5-d3ce8e4799dd",
      "AzureArcKubernetesAdmin": "dffb1e0c-446f-4dde-a09f-99eb5cc68b96",
      "AzureArcKubernetesClusterAdmin": "8393591c-06b9-48a2-a542-1bd6b377f6a2",
      "AzureArcKubernetesViewer": "63f0a09d-1495-4db4-a681-037d84835eb4",
      "AzureArcKubernetesWriter": "5b999177-9696-4545-85c7-50de3797e5a1",
      "AzureArcScVmmAdministratorrole": "a92dfd61-77f9-4aec-a531-19858b406c87",
      "AzureArcScVmmPrivateCloudsOnboarding": "6aac74c4-6311-40d2-bbdd-7d01e7c6e3a9",
      "AzureArcScVmmPrivateCloudUser": "c0781e91-8102-4553-8951-97c6d4243cda",
      "AzureArcScVmmVMContributor": "e582369a-e17b-42a5-b10c-874c387c530b",
      "AzureArcVMwareAdministratorrole": "ddc140ed-e463-4246-9145-7c664192013f",
      "AzureArcVMwarePrivateCloudsOnboarding": "67d33e57-3129-45e6-bb0b-7cc522f762fa",
      "AzureArcVMwarePrivateCloudUser": "ce551c02-7c42-47e0-9deb-e3b6fc3a9a83",
      "AzureArcVMwareVMContributor": "b748a06d-6150-4f8a-aaa9-ce3940cd96cb",
      "AzureCenterforSAPsolutionsadministrator": "7b0c7e81-271f-4c71-90bf-e30bdfdbc2f7",
      "AzureCenterforSAPsolutionsManagementrole": "6d949e1d-41e2-46e3-8920-c6e4f31a8310",
      "AzureCenterforSAPsolutionsreader": "05352d14-a920-4328-a0de-4cbe7430e26b",
      "AzureCenterforSAPsolutionsservicerole": "aabbc5dd-1af0-458b-a942-81af88f9c138",
      "AzureCenterforSAPsolutionsServiceroleformanagement": "0105a6b0-4bb9-43d2-982a-12806f9faddb",
      "AzureConnectedMachineOnboarding": "b64e21ea-ac4e-4cdf-9dc9-5b892992bee7",
      "AzureConnectedMachineResourceAdministrator": "cd570a14-e51a-42ad-bac8-bafd67325302",
      "AzureConnectedMachineResourceManager": "f5819b54-e033-4d82-ac66-4fec3cbf3f4c",
      "AzureConnectedSQLServerOnboarding": "e8113dce-c529-4d33-91fa-e9b972617508",
      "AzureCustomerLockboxApproverforSubscription": "4dae6930-7baf-46f5-909e-0383bc931c46",
      "AzureDigitalTwinsDataOwner": "bcd981a7-7f74-457b-83e1-cceb9e632ffe",
      "AzureDigitalTwinsDataReader": "d57506d4-4c8d-48b1-8587-93c323f6a5a3",
      "AzureEdgeOn-SiteDeploymentEngineer": "207bcc4b-86a6-4487-9141-d6c1f4c238aa",
      "AzureEventHubsDataOwner": "f526a384-b230-433a-b45c-95f59c4a2dec",
      "AzureEventHubsDataReceiver": "a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
      "AzureEventHubsDataSender": "2b629674-e913-4c01-ae53-ef4638d8f975",
      "AzureExtensionforSQLServerDeployment": "7392c568-9289-4bde-aaaa-b7131215889d",
      "AzureFrontDoorDomainContributor": "0ab34830-df19-4f8c-b84e-aa85b8afa6e8",
      "AzureFrontDoorDomainReader": "0f99d363-226e-4dca-9920-b807cf8e1a5f",
      "AzureFrontDoorProfileReader": "662802e2-50f6-46b0-aed2-e834bacc6d12",
      "AzureFrontDoorSecretContributor": "3f2eb865-5811-4578-b90a-6fc6fa0df8e5",
      "AzureFrontDoorSecretReader": "0db238c4-885e-4c4f-a933-aa2cef684fca",
      "Azureimpact-insightreader": "dfb2f09d-25f8-4558-8986-497084006d7a",
      "AzureKubernetesFleetManagerContributorRole": "63bb64ad-9799-4770-b5c3-24ed299a07bf",
      "AzureKubernetesFleetManagerRBACAdmin": "434fb43a-c01c-447e-9f67-c3ad923cfaba",
      "AzureKubernetesFleetManagerRBACClusterAdmin": "18ab4d3d-a1bf-4477-8ad9-8359bc988f69",
      "AzureKubernetesFleetManagerRBACReader": "30b27cfc-9c84-438e-b0ce-70e35255df80",
      "AzureKubernetesFleetManagerRBACWriter": "5af6afb3-c06c-4fa4-8848-71a8aee05683",
      "AzureKubernetesServiceClusterAdminRole": "0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
      "AzureKubernetesServiceClusterMonitoringUser": "1afdec4b-e479-420e-99e7-f82237c7c5e6",
      "AzureKubernetesServiceClusterUserRole": "4abbcc35-e782-43d8-92c5-2d3f1bd2253f",
      "AzureKubernetesServiceContributorRole": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
      "AzureKubernetesServiceHybridClusterAdminRole": "b5092dac-c796-4349-8681-1a322a31c3f9",
      "AzureKubernetesServiceHybridClusterUserRole": "fc3f91a1-40bf-4439-8c46-45edbd83563a",
      "AzureKubernetesServiceHybridContributorRole": "e7037d40-443a-4434-a3fb-8cd202011e1d",
      "AzureKubernetesServicePolicyAdd-onDeployment": "18ed5180-3e48-46fd-8541-4ea054d57064",
      "AzureKubernetesServiceRBACAdmin": "3498e952-d568-435e-9b2c-8d77e338d7f7",
      "AzureKubernetesServiceRBACClusterAdmin": "b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b",
      "AzureKubernetesServiceRBACReader": "7f6c6a51-bcf8-42ba-9220-52d62157d7db",
      "AzureKubernetesServiceRBACWriter": "a7ffa36f-339b-4b5c-8bdf-e2c188b2c0eb",
      "AzureMachineLearningWorkspaceConnectionSecretsReader": "ea01e6af-a1c1-4350-9563-ad00f8c72ec5",
      "AzureMapsContributor": "dba33070-676a-4fb0-87fa-064dc56ff7fb",
      "AzureMapsDataContributor": "8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204",
      "AzureMapsDataReadandBatchRole": "d6470a16-71bd-43ab-86b3-6f3a73f4e787",
      "AzureMapsDataReader": "423170ca-a8f6-4b0f-8487-9e4eb8f49bfa",
      "AzureMapsSearchandRenderDataReader": "6be48352-4f82-47c9-ad5e-0acacefdb005",
      "AzureMLComputeOperator": "e503ece1-11d0-4e8e-8e2c-7a6c3bf38815",
      "AzureMLDataScientist": "f6c7c914-8db3-469d-8ca1-694a8f32e121",
      "AzureMLMetricsWriter(preview)": "635dd51f-9968-44d3-b7fb-6d9a6bd613ae",
      "AzureMLRegistryUser": "1823dd4f-9b8c-4ab6-ab4e-7397a3684615",
      "AzureProgrammableConnectivityGatewayUser": "609c0c20-e0a0-4a71-b99f-e7e755ac493d",
      "AzureRedHatOpenShiftAzureFilesStorageOperatorRole": "0d7aedc0-15fd-4a67-a412-efad370c947e",
      "AzureRedHatOpenShiftCloudControllerManagerRole": "a1f96423-95ce-4224-ab27-4e3dc72facd4",
      "AzureRedHatOpenShiftClusterIngressOperatorRole": "0336e1d3-7a87-462b-b6db-342b63f7802c",
      "AzureRedHatOpenShiftImageRegistryOperatorRole": "8b32b316-c2f5-4ddf-b05b-83dacd2d08b5",
      "AzureRedHatOpenShiftMachineAPIOperatorRole": "0358943c-7e01-48ba-8889-02cc51d78637",
      "AzureRedHatOpenShiftNetworkOperatorRole": "be7a6435-15ae-4171-8f30-4a343eff9e8f",
      "AzureRedHatOpenShiftServiceOperator": "4436bae4-7702-4c84-919b-c4069ff25ee2",
      "AzureRedHatOpenShiftStorageOperatorRole": "5b7237c5-45e1-49d6-bc18-a1f62f400748",
      "AzureRelayListener": "26e0b698-aa6d-4085-9386-aadae190014d",
      "AzureRelayOwner": "2787bf04-f1f5-4bfe-8383-c8a24483ee38",
      "AzureRelaySender": "26baccc8-eea7-41f1-98f4-1762cc7f685d",
      "AzureResourceBridgeDeploymentRole": "7b1f81f9-4196-4058-8aae-762e593270df",
      "AzureResourceNotificationsSystemTopicsSubscriber": "0b962ed2-6d56-471c-bd5f-3477d83a7ba4",
      "AzureServiceBusDataOwner": "090c5cfd-751d-490a-894a-3ce6f1109419",
      "AzureServiceBusDataReceiver": "4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0",
      "AzureServiceBusDataSender": "69a216fc-b8fb-44d8-bc22-1f3c2cd27a39",
      "AzureSphereContributor": "8b9dfcab-4b77-4632-a6df-94bd07820648",
      "AzureSphereOwner": "5a382001-fe36-41ff-bba4-8bf06bd54da9",
      "AzureSpherePublisher": "6d994134-994b-4a59-9974-f479f0b227fb",
      "AzureSphereReader": "c8ae6279-5a0b-4cb2-b3f0-d4d62845742c",
      "AzureSpringAppsApplicationConfigurationServiceLogReaderRole": "6593e776-2a30-40f9-8a32-4fe28b77655d",
      "AzureSpringAppsConnectRole": "80558df3-64f9-4c0f-b32d-e5094b036b0b",
      "AzureSpringAppsManagedComponentsLogReaderRole": "52fd16bd-6ed5-46af-9c40-29cbd7952a29",
      "AzureSpringAppsRemoteDebuggingRole": "a99b0159-1064-4c22-a57b-c9b3caa1c054",
      "AzureSpringAppsSpringCloudGatewayLogReaderRole": "4301dc2a-25a9-44b0-ae63-3636cf7f2bd2",
      "AzureSpringCloudConfigServerContributor": "a06f5c24-21a7-4e1a-aa2b-f19eb6684f5b",
      "AzureSpringCloudConfigServerReader": "d04c6db6-4947-4782-9e91-30a88feb7be7",
      "AzureSpringCloudDataReader": "b5537268-8956-4941-a8f0-646150406f0c",
      "AzureSpringCloudServiceRegistryContributor": "f5880b48-c26d-48be-b172-7927bfa1c8f1",
      "AzureSpringCloudServiceRegistryReader": "cff1b556-2399-4e7e-856d-a8f754be7b65",
      "AzureStackHCIAdministrator": "bda0d508-adf1-4af0-9c28-88919fc3ae06",
      "AzureStackHCIDeviceManagementRole": "865ae368-6a45-4bd1-8fbf-0d5151f56fc1",
      "AzureStackHCIVMContributor": "874d1c73-6003-4e60-a13a-cb31ea190a85",
      "AzureStackHCIVMReader": "4b3fe76c-f777-4d24-a2d7-b027b0f7b273",
      "AzureStackRegistrationOwner": "6f12a6df-dd06-4f3e-bcb1-ce8be600526a",
      "AzureUsageBillingDataSender": "f0310ce6-e953-4cf8-b892-fb1c87eaf7f6",
      "AzureVMManagedidentitiesrestoreContributor": "6ae96244-5829-4925-a7d3-5975537d91dd",
      "BackupContributor": "5e467623-bb1f-42f4-a55d-6e525e11384b",
      "BackupOperator": "00c29273-979b-4161-815c-10b084fb9324",
      "BackupReader": "a795c7a0-d4a2-40c1-ae25-d81f01202912",
      "BayerAgPoweredServicesCWUMSolution": "a9b99099-ead7-47db-8fcf-072597a61dfa",
      "BayerAgPoweredServicesGDUSolution": "c4bc862a-3b64-4a35-a021-a380c159b042",
      "BayerAgPoweredServicesImagerySolution": "ef29765d-0d37-4119-a4f8-f9f9902c9588",
      "BillingReader": "fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64",
      "BizTalkContributor": "5e3c6656-6cfa-4708-81fe-0de47ac73342",
      "BlockchainMemberNodeAccess(Preview)": "31a002a1-acaf-453e-8a5b-297c9ca1ea24",
      "BlueprintContributor": "41077137-e803-4205-871c-5a86e6a753b4",
      "BlueprintOperator": "437d2ced-4a38-4302-8479-ed2bcb43d090",
      "CarbonOptimizationReader": "fa0d39e6-28e5-40cf-8521-1eb320653a4c",
      "CDNEndpointContributor": "426e0c7f-0c7e-4658-b36f-ff54d6c29b45",
      "CDNEndpointReader": "871e35f6-b5c1-49cc-a043-bde969a0f2cd",
      "CDNProfileContributor": "ec156ff8-a8d1-4d15-830c-5b80698ca432",
      "CDNProfileReader": "8f96442b-4075-438f-813d-ad51ab4019af",
      "ChamberAdmin": "4e9b8407-af2e-495b-ae54-bb60a55b1b5a",
      "ChamberUser": "4447db05-44ed-4da3-ae60-6cbece780e32",
      "ClassicNetworkContributor": "b34d265f-36f7-4a0d-a4d4-e158ca92e90f",
      "ClassicStorageAccountContributor": "86e8f5dc-a6e9-4c67-9d15-de283e8eac25",
      "ClassicStorageAccountKeyOperatorServiceRole": "985d6b00-f706-48f5-a6fe-d0ca12fb668d",
      "ClassicVirtualMachineContributor": "d73bb868-a0df-4d4d-bd69-98a00b01fccb",
      "ClearDBMySQLDBContributor": "9106cda0-8a86-4e81-b686-29a22c54effe",
      "CodeSigningCertificateProfileSigner": "2837e146-70d7-4cfd-ad55-7efa6464f958",
      "CodeSigningIdentityVerifier": "4339b7cf-9826-4e41-b4ed-c7f4505dac08",
      "CognitiveSearchServerlessDataContributor": "7ac06ca7-21ca-47e3-a67b-cbd6e6223baf",
      "CognitiveSearchServerlessDataReader": "79b01272-bf9f-4f4c-9517-5506269cf524",
      "CognitiveServicesContributor": "25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68",
      "CognitiveServicesCustomVisionContributor": "c1ff6cc2-c111-46fe-8896-e0ef812ad9f3",
      "CognitiveServicesCustomVisionDeployment": "5c4089e1-6d96-4d2f-b296-c1bc7137275f",
      "CognitiveServicesCustomVisionLabeler": "88424f51-ebe7-446f-bc41-7fa16989e96c",
      "CognitiveServicesCustomVisionReader": "93586559-c37d-4a6b-ba08-b9f0940c2d73",
      "CognitiveServicesCustomVisionTrainer": "0a5ae4ab-0d65-4eeb-be61-29fc9b54394b",
      "CognitiveServicesDataReader(Preview)": "b59867f0-fa02-499b-be73-45a86b5b3e1c",
      "CognitiveServicesFaceRecognizer": "9894cab4-e18a-44aa-828b-cb588cd6f2d7",
      "CognitiveServicesImmersiveReaderUser": "b2de6794-95db-4659-8781-7e080d3f2b9d",
      "CognitiveServicesLanguageOwner": "f07febfe-79bc-46b1-8b37-790e26e6e498",
      "CognitiveServicesLanguageReader": "7628b7b8-a8b2-4cdc-b46f-e9b35248918e",
      "CognitiveServicesLanguageWriter": "f2310ca1-dc64-4889-bb49-c8e0fa3d47a8",
      "CognitiveServicesLUISOwner": "f72c8140-2111-481c-87ff-72b910f6e3f8",
      "CognitiveServicesLUISReader": "18e81cdc-4e98-4e29-a639-e7d10c5a6226",
      "CognitiveServicesLUISWriter": "6322a993-d5c9-4bed-b113-e49bbea25b27",
      "CognitiveServicesMetricsAdvisorAdministrator": "cb43c632-a144-4ec5-977c-e80c4affc34a",
      "CognitiveServicesMetricsAdvisorUser": "3b20f47b-3825-43cb-8114-4bd2201156a8",
      "CognitiveServicesOpenAIContributor": "a001fd3d-188f-4b5d-821b-7da978bf7442",
      "CognitiveServicesOpenAIUser": "5e0bd9bd-7b93-4f28-af87-19fc36ad61bd",
      "CognitiveServicesQnAMakerEditor": "f4cc2bf9-21be-47a1-bdf1-5c5804381025",
      "CognitiveServicesQnAMakerReader": "466ccd10-b268-4a11-b098-b4849f024126",
      "CognitiveServicesSpeechContributor": "0e75ca1e-0464-4b4d-8b93-68208a576181",
      "CognitiveServicesSpeechUser": "f2dc8367-1007-4938-bd23-fe263f013447",
      "CognitiveServicesUsagesReader": "bba48692-92b0-4667-a9ad-c31c7b334ac2",
      "CognitiveServicesUser": "a97b65f3-24c7-4388-baec-2e87135dc908",
      "CollaborativeDataContributor": "daa9e50b-21df-454c-94a6-a8050adab352",
      "CollaborativeRuntimeOperator": "7a6f0e70-c033-4fb1-828c-08514e5f4102",
      "CommunityContributorRole": "49435da6-99fe-48a5-a235-fc668b9dc04a",
      "CommunityOwnerRole": "5e28a61e-8040-49db-b175-bb5b88af6239",
      "CommunityReaderRole": "e6aadb6b-e64f-41c0-9392-d2bba3bc3ebc",
      "ComputeDiagnosticsRole": "df2711a6-406d-41cf-b366-b0250bff9ad1",
      "ComputeGallerySharingAdmin": "1ef6a3be-d0ac-425d-8c01-acb62866290b",
      "ConnectedClusterManagedIdentityCheckAccessReader": "65a14201-8f6c-4c28-bec4-12619c5a9aaa",
      "ContainerAppReader": "ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b",
      "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
      "Contributorw/NetworkReady-only": "ef2e6351-aaa6-4608-8d63-71880b149027",
      "CosmosBackupOperator": "db7b14f2-5adf-42da-9f96-f2ee17bab5cb",
      "CosmosDBAccountReaderRole": "fbdf93bf-df7d-467e-a4d2-9458aa1360c8",
      "CosmosDBOperator": "230815da-be43-4aae-9cb4-875f7bd000aa",
      "CosmosRestoreOperator": "5432c526-bc82-444a-b7ba-57c5b0b5b34f",
      "CostManagementContributor": "434105ed-43f6-45c7-a02f-909b2ba83430",
      "CostManagementReader": "72fafb9e-0641-4937-9268-a91bfd8191a3",
      "DataBoundaryTenantAdministrator": "d1a38570-4b05-4d70-b8e4-1100bcf76d12",
      "DataBoxContributor": "add466c9-e687-43fc-8d98-dfcf8d720be5",
      "DataBoxReader": "028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027",
      "DataFactoryContributor": "673868aa-7521-48a0-acc6-0f60742d39f5",
      "DataLabeling-Labeler": "c6decf44-fd0a-444c-a844-d653c394e7ab",
      "DataLakeAnalyticsDeveloper": "47b7735b-770e-4598-a7da-8b91488b4c88",
      "DataOperatorforManagedDisks": "959f8984-c045-4866-89c7-12bf9737be2e",
      "DataPurger": "150f5e0c-0603-4f03-8c7f-cf70034c4e90",
      "DefenderforStorageDataScanner": "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
      "DefenderKubernetesAgentOperator": "8bb6f106-b146-4ee6-a3f9-b9c5a96e0ae5",
      "DeIDBatchDataOwner": "8a90fa6b-6997-4a07-8a95-30633a7c97b9",
      "DeIDBatchDataReader": "b73a14ee-91f5-41b7-bd81-920e12466be9",
      "DeIDRealtimeDataUser": "bb6577c4-ea0a-40b2-8962-ea18cb8ecd4e",
      "DeploymentEnvironmentsReader": "eb960402-bf75-4cc3-8d68-35b34f960f72",
      "DeploymentEnvironmentsUser": "18e40d4e-8d2e-438d-97e1-9528336e149c",
      "DesktopVirtualizationApplicationGroupContributor": "86240b0e-9422-4c43-887b-b61143f32ba8",
      "DesktopVirtualizationApplicationGroupReader": "aebf23d0-b568-4e86-b8f9-fe83a2c6ab55",
      "DesktopVirtualizationContributor": "082f0a83-3be5-4ba1-904c-961cca79b387",
      "DesktopVirtualizationHostPoolContributor": "e307426c-f9b6-4e81-87de-d99efb3c32bc",
      "DesktopVirtualizationHostPoolReader": "ceadfde2-b300-400a-ab7b-6143895aa822",
      "DesktopVirtualizationPowerOnContributor": "489581de-a3bd-480d-9518-53dea7416b33",
      "DesktopVirtualizationPowerOnOffContributor": "40c5ff49-9181-41f8-ae61-143b0e78555e",
      "DesktopVirtualizationReader": "49a72310-ab8d-41df-bbb0-79b649203868",
      "DesktopVirtualizationSessionHostOperator": "2ad6aaab-ead9-4eaa-8ac5-da422f562408",
      "DesktopVirtualizationUser": "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
      "DesktopVirtualizationUserSessionOperator": "ea4bfff8-7fb4-485a-aadd-d4129a0ffaa6",
      "DesktopVirtualizationVirtualMachineContributor": "a959dbd1-f747-45e3-8ba6-dd80f235f97c",
      "DesktopVirtualizationWorkspaceContributor": "21efdde3-836f-432b-bf3d-3e8e734d4b2b",
      "DesktopVirtualizationWorkspaceReader": "0fa44ee9-7a7d-466b-9bb2-2bf446b1204d",
      "DevCenterDevBoxUser": "45d50f46-0b78-4001-a660-4198cbe8cd05",
      "DevCenterProjectAdmin": "331c37c6-af14-46d9-b9f4-e1909e1b95a0",
      "DeviceProvisioningServiceDataContributor": "dfce44e4-17b7-4bd1-a6d1-04996ec95633",
      "DeviceProvisioningServiceDataReader": "10745317-c249-44a1-a5ce-3a4353c0bbd8",
      "DeviceUpdateAdministrator": "02ca0879-e8e4-47a5-a61e-5c618b76e64a",
      "DeviceUpdateContentAdministrator": "0378884a-3af5-44ab-8323-f5b22f9f3c98",
      "DeviceUpdateContentReader": "d1ee9a80-8b14-47f0-bdc2-f4a351625a7b",
      "DeviceUpdateDeploymentsAdministrator": "e4237640-0e3d-4a46-8fda-70bc94856432",
      "DeviceUpdateDeploymentsReader": "49e2f5d2-7741-4835-8efa-19e1fe35e47f",
      "DeviceUpdateReader": "e9dba6fb-3d52-4cf0-bce3-f06ce71b9e0f",
      "DevTestLabsUser": "76283e04-6283-4c54-8f91-bcf1374a3c64",
      "DICOMDataOwner": "58a3b984-7adf-4c20-983a-32417c86fbc8",
      "DICOMDataReader": "e89c7a3c-2f64-4fa1-a847-3e4c9ba4283a",
      "DiskBackupReader": "3e5e47e6-65f7-47ef-90b5-e5dd4d455f24",
      "DiskPoolOperator": "60fc6e62-5479-42d4-8bf4-67625fcc2840",
      "DiskRestoreOperator": "b50d9833-a0cb-478e-945f-707fcc997c13",
      "DiskSnapshotContributor": "7efff54f-a5b4-42b5-a1c5-5411624893ce",
      "DNSResolverContributor": "0f2ebee7-ffd4-4fc0-b3b7-664099fdad5d",
      "DNSZoneContributor": "befefa01-2a29-4197-83a8-272ff33ce314",
      "DocumentDBAccountContributor": "5bd9cd88-fe45-4216-938b-f97437e15450",
      "DomainServicesContributor": "eeaeda52-9324-47f6-8069-5d5bade478b2",
      "DomainServicesReader": "361898ef-9ed1-48c2-849c-a832951106bb",
      "ElasticSANNetworkAdmin": "fa6cecf6-5db3-4c43-8470-c540bcb4eafa",
      "ElasticSANOwner": "80dcbedb-47ef-405d-95bd-188a1b4ac406",
      "ElasticSANReader": "af6a70f8-3c9f-4105-acf1-d719e9fca4ca",
      "ElasticSANSnapshotExporter": "1c4770c0-34f7-4110-a1ea-a5855cc7a939",
      "ElasticSANVolumeGroupOwner": "a8281131-f312-4f34-8d98-ae12be9f0d23",
      "ElasticSANVolumeImporter": "90e8b822-3e73-47b5-868a-787dc80c008f",
      "EnclaveContributorRole": "19feefae-eacc-4106-81fd-ac34c0671f14",
      "EnclaveOwnerRole": "3d5f3eff-eb94-473d-91e3-7aac74d6c0bb",
      "EnclaveReaderRole": "86fede04-b259-4277-8c3e-e26b9865abd8",
      "EventGridContributor": "1e241071-0855-49ea-94dc-649edcd759de",
      "EventGridDataContributor": "1d8c3fe3-8864-474b-8749-01e3783e8157",
      "EventGridDataReceiver": "78cbd9e7-9798-4e2e-9b5a-547d9ebb31fb",
      "EventGridDataSender": "d5a91429-5739-47e2-a06b-3470a27159e7",
      "EventGridEventSubscriptionContributor": "428e0ff0-5e57-4d9c-a221-2c70d0e0a443",
      "EventGridEventSubscriptionReader": "2414bbcf-6497-4faf-8c65-045460748405",
      "EventGridTopicSpacesPublisher": "a12b0b94-b317-4dcd-84a8-502ce99884c6",
      "EventGridTopicSpacesSubscriber": "4b0f2fd7-60b4-4eca-896f-4435034f8bf5",
      "ExperimentationAdministrator": "7f646f1b-fa08-80eb-a33b-edd6ce5c915c",
      "ExperimentationContributor": "7f646f1b-fa08-80eb-a22b-edd6ce5c915c",
      "ExperimentationMetricContributor": "6188b7c9-7d01-4f99-a59f-c88b630326c0",
      "ExperimentationReader": "49632ef5-d9ac-41f4-b8e7-bbe587fa74a1",
      "FHIRDataContributor": "5a1fc7df-4bf1-4951-a576-89034ee01acd",
      "FHIRDataConverter": "a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
      "FHIRDataExporter": "3db33094-8700-4567-8da5-1501d4e7e843",
      "FHIRDataImporter": "4465e953-8ced-4406-a58e-0f6e3f3b530b",
      "FHIRDataReader": "4c8d0bbc-75d3-4935-991f-5f3c56d81508",
      "FHIRDataWriter": "3f88fce4-5892-4214-ae73-ba5294559913",
      "FHIRSMARTUser": "4ba50f17-9666-485c-a643-ff00808643f0",
      "FirmwareAnalysisAdmin": "9c1607d1-791d-4c68-885d-c7b7aaff7c8a",
      "GrafanaAdmin": "22926164-76b3-42b3-bc55-97df8dab3e41",
      "GrafanaEditor": "a79a5197-3a5c-4973-a920-486035ffd60f",
      "GrafanaViewer": "60921a7e-fef1-4a43-9b16-a26c52ad4769",
      "GraphOwner": "b60367af-1334-4454-b71e-769d9a4f83d9",
      "GuestConfigurationResourceContributor": "088ab73d-1256-47ae-bea9-9de8e7131f31",
      "HDInsightClusterOperator": "61ed4efc-fab3-44fd-b111-e24485cc132a",
      "HDInsightDomainServicesContributor": "8d8d5a11-05d3-4bda-a417-a08778121c7c",
      "HDInsightonAKSClusterAdmin": "fd036e6b-1266-47a0-b0bb-a05d04831731",
      "HDInsightonAKSClusterPoolAdmin": "7656b436-37d4-490a-a4ab-d39f838f0042",
      "HierarchySettingsAdministrator": "350f8d15-c687-4448-8ae1-157740a3936d",
      "HybridServerOnboarding": "5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb",
      "HybridServerResourceAdministrator": "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
      "ImpactReader": "68ff5d27-c7f5-4fa9-a21c-785d0df7bd9e",
      "ImpactReporter": "36e80216-a7e8-4f42-a7e1-f12c98cbaf8a",
      "IntegrationServiceEnvironmentContributor": "a41e2c5b-bd99-4a07-88f4-9bf657a760b8",
      "IntegrationServiceEnvironmentDeveloper": "c7aa55d3-1abb-444a-a5ca-5e51e485d6ec",
      "IntelligentSystemsAccountContributor": "03a6d094-3444-4b3d-88af-7477090a9e5e",
      "IoTHubDataContributor": "4fc6c259-987e-4a07-842e-c321cc9d413f",
      "IoTHubDataReader": "b447c946-2db7-41ec-983d-d8bf3b1c77e3",
      "IoTHubRegistryContributor": "4ea46cd5-c1b2-4a8e-910b-273211f9ce47",
      "IoTHubTwinContributor": "494bdba2-168f-4f31-a0a1-191d2f7c028c",
      "IPAMPoolContributor": "7b3e853f-ad5d-4fb5-a7b8-56a3581c7037",
      "KeyVaultAdministrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
      "KeyVaultCertificatesOfficer": "a4417e6f-fecd-4de8-b567-7b0420556985",
      "KeyVaultCertificateUser": "db79e9a7-68ee-4b58-9aeb-b90e7c24fcba",
      "KeyVaultContributor": "f25e0fa2-a7c8-4377-a976-54943a77a395",
      "KeyVaultCryptoOfficer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
      "KeyVaultCryptoServiceEncryptionUser": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
      "KeyVaultCryptoServiceReleaseUser": "08bbd89e-9f13-488c-ac41-acfcb10c90ab",
      "KeyVaultCryptoUser": "12338af0-0e69-4776-bea7-57ae8d297424",
      "KeyVaultDataAccessAdministrator": "8b54135c-b56d-4d72-a534-26097cfdc8d8",
      "KeyVaultReader": "21090545-7ca7-4776-b22c-e363652d74d2",
      "KeyVaultSecretsOfficer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
      "KeyVaultSecretsUser": "4633458b-17de-408a-b874-0445c86b69e6",
      "KnowledgeConsumer": "ee361c5d-f7b5-4119-b4b6-892157c8f64c",
      "KubernetesAgentlessOperator": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
      "KubernetesCluster-AzureArcOnboarding": "34e09817-6cbe-4d01-b1a2-e0eac5743d41",
      "KubernetesExtensionContributor": "85cb6faf-e071-4c9b-8136-154b5a04f717",
      "KubernetesNamespaceUser": "ba79058c-0414-4a34-9e42-c3399d80cd5a",
      "KubernetesRuntimeStorageClassContributorRole": "0cd9749a-3aaf-4ae5-8803-bd217705bf3b",
      "LabAssistant": "ce40b423-cede-4313-a93f-9b28290b72e1",
      "LabContributor": "5daaa2af-1fe8-407c-9122-bba179798270",
      "LabCreator": "b97fb8bc-a8b2-4522-a38b-dd33c7e65ead",
      "LabOperator": "a36e6959-b6be-4b12-8e9f-ef4b474d304d",
      "LabServicesContributor": "f69b8690-cc87-41d6-b77a-a4bc3c0a966f",
      "LabServicesReader": "2a5c394f-5eb7-4d4f-9c8e-e8eae39faebc",
      "LandingZoneManagementOwner": "38863829-c2a4-4f8d-b1d2-2e325973ebc7",
      "LandingZoneManagementReader": "8fe6e843-6d9e-417b-9073-106b048f50bb",
      "LoadTestContributor": "749a398d-560b-491b-bb21-08924219302e",
      "LoadTestOwner": "45bb0b16-2f0c-4e78-afaa-a07599b003f6",
      "LoadTestReader": "3ae3fb29-0000-4ccd-bf80-542e7b26e081",
      "LocalNGFirewallAdministratorrole": "a8835c7d-b5cb-47fa-b6f0-65ea10ce07a2",
      "LocalRulestacksAdministratorrole": "bfc3b73d-c6ff-45eb-9a5f-40298295bf20",
      "LogAnalyticsContributor": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
      "LogAnalyticsReader": "73c42c96-874c-492b-b04d-ab87d138a893",
      "LogicAppContributor": "87a39d53-fc1b-424a-814c-f7e04687dc9e",
      "LogicAppOperator": "515c2055-d9d4-4321-b1b9-bd0c9a0f79fe",
      "LogicAppsStandardContributor(Preview)": "ad710c24-b039-4e85-a019-deb4a06e8570",
      "LogicAppsStandardDeveloper(Preview)": "523776ba-4eb2-4600-a3c8-f2dc93da4bdb",
      "LogicAppsStandardOperator(Preview)": "b70c96e9-66fe-4c09-b6e7-c98e69c98555",
      "LogicAppsStandardReader(Preview)": "4accf36b-2c05-432f-91c8-5c532dff4c73",
      "LucidchartCloudInsightsimport": "32ba3ff9-6cc1-4b21-aa1c-4150ed63e1b9",
      "ManagedApplicationContributorRole": "641177b8-a67a-45b9-a033-47bc880bb21e",
      "ManagedApplicationOperatorRole": "c7393b34-138c-406f-901b-d8cf2b17e6ae",
      "ManagedApplicationsReader": "b9331d33-8a36-4f8c-b097-4f54124fdb44",
      "ManagedHSMcontributor": "18500a29-7fe2-46b2-a342-b16a415e101d",
      "ManagedIdentityContributor": "e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
      "ManagedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
      "ManagedServicesRegistrationassignmentDeleteRole": "91c1777a-f3dc-4fae-b103-61d183457e46",
      "ManagementGroupContributor": "5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c",
      "ManagementGroupReader": "ac63b705-f282-497d-ac71-919bf39d939d",
      "MediaServicesAccountAdministrator": "054126f8-9a2b-4f1c-a9ad-eca461f08466",
      "MediaServicesLiveEventsAdministrator": "532bc159-b25e-42c0-969e-a1d439f60d77",
      "MediaServicesMediaOperator": "e4395492-1534-4db2-bedf-88c14621589c",
      "MediaServicesPolicyAdministrator": "c4bba371-dacd-4a26-b320-7250bca963ae",
      "MediaServicesStreamingEndpointsAdministrator": "99dba123-b5fe-44d5-874c-ced7199a5804",
      "Microsoft.Kubernetesconnectedclusterrole": "5548b2cf-c94c-4228-90ba-30851930a12f",
      "MicrosoftSentinelAutomationContributor": "f4c81013-99ee-4d62-a7ee-b3f1f648599a",
      "MicrosoftSentinelContributor": "ab8e14d6-4a74-4a29-9ba8-549422addade",
      "MicrosoftSentinelPlaybookOperator": "51d6186e-6489-4900-b93f-92e23144cca5",
      "MicrosoftSentinelReader": "8d289c81-5878-46d4-8554-54e1e3d8b5cb",
      "MicrosoftSentinelResponder": "3e150937-b8fe-4cfb-8069-0eaf05ecd056",
      "MonitoringContributor": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
      "MonitoringDataReader": "b0d8363b-8ddd-447d-831f-62ca05bff136",
      "MonitoringMetricsPublisher": "3913510d-42f4-4e42-8a64-420c390055eb",
      "MonitoringReader": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
      "MySQLBackupAndExportOperator": "d18ad5f3-1baf-4119-b49b-d944edb1f9d0",
      "NetworkContributor": "4d97b98b-1d4f-4787-a291-c67834d212e7",
      "NewRelicAPMAccountContributor": "5d28c62d-5b37-4476-8438-e587778df237",
      "ObjectAnchorsAccountOwner": "ca0835dd-bacc-42dd-8ed2-ed5e7230d15b",
      "ObjectAnchorsAccountReader": "4a167cdf-cb95-4554-9203-2347fe489bd9",
      "ObjectUnderstandingAccountOwner": "4dd61c23-6743-42fe-a388-d8bdd41cb745",
      "ObjectUnderstandingAccountReader": "d18777c0-1514-4662-8490-608db7d334b6",
      "OperatorNexusKeyVaultWriterServiceRole(Preview)": "44f0a1a8-6fea-4b35-980a-8ff50c487c97",
      "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "Ownerw/NetworkRead-only": "1712bb1e-474a-4282-a94c-cdcbabf2cba1",
      "PlayFabContributor": "0c8b84dc-067c-4039-9615-fa1a4b77c726",
      "PlayFabReader": "a9a19cc5-31f4-447c-901f-56c0bb18fcaf",
      "PolicyInsightsDataWriter(Preview)": "66bb4e9e-b016-4a94-8249-4c0511c2be84",
      "PostgreSQLFlexibleServerLongTermRetentionBackupRole": "c088a766-074b-43ba-90d4-1fb21feae531",
      "PrivateDNSZoneContributor": "b12aa53e-6015-4669-85d0-8515ebb3ae7f",
      "ProcurementContributor": "be1a1ac2-09d3-4261-9e57-a73a6e227f53",
      "ProjectBabylonDataCurator": "9ef4ef9c-a049-46b0-82ab-dd8ac094c889",
      "ProjectBabylonDataReader": "c8d896ba-346d-4f50-bc1d-7d1c84130446",
      "ProjectBabylonDataSourceAdministrator": "05b7651b-dc44-475e-b74d-df3db49fae0f",
      "Purviewrole1(Deprecated)": "8a3c2885-9b38-4fd2-9d99-91af537c1347",
      "Purviewrole2(Deprecated)": "200bba9e-f0c8-430f-892b-6f0794863803",
      "Purviewrole3(Deprecated)": "ff100721-1b9d-43d8-af52-42b69c1272db",
      "QuotaRequestOperator": "0e5f05e5-9ab9-446b-b98d-1e2157c94125",
      "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
      "ReaderandDataAccess": "c12c1c16-33a1-487b-954d-41c89c60f349",
      "RedisCacheContributor": "e0f68234-74aa-48ed-b826-c38b57376e17",
      "RemoteRenderingAdministrator": "3df8b902-2a6f-47c7-8cc5-360e9b272a7e",
      "RemoteRenderingClient": "d39065c4-c120-43c9-ab0a-63eed9795f0a",
      "ReservationPurchaser": "f7b75c60-3036-4b75-91c3-6b41c27c1689",
      "ResourcePolicyContributor": "36243c78-bf99-498c-9df9-86d9f8d28608",
      "RoleBasedAccessControlAdministrator": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
      "SaaSHubContributor": "e9b8712a-cbcf-4ea7-b0f7-e71b803401e6",
      "ScheduledPatchingContributor": "cd08ab90-6b14-449c-ad9a-8f8e549482c6",
      "SchedulerJobCollectionsContributor": "188a0f2f-5c9e-469b-ae67-2aa5ce574b94",
      "SchemaRegistryContributor(Preview)": "5dffeca3-4936-4216-b2bc-10343a5abb25",
      "SchemaRegistryReader(Preview)": "2c56ea50-c6b3-40a6-83c0-9d98858bc7d2",
      "SearchIndexDataContributor": "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
      "SearchIndexDataReader": "1407120a-92aa-4202-b7e9-c0e197c71c8f",
      "SearchParameterManager": "a02f7c31-354d-4106-865a-deedf37fa038",
      "SearchServiceContributor": "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
      "SecurityAdmin": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
      "SecurityAssessmentContributor": "612c2aa1-cb24-443b-ac28-3ab7272de6f5",
      "SecurityDetonationChamberPublisher": "352470b3-6a9c-4686-b503-35deb827e500",
      "SecurityDetonationChamberReader": "28241645-39f8-410b-ad48-87863e2951d5",
      "SecurityDetonationChamberSubmissionManager": "a37b566d-3efa-4beb-a2f2-698963fa42ce",
      "SecurityDetonationChamberSubmitter": "0b555d9b-b4a7-4f43-b330-627f0e5be8f0",
      "SecurityManager(Legacy)": "e3d13bf0-dd5a-482e-ba6b-9b8433878d10",
      "SecurityReader": "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
      "ServicesHubOperator": "82200a5b-e217-47a5-b665-6d8765ee745b",
      "SignalR/WebPubSubContributor": "8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761",
      "SignalRAccessKeyReader": "04165923-9d83-45d5-8227-78b77b0a687e",
      "SignalRAppServer": "420fcaa2-552c-430f-98ca-3264be4806c7",
      "SignalRRESTAPIOwner": "fd53cd77-2268-407a-8f46-7e7863d0f521",
      "SignalRRESTAPIReader": "ddde6b66-c0df-4114-a159-3618637b3035",
      "SignalRServiceOwner": "7e4f1700-ea5a-4f59-8f37-079cfe29dce3",
      "SiteRecoveryContributor": "6670b86e-a3f7-4917-ac9b-5d6ab1be4567",
      "SiteRecoveryOperator": "494ae006-db33-4328-bf46-533a6560a3ca",
      "SiteRecoveryReader": "dbaa88c4-0c30-4179-9fb3-46319faa6149",
      "SpatialAnchorsAccountContributor": "8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827",
      "SpatialAnchorsAccountOwner": "70bbe301-9835-447d-afdd-19eb3167307c",
      "SpatialAnchorsAccountReader": "5d51204f-eb77-4b1c-b86a-2ec626c49413",
      "SpatialMapsAccountsAccountOwner": "e9c9ed2b-2a99-4071-b2ff-5b113ebf73a1",
      "SQLDBContributor": "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
      "SqlDbMigrationRole": "189207d4-bb67-4208-a635-b06afe8b2c57",
      "SQLManagedInstanceContributor": "4939a1f6-9ae0-4e48-a1e0-f2cbe897382d",
      "SqlMIMigrationRole": "1d335eef-eee1-47fe-a9e0-53214eba8872",
      "SQLSecurityManager": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
      "SQLServerContributor": "6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
      "SqlVMMigrationRole": "ae8036db-e102-405b-a1b9-bae082ea436d",
      "StorageAccountBackupContributor": "e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
      "StorageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
      "StorageAccountEncryptionScopeContributorRole": "a316ed6d-1efe-48ac-ac08-f7995a9c26fb",
      "StorageAccountKeyOperatorServiceRole": "81a9662b-bebf-436f-a333-f67b29880f12",
      "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
      "StorageBlobDataOwner": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
      "StorageBlobDataReader": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
      "StorageBlobDelegator": "db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
      "StorageFileDataPrivilegedContributor": "69566ab7-960f-475b-8e7c-b3118f30c6bd",
      "StorageFileDataPrivilegedReader": "b8eda974-7b85-4f76-af95-65846b26df6d",
      "StorageFileDataSMBShareContributor": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
      "StorageFileDataSMBShareElevatedContributor": "a7264617-510b-434b-a828-9731dc254ea7",
      "StorageFileDataSMBShareReader": "aba4ae5f-2193-4029-9191-0cb91df5e314",
      "StorageQueueDataContributor": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
      "StorageQueueDataMessageProcessor": "8a0f0c08-91a1-4084-bc3d-661d67233fed",
      "StorageQueueDataMessageSender": "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
      "StorageQueueDataReader": "19e7f393-937e-4f77-808e-94535e297925",
      "StorageTableDataContributor": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
      "StorageTableDataReader": "76199698-9eea-4c19-bc75-cec21354c6b6",
      "StreamAnalyticsQueryTester": "1ec5b3c1-b17e-4e25-8312-2acb3c3c5abf",
      "SupportRequestContributor": "cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e",
      "TagContributor": "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
      "TemplateSpecContributor": "1c9b6475-caf0-4164-b5a1-2142a7116f4b",
      "TemplateSpecReader": "392ae280-861d-42bd-9ea5-08ee6d83b80e",
      "TestBaseReader": "15e0f5a1-3450-4248-8e25-e2afe88a9e85",
      "TrafficManagerContributor": "a4b10055-b0c7-44c2-b00f-c7b5b3550cf7",
      "UserAccessAdministrator": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
      "VideoIndexerRestrictedViewer": "a2c4a527-7dc0-4ee3-897b-403ade70fafb",
      "VirtualMachineAdministratorLogin": "1c0163c0-47e6-4577-8991-ea5c82e286e4",
      "VirtualMachineContributor": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
      "VirtualMachineDataAccessAdministrator(preview)": "66f75aeb-eabe-4b70-9f1e-c350c4c9ad04",
      "VirtualMachineLocalUserLogin": "602da2ba-a5c2-41da-b01d-5360126ab525",
      "VirtualMachineUserLogin": "fb879df8-f326-4884-b1cf-06f3ad86be52",
      "VMScannerOperator": "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
      "WebPlanContributor": "2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b",
      "WebPubSubServiceOwner": "12cf5a90-567b-43ae-8102-96cf46c7d9b4",
      "WebPubSubServiceReader": "bfb1c7d2-fb1a-466b-b2ba-aee63b92deaf",
      "WebsiteContributor": "de139f84-1756-47ae-9be6-808fbbe84772",
      "Windows365NetworkInterfaceContributor": "1f135831-5bbe-4924-9016-264044c00788",
      "Windows365NetworkUser": "7eabc9a4-85f7-4f71-b8ab-75daaccc1033",
      "Windows365SubscriptionReader": "3d55a8f6-4133-418d-8051-facdb1735758",
      "WindowsAdminCenterAdministratorLogin": "a6333a3e-0164-44c3-b281-7a577aff287f",
      "WorkbookContributor": "e8ddcd69-c73f-4f9f-9844-4100522f16ad",
      "WorkbookReader": "b279062a-9be3-42a0-92ae-8b3cf002ec4d",
      "WorkloadBuilderMigrationAgentRole": "d17ce0a2-0697-43bc-aac5-9113337ab61c"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceName": "[format('{0}-{1}', parameters('appName'), parameters('environmentName'))]",
    "resourceToken": "[toLower(uniqueString(subscription().id, variables('resourceName'), parameters('location')))]",
    "mainResourceGroupName": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('{0}{1}', variables('abbrs').resourcesResourceGroups, variables('resourceName')))]",
    "unionTags": "[union(parameters('tags'), createObject('azd-env-name', variables('resourceName')))]",
    "authIssuerUri": "[format('{0}{1}/v2.0', environment().authentication.loginEndpoint, tenant().tenantId)]",
    "backendApiDefinitionJson": "[if(empty(parameters('backendOpenApiSpecJson')), variables('$fxv#1'), parameters('backendOpenApiSpecJson'))]",
    "backendApiPoliciesXml": "<!--\r\n    - Policies are applied in the order they appear.\r\n    - Position <base/> inside a section to inherit policies from the outer scope.\r\n    - Comments within policies are not preserved.\r\n-->\r\n<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->\r\n<policies>\r\n    <!-- Throttle, authorize, validate, cache, or transform the requests -->\r\n    <inbound>        \r\n        <base />\r\n        {{policyFragments}}\r\n        <set-backend-service backend-id=\"api-backend\" />        \r\n    </inbound>\r\n    <!-- Control if and how the requests are forwarded to services  -->\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <!-- Customize the responses -->\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <!-- Handle exceptions and customize error responses  -->\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
    "isDev": "[not(equals(parameters('environmentName'), 'prd'))]",
    "isProd": "[equals(parameters('environmentName'), 'prd')]",
    "backendAppServiceName": "[if(not(empty(parameters('backendServiceName'))), parameters('backendServiceName'), format('{0}backend-{1}', variables('abbrs').webSitesAppService, variables('resourceToken')))]",
    "backendAppServicePlan": "[if(not(empty(parameters('backendAppServicePlanName'))), parameters('backendAppServicePlanName'), format('{0}backend-{1}', variables('abbrs').webServerFarms, variables('resourceToken')))]",
    "azureRoles": "[variables('$fxv#2')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2024-03-01",
      "name": "[variables('mainResourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('unionTags')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2024-03-01",
      "name": "[parameters('vnetResourceGroupName')]",
      "location": "[parameters('vnetResourceGroupLocation')]",
      "tags": "[variables('unionTags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend-identity",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "managedIdentityName": "[if(not(empty(parameters('backendServiceName'))), createObject('value', parameters('backendServiceName')), createObject('value', format('{0}backend-{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14566000683951081017"
            }
          },
          "parameters": {
            "managedIdentityName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the resources should be created."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('managedIdentityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('managedIdentityName')]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "indexing-function-identity",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "managedIdentityName": "[if(not(empty(parameters('indexingFunctionAppName'))), createObject('value', parameters('indexingFunctionAppName')), createObject('value', format('{0}function-{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14566000683951081017"
            }
          },
          "parameters": {
            "managedIdentityName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the resources should be created."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('managedIdentityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('managedIdentityName')]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "network",
      "resourceGroup": "[parameters('vnetResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "location": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('vnetResourceGroupName')), '2024-03-01', 'full').location]"
          },
          "vnetAddressRange": {
            "value": "[parameters('vnetAddressRange')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "subnetPrefixLength": {
            "value": "[parameters('vnetSubnetPrefixLength')]"
          },
          "apimSubnetExistingRouteTableName": {
            "value": "[parameters('apimRouteTableName')]"
          },
          "appGatewayExistingRouteTableName": {
            "value": "[parameters('appGatewayRouteTableName')]"
          },
          "hasCustomDnsServers": {
            "value": "[parameters('vnetHasCustomDnsServers')]"
          },
          "createDnsZones": {
            "value": "[variables('isDev')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "6898066641681447816"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "vnetAddressRange": {
              "type": "string"
            },
            "subnetPrefixLength": {
              "type": "int",
              "defaultValue": 27
            },
            "apimSubnetExistingRouteTableName": {
              "type": "string"
            },
            "appGatewayExistingRouteTableName": {
              "type": "string"
            },
            "hasCustomDnsServers": {
              "type": "bool",
              "defaultValue": false
            },
            "createDnsZones": {
              "type": "bool",
              "defaultValue": false
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "v4Info": "[parseCidr(parameters('vnetAddressRange'))]",
            "octets": "[split(variables('v4Info').network, '.')]",
            "incrementOctet": "[if(lessOrEquals(parameters('subnetPrefixLength'), 8), 0, if(lessOrEquals(parameters('subnetPrefixLength'), 16), 1, if(lessOrEquals(parameters('subnetPrefixLength'), 24), 2, 3)))]",
            "defaultSubnetName": "defaultSubnet",
            "defaultSubnetIPPrefix": "[cidrSubnet(parameters('vnetAddressRange'), parameters('subnetPrefixLength'), int(variables('octets')[variables('incrementOctet')]))]",
            "defaultNsgName": "defaultSubnetNsg",
            "apimSubnetName": "apimSubnet",
            "apimSubnetIPPrefix": "[cidrSubnet(parameters('vnetAddressRange'), parameters('subnetPrefixLength'), add(int(variables('octets')[variables('incrementOctet')]), 1))]",
            "apimNsgName": "apimSubnetNsg",
            "webAppSubnetName": "appSubnet",
            "webAppSubnetIPPrefix": "[cidrSubnet(parameters('vnetAddressRange'), parameters('subnetPrefixLength'), add(int(variables('octets')[variables('incrementOctet')]), 2))]",
            "webAppNsgName": "appSubnetNsg",
            "deploymentScriptSubnetName": "containerInstanceSubnet",
            "deploymentScriptSubnetIPPrefix": "[cidrSubnet(parameters('vnetAddressRange'), parameters('subnetPrefixLength'), add(int(variables('octets')[variables('incrementOctet')]), 3))]",
            "appGatewaySubnetName": "appGatewaySubnet",
            "appGatewaySubnetIPPrefix": "[cidrSubnet(parameters('vnetAddressRange'), parameters('subnetPrefixLength'), add(int(variables('octets')[variables('incrementOctet')]), 4))]",
            "appGatewayNsgName": "appGatewaySubnetNsg"
          },
          "resources": {
            "vnet": {
              "existing": true,
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-01-01",
              "name": "[parameters('vnetName')]"
            },
            "apimRouteTableParent": {
              "condition": "[not(empty(parameters('apimSubnetExistingRouteTableName')))]",
              "existing": true,
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2024-01-01",
              "name": "[parameters('apimSubnetExistingRouteTableName')]"
            },
            "apimRouteTableInternetRoute": {
              "condition": "[not(empty(parameters('apimSubnetExistingRouteTableName')))]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('apimSubnetExistingRouteTableName'), 'internetRoute')]",
              "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "Internet"
              }
            },
            "apimRouteTableManagementRoute": {
              "condition": "[not(empty(parameters('apimSubnetExistingRouteTableName')))]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('apimSubnetExistingRouteTableName'), 'managementRoute')]",
              "properties": {
                "addressPrefix": "ApiManagement",
                "nextHopType": "Internet"
              }
            },
            "appGatewayRouteTableParent": {
              "condition": "[not(empty(parameters('apimSubnetExistingRouteTableName')))]",
              "existing": true,
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2024-01-01",
              "name": "[parameters('appGatewayExistingRouteTableName')]"
            },
            "appGatewayRouteTableInternetRoute": {
              "condition": "[not(empty(parameters('apimSubnetExistingRouteTableName')))]",
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('appGatewayExistingRouteTableName'), 'internetRoute')]",
              "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "Internet"
              }
            },
            "defaultSubnet": {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), variables('defaultSubnetName'))]",
              "properties": {
                "addressPrefix": "[variables('defaultSubnetIPPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('defaultNsgName'))]"
                },
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.CognitiveServices"
                  },
                  {
                    "service": "Microsoft.AzureCosmosDB"
                  },
                  {
                    "service": "Microsoft.Storage"
                  },
                  {
                    "service": "Microsoft.KeyVault"
                  },
                  {
                    "service": "Microsoft.ContainerRegistry"
                  },
                  {
                    "service": "Microsoft.ServiceBus"
                  }
                ]
              },
              "dependsOn": [
                "defaultNsg"
              ]
            },
            "apimSubnet": {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), variables('apimSubnetName'))]",
              "properties": {
                "addressPrefix": "[variables('apimSubnetIPPrefix')]",
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.Storage"
                  },
                  {
                    "service": "Microsoft.Sql"
                  },
                  {
                    "service": "Microsoft.EventHub"
                  },
                  {
                    "service": "Microsoft.ServiceBus"
                  },
                  {
                    "service": "Microsoft.KeyVault"
                  },
                  {
                    "service": "Microsoft.AzureActiveDirectory"
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('apimNsgName'))]"
                },
                "routeTable": "[if(not(empty(parameters('apimSubnetExistingRouteTableName'))), createObject('id', resourceId('Microsoft.Network/routeTables', parameters('apimSubnetExistingRouteTableName'))), null())]"
              },
              "dependsOn": [
                "apimNsg",
                "defaultSubnet"
              ]
            },
            "webAppSubnet": {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), variables('webAppSubnetName'))]",
              "properties": {
                "addressPrefix": "[variables('webAppSubnetIPPrefix')]",
                "delegations": [
                  {
                    "name": "delegation",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverfarms"
                    }
                  }
                ],
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.Storage"
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webAppNsgName'))]"
                }
              },
              "dependsOn": [
                "apimSubnet",
                "appNsg"
              ]
            },
            "deploymentScriptSubnet": {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), variables('deploymentScriptSubnetName'))]",
              "properties": {
                "addressPrefix": "[variables('deploymentScriptSubnetIPPrefix')]",
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.Storage"
                  },
                  {
                    "service": "Microsoft.KeyVault"
                  },
                  {
                    "service": "Microsoft.CognitiveServices"
                  },
                  {
                    "service": "Microsoft.ContainerRegistry"
                  }
                ],
                "delegations": [
                  {
                    "name": "containerDelegation",
                    "properties": {
                      "serviceName": "Microsoft.ContainerInstance/containerGroups"
                    }
                  }
                ]
              },
              "dependsOn": [
                "webAppSubnet"
              ]
            },
            "appGatewaySubnet": {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('vnetName'), variables('appGatewaySubnetName'))]",
              "properties": {
                "addressPrefix": "[variables('appGatewaySubnetIPPrefix')]",
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.Storage"
                  },
                  {
                    "service": "Microsoft.Sql"
                  },
                  {
                    "service": "Microsoft.EventHub"
                  },
                  {
                    "service": "Microsoft.ServiceBus"
                  },
                  {
                    "service": "Microsoft.KeyVault"
                  },
                  {
                    "service": "Microsoft.AzureActiveDirectory"
                  }
                ],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appGatewayNsgName'))]"
                },
                "routeTable": {
                  "id": "[resourceId('Microsoft.Network/routeTables', parameters('appGatewayExistingRouteTableName'))]"
                }
              },
              "dependsOn": [
                "deploymentScriptSubnet",
                "nsgAppGateway"
              ]
            },
            "defaultNsg": {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('defaultNsgName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "SSH",
                    "properties": {
                      "priority": 1000,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22"
                    }
                  }
                ]
              }
            },
            "appNsg": {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('webAppNsgName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            "apimNsg": {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('apimNsgName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Client_communication_to_API_Management",
                    "properties": {
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 110,
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ]
                    }
                  },
                  {
                    "name": "Management_endpoint_for_Azure_portal_and_PowerShell",
                    "properties": {
                      "destinationPortRange": "3443",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 120,
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_Storage",
                    "properties": {
                      "destinationPortRange": "443",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 130,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Microsoft_Entra_ID_Microsoft_Graph_and_Azure_Key_Vault_dependency",
                    "properties": {
                      "destinationPortRange": "443",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 140,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureActiveDirectory",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "managed_connections_dependency",
                    "properties": {
                      "destinationPortRange": "443",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 150,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureConnectors",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Access_to_Azure_SQL_endpoints",
                    "properties": {
                      "destinationPortRange": "1433",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 160,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Sql",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Access_to_Azure_Key_Vault",
                    "properties": {
                      "destinationPortRange": "443",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 170,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureKeyVault",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Dependency_for_Log_to_Azure_Event_Hubs_policy_and_Azure_Monitor",
                    "properties": {
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 180,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "EventHub",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "5671",
                        "5672",
                        "443"
                      ]
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_File_Share_for_GIT",
                    "properties": {
                      "destinationPortRange": "445",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 190,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Publish_Diagnostics_Logs_and_Metrics_Resource_Health_and_Application_Insights",
                    "properties": {
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 200,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureMonitor",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": [
                        "1886",
                        "443"
                      ]
                    }
                  },
                  {
                    "name": "Access_external_Azure_Cache_for_Redis_service_for_caching_policies_inbound",
                    "properties": {
                      "destinationPortRange": "6380",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 210,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Access_external_Azure_Cache_for_Redis_service_for_caching_policies_outbound",
                    "properties": {
                      "destinationPortRange": "6380",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 220,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Access_internal_Azure_Cache_for_Redis_service_for_caching_policies_inbound",
                    "properties": {
                      "destinationPortRange": "6381 - 6383",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 230,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Access_internal_Azure_Cache_for_Redis_service_for_caching_policies_outbound",
                    "properties": {
                      "destinationPortRange": "6381 - 6383",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 240,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Sync_Counters_for_Rate_Limit_policies_between_machines_Inbound",
                    "properties": {
                      "destinationPortRange": "4290",
                      "protocol": "UDP",
                      "sourcePortRange": "*",
                      "priority": 250,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Sync_Counters_for_Rate_Limit_policies_between_machines_Outbound",
                    "properties": {
                      "destinationPortRange": "4290",
                      "protocol": "UDP",
                      "sourcePortRange": "*",
                      "priority": 260,
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Outbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Azure_Infrastructure_Load_Balancer",
                    "properties": {
                      "destinationPortRange": "6390",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 270,
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Azure_Traffic_Manager_routing_for_multi_region_deployment",
                    "properties": {
                      "destinationPortRange": "443",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 280,
                      "sourceAddressPrefix": "AzureTrafficManager",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  },
                  {
                    "name": "Monitoring_of_individual_machine_health",
                    "properties": {
                      "destinationPortRange": "6391",
                      "protocol": "TCP",
                      "sourcePortRange": "*",
                      "priority": 290,
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRanges": []
                    }
                  }
                ]
              }
            },
            "nsgAppGateway": {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2024-01-01",
              "name": "[variables('appGatewayNsgName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "agw-in",
                    "properties": {
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "*",
                      "description": "App Gateway inbound",
                      "priority": 100,
                      "sourceAddressPrefix": "GatewayManager",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "65200-65535"
                    }
                  },
                  {
                    "name": "https-in",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ],
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound",
                      "description": "Allow HTTPS Inbound"
                    }
                  }
                ]
              }
            },
            "dnsZones": {
              "condition": "[parameters('createDnsZones')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dnsZones",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1121622510720115409"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "zones": [
                      "privatelink.adf.azure.com",
                      "privatelink.afs.azure.net",
                      "privatelink.agentsvc.azure-automation.net",
                      "privatelink.analysis.windows.net",
                      "privatelink.analytics.cosmos.azure.com",
                      "privatelink.api.azureml.ms",
                      "privatelink.attest.azure.net",
                      "privatelink.azconfig.io",
                      "privatelink.azure.com",
                      "privatelink.azure-api.net",
                      "privatelink.azure-automation.net",
                      "privatelink.azurecr.io",
                      "privatelink.azuredatabricks.net",
                      "privatelink.azurehdinsight.net",
                      "privatelink.azurestaticapps.net",
                      "privatelink.azuresynapse.net",
                      "privatelink.azurewebsites.net",
                      "privatelink.batch.azure.com",
                      "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
                      "privatelink.cassandra.cosmos.azure.com",
                      "privatelink.cognitiveservices.azure.com",
                      "[format('privatelink{0}', environment().suffixes.sqlServerHostname)]",
                      "privatelink.datafactory.azure.net",
                      "privatelink.dev.azuresynapse.net",
                      "[format('privatelink.dfs.{0}', environment().suffixes.storage)]",
                      "privatelink.dicom.azurehealthcareapis.com",
                      "privatelink.directline.botframework.com",
                      "privatelink.documents.azure.com",
                      "privatelink.eventgrid.azure.net",
                      "privatelink.fhir.azurehealthcareapis.com",
                      "[format('privatelink.file.{0}', environment().suffixes.storage)]",
                      "privatelink.grafana.azure.com",
                      "privatelink.gremlin.cosmos.azure.com",
                      "privatelink.managedhsm.azure.net",
                      "privatelink.mariadb.database.azure.com",
                      "privatelink.mongo.cosmos.azure.com",
                      "privatelink.monitor.azure.com",
                      "privatelink.mysql.database.azure.com",
                      "privatelink.notebooks.azure.net",
                      "privatelink.ods.opinsights.azure.com",
                      "privatelink.oms.opinsights.azure.com",
                      "privatelink.openai.azure.com",
                      "privatelink.pbidedicated.windows.net",
                      "privatelink.postgres.cosmos.azure.com",
                      "privatelink.postgres.database.azure.com",
                      "privatelink.prod.migration.windowsazure.com",
                      "privatelink.purview.azure.com",
                      "privatelink.purviewstudio.azure.com",
                      "[format('privatelink.queue.{0}', environment().suffixes.storage)]",
                      "privatelink.redis.cache.windows.net",
                      "privatelink.redisenterprise.cache.azure.net",
                      "privatelink.search.windows.net",
                      "privatelink.service.signalr.net",
                      "privatelink.servicebus.windows.net",
                      "privatelink.siterecovery.windowsazure.com",
                      "privatelink.sql.azuresynapse.net",
                      "[format('privatelink.table.{0}', environment().suffixes.storage)]",
                      "privatelink.table.cosmos.azure.com",
                      "privatelink.tip1.powerquery.microsoft.com",
                      "privatelink.token.botframework.com",
                      "privatelink.ts.eventgrid.azure.net",
                      "privatelink.vaultcore.azure.net",
                      "[format('privatelink.web.{0}', environment().suffixes.storage)]",
                      "privatelink.workspace.azurehealthcareapis.com",
                      "privatelink.wvd.microsoft.com",
                      "privatelink-global.wvd.microsoft.com",
                      "scm.privatelink.azurewebsites.net"
                    ]
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "privateDnsZone",
                        "count": "[length(variables('zones'))]"
                      },
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2024-06-01",
                      "name": "[variables('zones')[copyIndex()]]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {}
                    },
                    {
                      "copy": {
                        "name": "privateDnsZoneLink",
                        "count": "[length(variables('zones'))]"
                      },
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2024-06-01",
                      "name": "[format('{0}/{1}', variables('zones')[copyIndex()], format('{0}-link', variables('zones')[copyIndex()]))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', variables('zones')[copyIndex()])]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "appGatewaySubnet"
              ]
            }
          },
          "outputs": {
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "defaultSubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('defaultSubnetName'))]"
            },
            "defaultNsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('defaultNsgName'))]"
            },
            "apiManagementSubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('apimSubnetName'))]"
            },
            "apiManagementSubnetAddressPrefix": {
              "type": "string",
              "value": "[variables('apimSubnetIPPrefix')]"
            },
            "webAppSubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('webAppSubnetName'))]"
            },
            "webAppSubnetAddressPrefix": {
              "type": "string",
              "value": "[variables('webAppSubnetIPPrefix')]"
            },
            "deploymentScriptSubnetName": {
              "type": "string",
              "value": "[variables('deploymentScriptSubnetName')]"
            },
            "deploymentScriptSubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('deploymentScriptSubnetName'))]"
            },
            "deploymentScriptSubnetAddressPrefix": {
              "type": "string",
              "value": "[variables('deploymentScriptSubnetIPPrefix')]"
            },
            "appGatewaySubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('appGatewaySubnetName'))]"
            },
            "appGatewaySubnetAddressPrefix": {
              "type": "string",
              "value": "[variables('appGatewaySubnetIPPrefix')]"
            },
            "dnsServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "value": "[if(parameters('hasCustomDnsServers'), reference('vnet').dhcpOptions.dnsServers, createArray())]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('vnetResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "keyVaultName": "[if(not(empty(parameters('keyVaultName'))), createObject('value', parameters('keyVaultName')), createObject('value', format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))))]",
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11714216548480206857"
            }
          },
          "definitions": {
            "keyVaultAccessPolicy": {
              "type": "object",
              "properties": {
                "objectId": {
                  "type": "string"
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "secrets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "certificates": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('kv{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "Specifies the name of the key vault."
              }
            },
            "keyVaultSku": {
              "type": "object",
              "defaultValue": {
                "name": "standard",
                "family": "A"
              },
              "metadata": {
                "description": "Specifies the SKU to use for the key vault."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the Azure location where the resources should be created."
              }
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "accessPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/keyVaultAccessPolicy"
              },
              "defaultValue": []
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": {
            "privateEndpoint::link": {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('keyVaultName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "privateEndpoint"
              ]
            },
            "keyVault": {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "copy": [
                  {
                    "name": "accessPolicies",
                    "count": "[length(parameters('accessPolicies'))]",
                    "input": {
                      "tenantId": "[tenant().tenantId]",
                      "objectId": "[parameters('accessPolicies')[copyIndex('accessPolicies')].objectId]",
                      "permissions": "[parameters('accessPolicies')[copyIndex('accessPolicies')].permissions]"
                    }
                  }
                ],
                "enableRbacAuthorization": true,
                "tenantId": "[tenant().tenantId]",
                "sku": "[parameters('keyVaultSku')]",
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                }
              }
            },
            "privateEndpoint": {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('keyVaultName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('keyVaultName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "keyVault"
              ]
            },
            "privateDnsZone": {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "existing": true,
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "resourceGroup": "[parameters('privateDnsZoneResourceGroup')]",
              "name": "privatelink.vaultcore.azure.net"
            }
          },
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "logAnalyticsName": "[if(not(empty(parameters('logAnalyticsName'))), createObject('value', parameters('logAnalyticsName')), createObject('value', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))))]",
          "applicationInsightsName": "[if(not(empty(parameters('applicationInsightsName'))), createObject('value', parameters('applicationInsightsName')), createObject('value', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))))]",
          "applicationInsightsDashboardName": "[if(not(empty(parameters('applicationInsightsDashboardName'))), createObject('value', parameters('applicationInsightsDashboardName')), createObject('value', format('{0}{1}', variables('abbrs').portalDashboards, variables('resourceToken'))))]",
          "privateLinkScopeName": {
            "value": "[format('{0}{1}', variables('abbrs').networkPrivateLinkServices, variables('resourceToken'))]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.apiManagementSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13794009666541216456"
            },
            "description": "Creates an Application Insights instance and a Log Analytics workspace."
          },
          "parameters": {
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "applicationInsightsDashboardName": {
              "type": "string",
              "defaultValue": ""
            },
            "privateLinkScopeName": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "loganalytics",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('logAnalyticsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "4413085713310652863"
                    },
                    "description": "Creates a Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2023-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "applicationinsights",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "dashboardName": {
                    "value": "[parameters('applicationInsightsDashboardName')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2730893577721358638"
                    },
                    "description": "Creates an Application Insights instance based on an existing Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "dashboardName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]",
                        "publicNetworkAccessForIngestion": "Disabled",
                        "publicNetworkAccessForQuery": "Enabled"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('dashboardName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "application-insights-dashboard",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('dashboardName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "10518479245005078445"
                            },
                            "description": "Creates a dashboard for an Application Insights instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "applicationInsightsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Portal/dashboards",
                              "apiVersion": "2020-09-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "lenses": [
                                  {
                                    "order": 0,
                                    "parts": [
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 0,
                                          "colSpan": 2,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "id",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 2,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:20:33.345Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 5,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-08T18:47:35.237Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Usage",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:22:35.782Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Reliability",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 7,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:42:40.072Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Responsiveness\r\n",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 11,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:43:37.804Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Browser",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 15,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "MetricsExplorerJsonDefinitionId",
                                              "value": "BrowserPerformanceTimelineMetrics"
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "createdTime": "2018-05-08T12:16:27.534Z",
                                                "isInitialTime": false,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "CurrentFilter",
                                              "value": {
                                                "eventTypes": [
                                                  4,
                                                  1,
                                                  3,
                                                  5,
                                                  2,
                                                  6,
                                                  13
                                                ],
                                                "typeFacets": {},
                                                "isPermissive": false
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "sessions/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Sessions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "users/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Users",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Unique sessions and users",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "segmentationUsers"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Failed requests",
                                                        "color": "#EC008C"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Failed requests",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "failures"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/duration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server response time",
                                                        "color": "#00BCF2"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server response time",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "performance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/networkDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Page load network connect time",
                                                        "color": "#7E58FF"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/processingDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Client processing time",
                                                        "color": "#44F1C8"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/sendDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Send request time",
                                                        "color": "#EB9371"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/receiveDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Receiving response time",
                                                        "color": "#0672F1"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average page load time breakdown",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/availabilityPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average availability",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "availability"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/server",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "dependencies/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Dependency failures",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server exceptions and Dependency failures",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processorCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Processor time",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process CPU",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average processor and process CPU utilization",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/browser",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Browser exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Browser exceptions",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/count",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability test results count",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Availability test results count",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processIOBytesPerSecond",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process IO rate",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average process I/O rate",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/memoryAvailableBytes",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Available memory",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average available memory",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "connectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'loganalytics')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('privateLinkScopeName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "privateDnsZoneResourceGroup": {
                    "value": "[parameters('privateDnsZoneResourceGroup')]"
                  },
                  "privateEndpointSubnetId": {
                    "value": "[parameters('privateEndpointSubnetId')]"
                  },
                  "privateLinkScopeName": {
                    "value": "[parameters('privateLinkScopeName')]"
                  },
                  "applicationInsightsId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.id.value]"
                  },
                  "linkPrivateEndpointToPrivateDns": {
                    "value": "[parameters('linkPrivateEndpointToPrivateDns')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8758853247559985945"
                    }
                  },
                  "parameters": {
                    "applicationInsightsId": {
                      "type": "string"
                    },
                    "privateLinkScopeName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "privateEndpointSubnetId": {
                      "type": "string"
                    },
                    "linkPrivateEndpointToPrivateDns": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDnsZoneResourceGroup": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/privateLinkScopes/scopedResources",
                      "apiVersion": "2021-07-01-preview",
                      "name": "[format('{0}/{1}', parameters('privateLinkScopeName'), 'ai')]",
                      "properties": {
                        "linkedResourceId": "[parameters('applicationInsightsId')]"
                      },
                      "dependsOn": [
                        "[resourceId('microsoft.insights/privateLinkScopes', parameters('privateLinkScopeName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('privateLinkScopeName')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "privatelink-monitor-azure-com",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')]"
                            }
                          },
                          {
                            "name": "privatelink-oms-opinsights-azure-com",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.oms.opinsights.azure.com')]"
                            }
                          },
                          {
                            "name": "privatelink-ods-opinsights-azure-com",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.ods.opinsights.azure.com')]"
                            }
                          },
                          {
                            "name": "privatelink-agentsvc-azure-automation-net",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.agentsvc.azure-automation.net')]"
                            }
                          },
                          {
                            "name": "privatelink-blob-core-windows-net",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('privateLinkScopeName')))]"
                      ]
                    },
                    {
                      "type": "microsoft.insights/privateLinkScopes",
                      "apiVersion": "2021-07-01-preview",
                      "name": "[parameters('privateLinkScopeName')]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "accessModeSettings": {
                          "ingestionAccessMode": "PrivateOnly",
                          "queryAccessMode": "PrivateOnly"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-endpoint', parameters('privateLinkScopeName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-connection', parameters('privateLinkScopeName'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('microsoft.insights/privateLinkScopes', parameters('privateLinkScopeName'))]",
                              "groupIds": [
                                "azuremonitor"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('microsoft.insights/privateLinkScopes', parameters('privateLinkScopeName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'applicationinsights')]"
              ]
            }
          ],
          "outputs": {
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.connectionString.value]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.instrumentationKey.value]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.name.value]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('storageAccountName'))), createObject('value', parameters('storageAccountName')), createObject('value', format('{0}{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('storageResourceGroupLocation')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "publicNetworkAccess": {
            "value": "Disabled"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "sku": {
            "value": {
              "name": "[parameters('storageSkuName')]"
            }
          },
          "deleteRetentionPolicy": {
            "value": {
              "enabled": true,
              "days": 2
            }
          },
          "virtualNetworkRules": {
            "value": [
              {
                "id": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.deploymentScriptSubnetResourceId.value]",
                "action": "Allow",
                "state": "Succeeded"
              },
              {
                "id": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.webAppSubnetResourceId.value]",
                "action": "Allow",
                "state": "Succeeded"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12619449762193667108"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "accessTier": {
              "type": "string",
              "defaultValue": "Hot",
              "allowedValues": [
                "Hot",
                "Cool",
                "Premium"
              ]
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": false
            },
            "allowCrossTenantReplication": {
              "type": "bool",
              "defaultValue": true
            },
            "allowSharedKeyAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "defaultToOAuthAuthentication": {
              "type": "bool",
              "defaultValue": false
            },
            "deleteRetentionPolicy": {
              "type": "object",
              "defaultValue": {}
            },
            "dnsEndpointType": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "AzureDnsZone",
                "Standard"
              ]
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2"
            },
            "minimumTlsVersion": {
              "type": "string",
              "defaultValue": "TLS1_2"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard_LRS"
              }
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "shares": {
              "type": "array",
              "defaultValue": []
            },
            "queues": {
              "type": "array",
              "defaultValue": []
            },
            "virtualNetworkRules": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {
            "$fxv#0": {
              "analysisServicesServers": "as",
              "apiManagementService": "apim-",
              "appConfigurationConfigurationStores": "appcs-",
              "appManagedEnvironments": "cae-",
              "appContainerApps": "ca-",
              "authorizationPolicyDefinitions": "policy-",
              "automationAutomationAccounts": "aa-",
              "blueprintBlueprints": "bp-",
              "blueprintBlueprintsArtifacts": "bpa-",
              "cacheRedis": "redis-",
              "cdnProfiles": "cdnp-",
              "cdnProfilesEndpoints": "cdne-",
              "cognitiveServicesAccounts": "cog-",
              "cognitiveServicesFormRecognizer": "cog-fr-",
              "cognitiveServicesTextAnalytics": "cog-ta-",
              "computeAvailabilitySets": "avail-",
              "computeCloudServices": "cld-",
              "computeDiskEncryptionSets": "des",
              "computeDisks": "disk",
              "computeDisksOs": "osdisk",
              "computeGalleries": "gal",
              "computeSnapshots": "snap-",
              "computeVirtualMachines": "vm",
              "computeVirtualMachineScaleSets": "vmss-",
              "containerInstanceContainerGroups": "ci",
              "containerRegistryRegistries": "cr",
              "containerServiceManagedClusters": "aks-",
              "databricksWorkspaces": "dbw-",
              "dataFactoryFactories": "adf-",
              "dataLakeAnalyticsAccounts": "dla",
              "dataLakeStoreAccounts": "dls",
              "dataMigrationServices": "dms-",
              "dBforMySQLServers": "mysql-",
              "dBforPostgreSQLServers": "psql-",
              "devicesIotHubs": "iot-",
              "devicesProvisioningServices": "provs-",
              "devicesProvisioningServicesCertificates": "pcert-",
              "documentDBDatabaseAccounts": "cosmos-",
              "eventGridDomains": "evgd-",
              "eventGridDomainsTopics": "evgt-",
              "eventGridEventSubscriptions": "evgs-",
              "eventHubNamespaces": "evhns-",
              "eventHubNamespacesEventHubs": "evh-",
              "hdInsightClustersHadoop": "hadoop-",
              "hdInsightClustersHbase": "hbase-",
              "hdInsightClustersKafka": "kafka-",
              "hdInsightClustersMl": "mls-",
              "hdInsightClustersSpark": "spark-",
              "hdInsightClustersStorm": "storm-",
              "hybridComputeMachines": "arcs-",
              "insightsActionGroups": "ag-",
              "insightsComponents": "appi-",
              "keyVaultVaults": "kv-",
              "kubernetesConnectedClusters": "arck",
              "kustoClusters": "dec",
              "kustoClustersDatabases": "dedb",
              "logicIntegrationAccounts": "ia-",
              "logicWorkflows": "logic-",
              "machineLearningServicesWorkspaces": "mlw-",
              "managedIdentityUserAssignedIdentities": "id-",
              "managementManagementGroups": "mg-",
              "migrateAssessmentProjects": "migr-",
              "networkApplicationGateways": "agw-",
              "networkApplicationSecurityGroups": "asg-",
              "networkAzureFirewalls": "afw-",
              "networkBastionHosts": "bas-",
              "networkConnections": "con-",
              "networkDnsZones": "dnsz-",
              "networkExpressRouteCircuits": "erc-",
              "networkFirewallPolicies": "afwp-",
              "networkFirewallPoliciesWebApplication": "waf",
              "networkFirewallPoliciesRuleGroups": "wafrg",
              "networkFrontDoors": "fd-",
              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
              "networkLoadBalancersExternal": "lbe-",
              "networkLoadBalancersInternal": "lbi-",
              "networkLoadBalancersInboundNatRules": "rule-",
              "networkLocalNetworkGateways": "lgw-",
              "networkNatGateways": "ng-",
              "networkNetworkInterfaces": "nic-",
              "networkNetworkSecurityGroups": "nsg-",
              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
              "networkNetworkWatchers": "nw-",
              "networkPrivateDnsZones": "pdnsz-",
              "networkPrivateLinkServices": "pl-",
              "networkPublicIPAddresses": "pip-",
              "networkPublicIPPrefixes": "ippre-",
              "networkRouteFilters": "rf-",
              "networkRouteTables": "rt-",
              "networkRouteTablesRoutes": "udr-",
              "networkTrafficManagerProfiles": "traf-",
              "networkVirtualNetworkGateways": "vgw-",
              "networkVirtualNetworks": "vnet-",
              "networkVirtualNetworksSubnets": "snet-",
              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
              "networkVirtualWans": "vwan-",
              "networkVpnGateways": "vpng-",
              "networkVpnGatewaysVpnConnections": "vcn-",
              "networkVpnGatewaysVpnSites": "vst-",
              "notificationHubsNamespaces": "ntfns-",
              "notificationHubsNamespacesNotificationHubs": "ntf-",
              "operationalInsightsWorkspaces": "log-",
              "portalDashboards": "dash-",
              "powerBIDedicatedCapacities": "pbi-",
              "purviewAccounts": "pview-",
              "recoveryServicesVaults": "rsv-",
              "resourcesResourceGroups": "rg-",
              "searchSearchServices": "srch-",
              "serviceBusNamespaces": "sb-",
              "serviceBusNamespacesQueues": "sbq-",
              "serviceBusNamespacesTopics": "sbt-",
              "serviceEndPointPolicies": "se-",
              "serviceFabricClusters": "sf-",
              "signalRServiceSignalR": "sigr",
              "sqlManagedInstances": "sqlmi-",
              "sqlServers": "sql-",
              "sqlServersDataWarehouse": "sqldw-",
              "sqlServersDatabases": "sqldb-",
              "sqlServersDatabasesStretch": "sqlstrdb-",
              "storageStorageAccounts": "st",
              "storageStorageAccountsVm": "stvm",
              "storSimpleManagers": "ssimp",
              "streamAnalyticsCluster": "asa-",
              "synapseWorkspaces": "syn",
              "synapseWorkspacesAnalyticsWorkspaces": "synw",
              "synapseWorkspacesSqlPoolsDedicated": "syndp",
              "synapseWorkspacesSqlPoolsSpark": "synsp",
              "timeSeriesInsightsEnvironments": "tsi-",
              "webServerFarms": "plan-",
              "webSitesAppService": "app-",
              "webSitesAppServiceEnvironment": "ase-",
              "webSitesFunctions": "func-",
              "webStaticSites": "stapp-"
            },
            "storageFileDataPrivilegedContributorRoleId": "69566ab7-960f-475b-8e7c-b3118f30c6bd",
            "abbrs": "[variables('$fxv#0')]"
          },
          "resources": [
            {
              "copy": {
                "name": "container",
                "count": "[length(parameters('containers'))]"
              },
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
              "properties": {
                "publicAccess": "[coalesce(tryGet(parameters('containers')[copyIndex()], 'publicAccess'), 'None')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "share",
                "count": "[length(parameters('shares'))]"
              },
              "condition": "[not(empty(parameters('shares')))]",
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('shares')[copyIndex()].name)]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "queue",
                "count": "[length(parameters('queues'))]"
              },
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('shares')))]",
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-file-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-file-endpoint', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-table-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.table.{0}', environment().suffixes.storage))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-table-endpoint', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-queue-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.queue.{0}', environment().suffixes.storage))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-queue-endpoint', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "accessTier": "[parameters('accessTier')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                "dnsEndpointType": "[parameters('dnsEndpointType')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": "[parameters('virtualNetworkRules')]",
                  "defaultAction": "Deny"
                },
                "publicNetworkAccess": "[if(empty(parameters('virtualNetworkRules')), parameters('publicNetworkAccess'), 'Enabled')]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-file-endpoint', parameters('name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-file-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-table-endpoint', parameters('name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-table-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                      "groupIds": [
                        "table"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-queue-endpoint', parameters('name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-queue-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                      "groupIds": [
                        "queue"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('name'))]",
              "name": "[guid(subscription().id, resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), variables('storageFileDataPrivilegedContributorRoleId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageFileDataPrivilegedContributorRoleId'))]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), '2023-01-31').principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('keyVaultName')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-cs-secret', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-cs', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('name'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').keys[0].value)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2738895811534356834"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').primaryEndpoints]"
            },
            "connectionStringSecretUri": {
              "type": "string",
              "value": "[if(empty(parameters('keyVaultName')), '', reference(resourceId('Microsoft.Resources/deployments', format('{0}-cs-secret', parameters('name'))), '2022-09-01').outputs.secretUri.value)]"
            },
            "scriptRunnerIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name')))]"
            },
            "scriptRunnerPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), '2023-01-31').principalId]"
            },
            "scriptRunnerClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), '2023-01-31').clientId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "web",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "runFromPackage": {
            "value": true
          },
          "sku": "[if(variables('isProd'), createObject('value', 'P0V3'), createObject('value', 'B2'))]",
          "functionAppScaleLimit": "[if(variables('isProd'), createObject('value', 5), createObject('value', -1))]",
          "minimumElasticInstanceCount": "[if(variables('isProd'), createObject('value', 3), createObject('value', -1))]",
          "numberOfWorkers": "[if(variables('isProd'), createObject('value', 3), createObject('value', -1))]",
          "zoneRedundant": {
            "value": "[variables('isProd')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "identityType": {
            "value": "UserAssigned"
          },
          "identityName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'backend-identity'), '2022-09-01').outputs.name.value]"
          },
          "authClientSecret": {
            "value": "[parameters('authClientSecret')]"
          },
          "authClientId": {
            "value": "[parameters('authClientId')]"
          },
          "authIssuerUri": {
            "value": "[variables('authIssuerUri')]"
          },
          "authUnauthenticatedAction": {
            "value": "Return401"
          },
          "authAllowedRedirectUrls": {
            "value": "[union(createArray(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'app-gateway'), '2022-09-01').outputs.fqdn.value), if(empty(parameters('gatewayPublicUrl')), createArray(), createArray(parameters('gatewayPublicUrl'))))]"
          },
          "appServiceName": {
            "value": "[variables('backendAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('backendAppServicePlan')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('unionTags'), createObject('azd-service-name', 'backend'))]"
          },
          "scmDoBuildDuringDeployment": {
            "value": true
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "inboundSubnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "outboundSubnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.webAppSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "appSettings": {
            "value": {
              "AZURE_COSMOSDB_ACCOUNT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountName.value]",
              "AZURE_COSMOSDB_ACCOUNT_KEY": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountKeySecretUri.value)]",
              "AZURE_COSMOSDB_CONVERSATIONS_CONTAINER": "conversations",
              "AZURE_COSMOSDB_DATABASE": "db_conversation_history",
              "AZURE_COSMOSDB_ENABLE_FEEDBACK": "True",
              "AZURE_FEEDBACK_SEARCH_INDEX": "[parameters('searchFeedbackIndexName')]",
              "AZURE_FEEDBACK_SEARCH_INDEX_ANALYZER": "[parameters('searchFeedbackIndexAnalyzerName')]",
              "AZURE_FORM_RECOGNIZER_API_VERSION": "[parameters('formRecognizerApiVersion')]",
              "AZURE_FORM_RECOGNIZER_SERVICE": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', format('formrecognizer{0}', variables('resourceToken'))), '2022-09-01').outputs.name.value]",
              "AZURE_OPEN_AI_BASE": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.apiManagementGatewayUrl.value]",
              "AZURE_OPENAI_API_KEY": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.openAiApiSubscriptionSecretUri.value)]",
              "AZURE_OPENAI_API_VERSION": "[parameters('openAIApiVersion')]",
              "AZURE_OPENAI_CHATGPT3_5_DEPLOYMENT": "",
              "AZURE_OPENAI_CHATGPT3_5_MODEL_NAME": "",
              "AZURE_OPENAI_CHATGPT4_DEPLOYMENT": "[parameters('openAIModelDeploymentName')]",
              "AZURE_OPENAI_CHATGPT4_MODEL_NAME": "[parameters('openAIModelName')]",
              "AZURE_OPENAI_CHOICES_COUNT": 1,
              "AZURE_OPENAI_EMBEDDING_API_VERSION": "[parameters('openAIApiVersion')]",
              "AZURE_OPENAI_EMBEDDING_DEPLOYMENT_NAME": "[parameters('openAIEmbeddingDeploymentName')]",
              "AZURE_OPENAI_EMBEDDING_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.apiManagementGatewayUrl.value]",
              "AZURE_OPENAI_EMBEDDING_KEY": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.openAiApiSubscriptionSecretUri.value)]",
              "AZURE_OPENAI_EMBEDDING_MODEL_NAME": "[parameters('openAIEmbeddingModelName')]",
              "AZURE_OPENAI_EMBEDDING_NAME": "[parameters('openAIEmbeddingDeploymentName')]",
              "AZURE_OPENAI_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.apiManagementGatewayUrl.value]",
              "AZURE_OPENAI_FREQUENCY_PENALTY": 0,
              "AZURE_OPENAI_KEY": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.openAiApiSubscriptionSecretUri.value)]",
              "AZURE_OPENAI_LOGIT_BIAS": "",
              "AZURE_OPENAI_MAX_TOKENS": "[parameters('openAIMaxTokens')]",
              "AZURE_OPENAI_MODEL": "[parameters('openAIModelName')]",
              "AZURE_OPENAI_MODEL_DEPLOYMENT_NAME": "[parameters('openAIModelDeploymentName')]",
              "AZURE_OPENAI_MODEL_MAX_TOKENS": "[parameters('openAIModelMaxTokens')]",
              "AZURE_OPENAI_MODEL_NAME": "[parameters('openAIModelName')]",
              "AZURE_OPENAI_MODEL_STOP_SEQUENCE": "[parameters('openAIModelStopSequence')]",
              "AZURE_OPENAI_MODEL_STREAM": "[parameters('openAIModelStream')]",
              "AZURE_OPENAI_MODEL_TEMPERATURE": "[parameters('openAITemperature')]",
              "AZURE_OPENAI_MODEL_TOP_P": "[parameters('openAITopP')]",
              "AZURE_OPENAI_PRESENCE_PENALTY": 0,
              "AZURE_OPENAI_PREVIEW_API_VERSION": "2024-05-01-preview",
              "AZURE_OPENAI_RESOURCE": "[coalesce(tryGet(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01'), 'outputs').name.value, '')]",
              "AZURE_OPENAI_SEED": "",
              "AZURE_OPENAI_SERVICE": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01').outputs.name.value]",
              "AZURE_OPENAI_STOP_SEQUENCE": "[parameters('openAIStopSequence')]",
              "AZURE_OPENAI_STREAM": "[parameters('openAIStream')]",
              "AZURE_OPENAI_SYSTEM_MESSAGE": "[parameters('openAISystemMessage')]",
              "AZURE_OPENAI_TEMPERATURE": "[parameters('openAITemperature')]",
              "AZURE_OPENAI_TOOL_CHOICE": "",
              "AZURE_OPENAI_TOOLS": "",
              "AZURE_OPENAI_TOP_P": "[parameters('openAITopP')]",
              "AZURE_OPENAI_USER": "",
              "AZURE_SEARCH_CONTENT_COLUMNS": "[parameters('searchContentColumns')]",
              "AZURE_SEARCH_ENABLE_IN_DOMAIN": "[parameters('searchEnableInDomain')]",
              "AZURE_SEARCH_FILENAME_COLUMN": "[parameters('searchFilenameColumn')]",
              "AZURE_SEARCH_INDEX": "[parameters('searchIndexName')]",
              "AZURE_SEARCH_INDEX_IS_PRECHUNKED": "[parameters('searchIndexPreChunked')]",
              "AZURE_SEARCH_KEY": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service'), '2022-09-01').outputs.adminKeySecretUri.value)]",
              "AZURE_SEARCH_PERMITTED_GROUPS_COLUMN": "[parameters('searchPermittedGroupsColumn')]",
              "AZURE_SEARCH_QUERY_TYPE": "[parameters('searchQueryType')]",
              "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": "[parameters('searchSemanticSearchConfig')]",
              "AZURE_SEARCH_SERVICE": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service'), '2022-09-01').outputs.name.value]",
              "AZURE_SEARCH_STRICTNESS": "[parameters('searchStrictness')]",
              "AZURE_SEARCH_TITLE_COLUMN": "[parameters('searchTitleColumn')]",
              "AZURE_SEARCH_TOP_K": "[parameters('searchTopK')]",
              "AZURE_SEARCH_URL": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service'), '2022-09-01').outputs.endpoint.value]",
              "AZURE_SEARCH_URL_COLUMN": "[parameters('searchUrlColumn')]",
              "AZURE_SEARCH_USE_SEMANTIC_SEARCH": "[parameters('searchUseSemanticSearch')]",
              "AZURE_SEARCH_VECTOR_COLUMNS": "[parameters('searchVectorColumns')]",
              "AZURE_STORAGE_ACCOUNT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'storage'), '2022-09-01').outputs.name.value]",
              "CREATE_INDEX_ON_START": true,
              "DATASOURCE_TYPE": "AzureCognitiveSearch",
              "DEBUG": "[variables('isDev')]",
              "DOTENV_PATH": ".env",
              "ENABLE_VECTOR_EMBEDDING": true,
              "KB_FIELDS_CONTENT": "",
              "KB_FIELDS_SOURCEPAGE": "",
              "OPEN_API_VERSION": "[parameters('openAIApiVersion')]",
              "OPENAI_API_KEY": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.openAiApiSubscriptionSecretUri.value)]",
              "OPENAI_CONTEXT_WINDOW": 120000,
              "OPENAI_EMBEDDING_DEPLOYMENT": "[parameters('openAIEmbeddingDeploymentName')]",
              "OPENAI_EMBEDDING_MODEL": "[parameters('openAIEmbeddingModelName')]",
              "SEARCH_ENABLE_IN_DOMAIN": "[parameters('searchEnableInDomain')]",
              "SEARCH_STRICTNESS": "[parameters('searchStrictness')]",
              "SEARCH_TOP_K": "[parameters('searchTopK')]",
              "SERVER_SOFTWARE": "gunicorn",
              "USE_PROMPTFLOW": "[parameters('searchUsePromptFlow')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12582674571295286292"
            }
          },
          "parameters": {
            "appServiceName": {
              "type": "string"
            },
            "appServicePlanName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "useExistingAppServicePlan": {
              "type": "bool",
              "defaultValue": false
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "identityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            "identityName": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python",
              "allowedValues": [
                "dotnet",
                "dotnetcore",
                "dotnet-isolated",
                "node",
                "python",
                "java",
                "powershell",
                "custom"
              ]
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": "3.11"
            },
            "runtimeNameAndVersion": {
              "type": "string",
              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageTag": {
              "type": "string",
              "defaultValue": ""
            },
            "kind": {
              "type": "string",
              "defaultValue": "app,linux",
              "allowedValues": [
                "functionapp,linux",
                "app,linux"
              ]
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "alwaysOn": {
              "type": "bool",
              "defaultValue": true
            },
            "appCommandLine": {
              "type": "string",
              "defaultValue": ""
            },
            "appSettings": {
              "type": "object",
              "defaultValue": {}
            },
            "authClientId": {
              "type": "string",
              "defaultValue": ""
            },
            "authClientSecret": {
              "type": "securestring",
              "defaultValue": ""
            },
            "authIssuerUri": {
              "type": "string",
              "defaultValue": ""
            },
            "authAllowedRedirectUrls": {
              "type": "array",
              "defaultValue": []
            },
            "authUnauthenticatedAction": {
              "type": "string",
              "defaultValue": "RedirectToLoginPage",
              "allowedValues": [
                "AllowAnonymous",
                "RedirectToLoginPage",
                "Return401",
                "Return403"
              ]
            },
            "clientAffinityEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "enableOryxBuild": {
              "type": "bool",
              "defaultValue": "[contains(parameters('kind'), 'linux')]"
            },
            "functionAppScaleLimit": {
              "type": "int",
              "defaultValue": -1
            },
            "minimumElasticInstanceCount": {
              "type": "int",
              "defaultValue": -1
            },
            "numberOfWorkers": {
              "type": "int",
              "defaultValue": -1
            },
            "elasticWebAppScaleLimit": {
              "type": "int",
              "defaultValue": "[parameters('functionAppScaleLimit')]"
            },
            "scmDoBuildDuringDeployment": {
              "type": "bool",
              "defaultValue": false
            },
            "use32BitWorkerProcess": {
              "type": "bool",
              "defaultValue": false
            },
            "runFromPackage": {
              "type": "bool",
              "defaultValue": false
            },
            "ftpsState": {
              "type": "string",
              "defaultValue": "FtpsOnly"
            },
            "healthCheckPath": {
              "type": "string",
              "defaultValue": ""
            },
            "inboundSubnetResourceId": {
              "type": "string"
            },
            "outboundSubnetResourceId": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "zoneRedundant": {
              "type": "bool",
              "defaultValue": false
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "string",
              "defaultValue": "B1",
              "allowedValues": [
                "B1",
                "B2",
                "EP3",
                "P0V3",
                "P1V3",
                "P2V3",
                "P3V3",
                "Y1"
              ]
            }
          },
          "variables": {
            "containerRegistryServerUrl": "[if(empty(parameters('containerRegistryName')), 'https://mcr.microsoft.com', format('https://{0}.azurecr.io', parameters('containerRegistryName')))]",
            "containerImageNameAndTag": "[if(or(empty(parameters('containerImageName')), empty(parameters('containerImageTag'))), 'azuredocs/containerapps-helloworld:latest', format('{0}:{1}', parameters('containerImageName'), parameters('containerImageTag')))]",
            "linuxFxVersion": "[if(empty(parameters('containerRegistryName')), parameters('runtimeNameAndVersion'), format('DOCKER|{0}/{1}', variables('containerRegistryServerUrl'), variables('containerImageNameAndTag')))]",
            "appLogCategories": [
              "AppServiceAppLogs",
              "AppServiceConsoleLogs",
              "AppServiceHTTPLogs",
              "AppServicePlatformLogs",
              "AppServiceAuthenticationLogs"
            ],
            "functionAppLogCategories": [
              "FunctionAppLogs",
              "AppServiceAuthenticationLogs"
            ],
            "logCategories": "[if(contains(parameters('kind'), 'functionapp'), variables('functionAppLogCategories'), variables('appLogCategories'))]",
            "diagSettings": "[map(variables('logCategories'), lambda('log', createObject('enabled', true(), 'category', lambdaVariables('log'))))]",
            "allowedAudiences": "[union(createArray(format('https://{0}.azurewebsites.net', parameters('appServiceName'))), parameters('authAllowedRedirectUrls'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'appsettings')]",
              "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, 'APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString, 'ApplicationInsightsAgent_EXTENSION_VERSION', if(contains(parameters('kind'), 'linux'), '~3', '~2')), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri), createObject()), if(not(empty(parameters('authClientSecret'))), createObject('AUTH_CLIENT_SECRET', parameters('authClientSecret')), createObject()), if(equals(parameters('kind'), 'functionapp,linux'), createObject('FUNCTIONS_EXTENSION_VERSION', '~4', 'AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value), 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value)), createObject()), if(and(equals(parameters('kind'), 'functionapp,linux'), empty(parameters('containerRegistryName'))), createObject('FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')), createObject()), if(not(empty(parameters('containerRegistryName'))), createObject('WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'false', 'DOCKER_REGISTRY_SERVER_URL', variables('containerRegistryServerUrl'), 'DOCKER_REGISTRY_SERVER_USERNAME', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').username, ''), 'DOCKER_REGISTRY_SERVER_PASSWORD', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').passwords[0].value, '')), createObject()), createObject('WEBSITE_RUN_FROM_PACKAGE', if(parameters('runFromPackage'), 1, 0)), if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject('USER_ASSIGNED_MANAGED_IDENTITY_CLIENT_ID', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').clientId), createObject()))]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('kind'), 'app,linux')]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Verbose"
                  }
                },
                "detailedErrorMessages": {
                  "enabled": true
                },
                "failedRequestsTracing": {
                  "enabled": true
                },
                "httpLogs": {
                  "fileSystem": {
                    "enabled": true,
                    "retentionInDays": 1,
                    "retentionInMb": 35
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                "[resourceId('Microsoft.Web/sites/config', parameters('appServiceName'), 'appsettings')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('authClientId')))]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'authsettingsV2')]",
              "properties": {
                "httpSettings": {
                  "requireHttps": true,
                  "forwardProxy": {
                    "convention": "Standard"
                  }
                },
                "globalValidation": {
                  "requireAuthentication": true,
                  "unauthenticatedClientAction": "[parameters('authUnauthenticatedAction')]",
                  "redirectToProvider": "azureactivedirectory"
                },
                "identityProviders": {
                  "azureActiveDirectory": {
                    "enabled": true,
                    "registration": {
                      "clientId": "[parameters('authClientId')]",
                      "clientSecretSettingName": "AUTH_CLIENT_SECRET",
                      "openIdIssuer": "[parameters('authIssuerUri')]"
                    },
                    "validation": {
                      "allowedAudiences": "[variables('allowedAudiences')]"
                    }
                  }
                },
                "login": {
                  "preserveUrlFragmentsForLogins": true,
                  "tokenStore": {
                    "enabled": true
                  },
                  "allowedExternalRedirectUrls": "[variables('allowedAudiences')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('kind'), 'functionapp,linux')]",
              "type": "Microsoft.Web/sites/networkConfig",
              "apiVersion": "2023-12-01",
              "name": "[format('{0}/{1}', parameters('appServiceName'), 'virtualNetwork')]",
              "properties": {
                "subnetResourceId": "[parameters('outboundSubnetResourceId')]",
                "swiftSupported": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('appServiceName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('appServiceName')))]"
              ]
            },
            {
              "condition": "[not(parameters('useExistingAppServicePlan'))]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-12-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), 1)]"
              },
              "kind": "linux",
              "properties": {
                "reserved": true,
                "zoneRedundant": "[parameters('zoneRedundant')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-12-01",
              "name": "[parameters('appServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "[parameters('identityType')]",
                "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
              },
              "properties": {
                "serverFarmId": "[if(parameters('useExistingAppServicePlan'), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')))]",
                "virtualNetworkSubnetId": "[parameters('outboundSubnetResourceId')]",
                "reserved": "[equals(parameters('kind'), 'functionapp,linux')]",
                "vnetRouteAllEnabled": true,
                "vnetContentShareEnabled": true,
                "vnetImagePullEnabled": true,
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "keyVaultReferenceIdentity": "[if(equals(parameters('identityType'), 'UserAssigned'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), null())]",
                "siteConfig": {
                  "linuxFxVersion": "[variables('linuxFxVersion')]",
                  "alwaysOn": "[parameters('alwaysOn')]",
                  "http20Enabled": true,
                  "minTlsVersion": "1.2",
                  "scmMinTlsVersion": "1.2",
                  "ftpsState": "[parameters('ftpsState')]",
                  "appCommandLine": "[parameters('appCommandLine')]",
                  "ipSecurityRestrictionsDefaultAction": "Deny",
                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                  "healthCheckPath": "[parameters('healthCheckPath')]",
                  "cors": {
                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                  },
                  "elasticWebAppScaleLimit": "[if(not(equals(parameters('elasticWebAppScaleLimit'), -1)), parameters('elasticWebAppScaleLimit'), null())]"
                },
                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                "httpsOnly": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('applicationInsightsName')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('appServiceName'))]",
              "name": "default",
              "properties": {
                "workspaceId": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').WorkspaceResourceId]",
                "logs": "[variables('diagSettings')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('appServiceName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('inboundSubnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('appServiceName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            },
            {
              "condition": "[and(not(empty(parameters('containerRegistryName'))), not(equals(parameters('identityType'), 'None')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-registry-access', deployment().name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "principalId": "[if(equals(parameters('identityType'), 'UserAssigned'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7188722871971346321"
                    },
                    "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                  },
                  "parameters": {
                    "containerRegistryName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                  },
                  "resources": [
                    {
                      "condition": "[not(empty(parameters('containerRegistryName')))]",
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                      "properties": {
                        "roleDefinitionId": "[variables('acrPullRole')]",
                        "principalType": "ServicePrincipal",
                        "principalId": "[parameters('principalId')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "identityPrincipalId": {
              "type": "string",
              "value": "[if(equals(parameters('identityType'), 'SystemAssigned'), reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId, if(equals(parameters('identityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId, ''))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('appServiceName')]"
            },
            "uri": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'app-gateway')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'backend-identity')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', format('formrecognizer{0}', variables('resourceToken')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'storage')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "language-service",
      "resourceGroup": "[if(not(empty(parameters('languageServiceResourceGroupName'))), parameters('languageServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('languageServiceName'))), createObject('value', parameters('languageServiceName')), createObject('value', format('{0}language-{1}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken'))))]",
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "sku": {
            "value": {
              "name": "[if(not(empty(parameters('languageServiceSkuName'))), parameters('languageServiceSkuName'), 'S0')]"
            }
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "kind": {
            "value": "TextAnalytics"
          },
          "location": {
            "value": "[parameters('languageServiceResourceGroupLocation')]"
          },
          "publicNetworkAccess": {
            "value": "Disabled"
          },
          "privateEndpointLocation": {
            "value": "[parameters('vnetResourceGroupLocation')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12984255510448965408"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "privateEndpointLocation": {
              "type": "string",
              "defaultValue": "[parameters('location')]"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "condition": "[and(not(empty(parameters('privateEndpointSubnetId'))), parameters('linkPrivateEndpointToPrivateDns'))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', if(equals(parameters('kind'), 'OpenAI'), 'privatelink.openai.azure.com', 'privatelink.cognitiveservices.azure.com'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "Deny"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('privateEndpointLocation')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]",
                  "properties": {}
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                "deployment"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2738895811534356834"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "condition": "[parameters('deployOpenAi')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai",
      "resourceGroup": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('openAiResourceName'))), createObject('value', parameters('openAiResourceName')), createObject('value', format('{0}aoai-{1}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('openAiResourceGroupLocation')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "sku": {
            "value": {
              "name": "[if(not(empty(parameters('openAiSkuName'))), parameters('openAiSkuName'), 'S0')]"
            }
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "kind": {
            "value": "OpenAI"
          },
          "publicNetworkAccess": {
            "value": "Disabled"
          },
          "privateEndpointLocation": {
            "value": "[parameters('location')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "deployments": {
            "value": [
              {
                "name": "[parameters('openAIModelDeploymentName')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('openAIModelName')]",
                  "version": "[parameters('openAIModelVersion')]"
                },
                "capacity": "[parameters('openAIModelCapacity')]",
                "skuName": "[parameters('openAIModelSkuTier')]"
              },
              {
                "name": "[parameters('openAIEmbeddingDeploymentName')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('openAIEmbeddingModelName')]",
                  "version": "[parameters('openAIEmbeddingModelVersion')]"
                },
                "capacity": "[parameters('openAIEmbeddingModelCapacity')]",
                "skuName": "[parameters('openAIEmbeddingModelSkuTier')]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12984255510448965408"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "privateEndpointLocation": {
              "type": "string",
              "defaultValue": "[parameters('location')]"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "condition": "[and(not(empty(parameters('privateEndpointSubnetId'))), parameters('linkPrivateEndpointToPrivateDns'))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', if(equals(parameters('kind'), 'OpenAI'), 'privatelink.openai.azure.com', 'privatelink.cognitiveservices.azure.com'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "Deny"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('privateEndpointLocation')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]",
                  "properties": {}
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                "deployment"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2738895811534356834"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "condition": "[and(parameters('deployOpenAi'), variables('isProd'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-secondary",
      "resourceGroup": "[if(not(empty(parameters('openAiResourceGroupNameSecondary'))), parameters('openAiResourceGroupNameSecondary'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('openAiResourceNameSecondary'))), createObject('value', parameters('openAiResourceNameSecondary')), createObject('value', format('{0}aoai-sec-{1}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('openAiResourceGroupLocationSecondary')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "sku": {
            "value": {
              "name": "[if(not(empty(parameters('openAiSkuName'))), parameters('openAiSkuName'), 'S0')]"
            }
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "kind": {
            "value": "OpenAI"
          },
          "publicNetworkAccess": {
            "value": "Disabled"
          },
          "privateEndpointLocation": {
            "value": "[parameters('location')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "deployments": {
            "value": "[union(createArray(createObject('name', parameters('openAIModelDeploymentName'), 'model', createObject('format', 'OpenAI', 'name', parameters('openAIModelName'), 'version', parameters('openAIModelVersion')), 'capacity', parameters('openAIModelCapacitySecondary'), 'skuName', parameters('openAIModelSkuTierSecondary'))), if(parameters('openAIEmbeddingDeploymentSecondaryEnabled'), createArray(createObject('name', parameters('openAIEmbeddingDeploymentName'), 'model', createObject('format', 'OpenAI', 'name', parameters('openAIEmbeddingModelName'), 'version', parameters('openAIEmbeddingModelVersion')), 'capacity', parameters('openAIEmbeddingModelCapacity'), 'skuName', parameters('openAIEmbeddingModelSkuTier'))), createArray()))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12984255510448965408"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "privateEndpointLocation": {
              "type": "string",
              "defaultValue": "[parameters('location')]"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "condition": "[and(not(empty(parameters('privateEndpointSubnetId'))), parameters('linkPrivateEndpointToPrivateDns'))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', if(equals(parameters('kind'), 'OpenAI'), 'privatelink.openai.azure.com', 'privatelink.cognitiveservices.azure.com'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "Deny"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('privateEndpointLocation')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]",
                  "properties": {}
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                "deployment"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2738895811534356834"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "event-hub",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "eventHubNamespaceName": "[if(not(empty(parameters('eventHubNamespaceName'))), createObject('value', parameters('eventHubNamespaceName')), createObject('value', format('{0}{1}', variables('abbrs').eventHubNamespaces, variables('resourceToken'))))]",
          "eventHubName": "[if(not(empty(parameters('eventHubName'))), createObject('value', parameters('eventHubName')), createObject('value', format('{0}{1}', variables('abbrs').eventHubNamespacesEventHubs, variables('resourceToken'))))]",
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8490435558475372000"
            }
          },
          "parameters": {
            "eventHubNamespaceName": {
              "type": "string"
            },
            "eventHubName": {
              "type": "string"
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "skuCapacity": {
              "type": "int",
              "defaultValue": 1
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('eventHubNamespaceName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('eventHubNamespaceName')))]"
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2024-01-01",
              "name": "[parameters('eventHubNamespaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
              }
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', parameters('eventHubNamespaceName'), parameters('eventHubName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('eventHubNamespaceName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('eventHubNamespaceName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]",
                      "groupIds": [
                        "namespace"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
              ]
            }
          ],
          "outputs": {
            "namespaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
            },
            "namespaceName": {
              "type": "string",
              "value": "[parameters('eventHubNamespaceName')]"
            },
            "eventHubId": {
              "type": "string",
              "value": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), parameters('eventHubName'))]"
            },
            "eventHubName": {
              "type": "string",
              "value": "[parameters('eventHubName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apim",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "apiManagementServiceName": "[if(not(empty(parameters('apimServiceName'))), createObject('value', parameters('apimServiceName')), createObject('value', format('{0}{1}', variables('abbrs').apiManagementService, variables('resourceToken'))))]",
          "apiManagmentSubnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.apiManagementSubnetResourceId.value]"
          },
          "apiManagementSku": "[if(variables('isProd'), createObject('value', 'Premium'), createObject('value', 'Developer'))]",
          "apiManagementSkuCount": "[if(variables('isProd'), createObject('value', 3), createObject('value', 1))]",
          "eventHubNamespaceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'event-hub'), '2022-09-01').outputs.namespaceName.value]"
          },
          "azureOpenAiRegionType": "[if(variables('isProd'), createObject('value', 'Multi'), createObject('value', 'Single'))]",
          "apiServiceNamePrimary": {
            "value": "[coalesce(tryGet(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01'), 'outputs').name.value, '')]"
          },
          "apiServiceRgPrimary": {
            "value": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))]"
          },
          "apiServiceNameSecondary": "[if(variables('isProd'), createObject('value', tryGet(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupNameSecondary'))), parameters('openAiResourceGroupNameSecondary'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai-secondary'), '2022-09-01'), 'outputs').name.value), createObject('value', ''))]",
          "apiServiceRgSecondary": "[if(variables('isProd'), createObject('value', if(not(empty(parameters('openAiResourceGroupNameSecondary'))), parameters('openAiResourceGroupNameSecondary'), variables('mainResourceGroupName'))), createObject('value', ''))]",
          "enableRetryPolicy": {
            "value": "[variables('isProd')]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "allowedOrigins": {
            "value": "[union(createArray(format('http://{0}.{1}.cloudapp.azure.com', variables('resourceName'), reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName')), '2024-03-01', 'full').location), format('https://{0}.azurewebsites.net', if(not(empty(parameters('backendServiceName'))), parameters('backendServiceName'), format('{0}backend-{1}', variables('abbrs').webSitesAppService, variables('resourceToken'))))), if(not(empty(parameters('gatewayPublicUrl'))), createArray(parameters('gatewayPublicUrl')), createArray()))]"
          },
          "backendApiUrl": {
            "value": "[format('https://{0}.azurewebsites.net', if(not(empty(parameters('backendServiceName'))), parameters('backendServiceName'), format('{0}backend-{1}', variables('abbrs').webSitesAppService, variables('resourceToken'))))]"
          },
          "backendApiDefinitionJson": {
            "value": "[variables('backendApiDefinitionJson')]"
          },
          "backendApiPoliciesXml": {
            "value": "[variables('backendApiPoliciesXml')]"
          },
          "backendApiSubscriptionRequired": {
            "value": "[variables('isProd')]"
          },
          "enableAzureOpenAiSupport": {
            "value": "[parameters('deployOpenAi')]"
          },
          "assignRbacRoles": {
            "value": "[and(parameters('assignRbacRoles'), parameters('assignApimRoles'))]"
          },
          "enableLoggers": {
            "value": "[parameters('apimEnableLoggers')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "autoScale": {
            "value": "[variables('isProd')]"
          },
          "zoneRedundant": {
            "value": "[variables('isProd')]"
          },
          "rateLimitCalls": {
            "value": "[parameters('apimRateLimitCalls')]"
          },
          "rateLimitPeriod": {
            "value": "[parameters('apimRateLimitPeriod')]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZonesResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "15199682504579010121"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location into which regionally scoped resources should be deployed. Note that Front Door is a global resource."
              }
            },
            "apiManagementSku": {
              "type": "string",
              "defaultValue": "Developer",
              "allowedValues": [
                "Premium",
                "Developer",
                "BasicV2",
                "StandardV2"
              ],
              "metadata": {
                "description": "The SKU of the API Management instance."
              }
            },
            "apiManagmentSubnetResourceId": {
              "type": "string"
            },
            "apiManagementPublisherName": {
              "type": "string",
              "defaultValue": "Contoso",
              "metadata": {
                "description": "The name of the API publisher. This information is used by API Management."
              }
            },
            "apiManagementPublisherEmail": {
              "type": "string",
              "defaultValue": "admin@contoso.com",
              "metadata": {
                "description": "The email address of the API publisher. This information is used by API Management."
              }
            },
            "enableAzureOpenAiSupport": {
              "type": "bool",
              "defaultValue": false
            },
            "apiServiceNamePrimary": {
              "type": "string",
              "defaultValue": "Insert_Your_Azure_OpenAi_Name_Here",
              "metadata": {
                "description": "Provide the Name of the Azure OpenAI service."
              }
            },
            "apiServiceRgPrimary": {
              "type": "string",
              "defaultValue": "Insert_Resource_Group_Name_Here",
              "metadata": {
                "description": "Provide the Resource Group Name of the Azure OpenAI service."
              }
            },
            "azureOpenAiRegionType": {
              "type": "string",
              "defaultValue": "Single",
              "allowedValues": [
                "Single",
                "Multi"
              ],
              "metadata": {
                "description": "If you want to provide resiliency when single region exceeds quota, then select Multi and provide URL to an additional Azure OpenAI endpoint. Otherwise, maintain default entry of Single and only provide one Azure OpenAI endpoint."
              }
            },
            "apiServiceNameSecondary": {
              "type": "string",
              "defaultValue": "Maybe-Insert_Your_Secondary_Azure_OpenAi_Name_Here",
              "metadata": {
                "description": "If you select Multi in azureOpenAiRegionType, then you must provide another Azure OpenAI Name here."
              }
            },
            "apiServiceRgSecondary": {
              "type": "string",
              "defaultValue": "Maybe-Insert_Resource_Group_Name_Here",
              "metadata": {
                "description": "If you select Multi in azureOpenAiRegionType, provide the Resource Group Name of the Azure OpenAI service."
              }
            },
            "enableRetryPolicy": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "If you want to enable retry policy for the API, set this to true. Otherwise, set this to false."
              }
            },
            "autoScale": {
              "type": "bool",
              "defaultValue": false
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "apiManagementServiceName": {
              "type": "string"
            },
            "apiManagementSkuCount": {
              "type": "int",
              "defaultValue": 1
            },
            "eventHubNamespaceName": {
              "type": "string"
            },
            "assignRbacRoles": {
              "type": "bool",
              "defaultValue": false
            },
            "enableLoggers": {
              "type": "bool",
              "defaultValue": "[parameters('assignRbacRoles')]"
            },
            "allowedOrigins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "backendApiUrl": {
              "type": "string"
            },
            "backendApiDefinitionJson": {
              "type": "string"
            },
            "backendApiPoliciesXml": {
              "type": "string"
            },
            "backendApiName": {
              "type": "string",
              "defaultValue": "backend-api"
            },
            "backendApiPath": {
              "type": "string",
              "defaultValue": "backend"
            },
            "backendApiSubscriptionName": {
              "type": "string",
              "defaultValue": "Backend-Api-Subscription"
            },
            "backendApiSubscriptionRequired": {
              "type": "bool",
              "defaultValue": true
            },
            "zoneRedundant": {
              "type": "bool",
              "defaultValue": false
            },
            "rateLimitCalls": {
              "type": "int",
              "defaultValue": 20
            },
            "rateLimitPeriod": {
              "type": "int",
              "defaultValue": 60
            },
            "privateDnsZonesResourceGroup": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "$fxv#0": "<policies>\r\n    <inbound>\r\n        <base />\r\n        {{policyFragments}}\r\n        <set-backend-service backend-id=\"aoai-primary-backend\" />\r\n        <authentication-managed-identity resource=\"https://cognitiveservices.azure.com\" />\r\n    </inbound>\r\n    <backend>\r\n        <retry\r\n            condition=\"@(context.Response.StatusCode == 429 || context.Response.StatusCode >= 500)\"\r\n            count=\"5\" interval=\"1\" delta=\"1\" max-interval=\"8\" first-fast-retry=\"false\">\r\n            <forward-request buffer-request-body=\"true\" />\r\n        </retry>\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#1": "<policies>\r\n    <inbound>\r\n        <base />\r\n        {{policyFragments}}\r\n        <set-backend-service backend-id=\"aoai-primary-backend\" />\r\n        <authentication-managed-identity resource=\"https://cognitiveservices.azure.com\" />\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#2": "<policies>\r\n    <inbound>\r\n        <base />\r\n        {{policyFragments}}\r\n        <set-backend-service backend-id=\"aoai-primary-backend\" />\r\n        <authentication-managed-identity resource=\"https://cognitiveservices.azure.com\" />\r\n    </inbound>\r\n    <backend>\r\n        <retry\r\n            condition=\"@(context.Response.StatusCode == 429 || context.Response.StatusCode >= 500)\"\r\n            count=\"5\" interval=\"1\" delta=\"1\" max-interval=\"8\" first-fast-retry=\"false\">\r\n            <!-- Failover logic below - uncomment to retry on secondary backend -->\r\n            <choose>\r\n                <when\r\n                    condition=\"@(context.Response.StatusCode == 429 || context.Response.StatusCode >= 500)\">\r\n                    <set-backend-service backend-id=\"aoai-secondary-backend\" />\r\n                </when>\r\n            </choose>\r\n            <forward-request buffer-request-body=\"true\" />\r\n        </retry>\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#3": {
              "AccessReviewOperatorServiceRole": "76cc9ee4-d5d3-4a45-a930-26add3d73475",
              "AcrDelete": "c2f4ef07-c644-48eb-af81-4b1b4947fb11",
              "AcrImageSigner": "6cef56e8-d556-48e5-a04f-b8e64114680f",
              "AcrPull": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
              "AcrPush": "8311e382-0749-4cb8-b61a-304f252e45ec",
              "AcrQuarantineReader": "cdda3590-29a3-44f6-95f2-9f980659eb04",
              "AcrQuarantineWriter": "c8d4ff99-41c3-41a8-9f60-21dfdad59608",
              "AdvisorReviewsContributor": "8aac15f0-d885-4138-8afa-bfb5872f7d13",
              "AdvisorReviewsReader": "c64499e0-74c3-47ad-921c-13865957895c",
              "AgFoodPlatformDatasetAdmin": "a8d4b70f-0fb9-4f72-b267-b87b2f990aec",
              "AgFoodPlatformSensorPartnerContributor": "6b77f0a0-0d89-41cc-acd1-579c22c17a67",
              "AgFoodPlatformServiceAdmin": "f8da80de-1ff9-4747-ad80-a19b7f6079e3",
              "AgFoodPlatformServiceContributor": "8508508a-4469-4e45-963b-2518ee0bb728",
              "AgFoodPlatformServiceReader": "7ec7ccdc-f61e-41fe-9aaf-980df0a44eba",
              "AnyBuildBuilder": "a2138dac-4907-4679-a376-736901ed8ad8",
              "APIManagementDeveloperPortalContentEditor": "c031e6a8-4391-4de0-8d69-4706a7ed3729",
              "APIManagementServiceContributor": "312a565d-c81f-4fd8-895a-4e21e48d571c",
              "APIManagementServiceOperatorRole": "e022efe7-f5ba-4159-bbe4-b44f577e9b61",
              "APIManagementServiceReaderRole": "71522526-b88f-4d52-b57f-d31fc3546d0d",
              "APIManagementServiceWorkspaceAPIDeveloper": "9565a273-41b9-4368-97d2-aeb0c976a9b3",
              "APIManagementServiceWorkspaceAPIProductManager": "d59a3e9c-6d52-4a5a-aeed-6bf3cf0e31da",
              "APIManagementWorkspaceAPIDeveloper": "56328988-075d-4c6a-8766-d93edd6725b6",
              "APIManagementWorkspaceAPIProductManager": "73c2c328-d004-4c5e-938c-35c6f5679a1f",
              "APIManagementWorkspaceContributor": "0c34c906-8d99-4cb7-8bb7-33f5b0a1a799",
              "APIManagementWorkspaceReader": "ef1c2c96-4a77-49e8-b9a4-6179fe1d2fd2",
              "AppComplianceAutomationAdministrator": "0f37683f-2463-46b6-9ce7-9b788b988ba2",
              "AppComplianceAutomationReader": "ffc6bbe0-e443-4c3b-bf54-26581bb2f78e",
              "AppConfigurationDataOwner": "5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b",
              "AppConfigurationDataReader": "516239f1-63e1-4d78-a4de-a74fb236a071",
              "AppGwforContainersConfigurationManager": "fbc52c3f-28ad-4303-a892-8a056630b8f1",
              "ApplicationGroupContributor": "ca6382a4-1721-4bcf-a114-ff0c70227b6b",
              "ApplicationInsightsComponentContributor": "ae349356-3a1b-4a5e-921d-050484c6347e",
              "ApplicationInsightsSnapshotDebugger": "08954f03-6346-4c2e-81c0-ec3a5cfae23b",
              "ASEShareRefreshData": "e2472aa6-cbfa-4fa6-91aa-72a0569352db",
              "AttestationContributor": "bbf86eb8-f7b4-4cce-96e4-18cddf81d86e",
              "AttestationReader": "fd1bd22b-8476-40bc-a0bc-69b95687b9f3",
              "AutomationContributor": "f353d9bd-d4a6-484e-a77a-8050b599b867",
              "AutomationJobOperator": "4fe576fe-1146-4730-92eb-48519fa6bf9f",
              "AutomationOperator": "d3881f73-407a-4167-8283-e981cbba0404",
              "AutomationRunbookOperator": "5fb5aef8-1081-4b8e-bb16-9d5d0385bab5",
              "AutonomousDevelopmentPlatformDataContributor(Preview)": "b8b15564-4fa6-4a59-ab12-03e1d9594795",
              "AutonomousDevelopmentPlatformDataOwner(Preview)": "27f8b550-c507-4db9-86f2-f4b8e816d59d",
              "AutonomousDevelopmentPlatformDataReader(Preview)": "d63b75f7-47ea-4f27-92ac-e0d173aaf093",
              "AvereContributor": "4f8fab4f-1852-4a58-a46a-8eaf358af14a",
              "AvereOperator": "c025889f-8102-4ebf-b32c-fc0c6f0c6bd9",
              "AzureAIDeveloper": "64702f94-c441-49e6-a78b-ef80e0188fee",
              "AzureAIInferenceDeploymentOperator": "3afb7f49-54cb-416e-8c09-6dc049efa503",
              "AzureAPICenterDataReader": "c7244dfb-f447-457d-b2ba-3999044d1706",
              "AzureArcEnabledKubernetesClusterUserRole": "00493d72-78f6-4148-b6c5-d3ce8e4799dd",
              "AzureArcKubernetesAdmin": "dffb1e0c-446f-4dde-a09f-99eb5cc68b96",
              "AzureArcKubernetesClusterAdmin": "8393591c-06b9-48a2-a542-1bd6b377f6a2",
              "AzureArcKubernetesViewer": "63f0a09d-1495-4db4-a681-037d84835eb4",
              "AzureArcKubernetesWriter": "5b999177-9696-4545-85c7-50de3797e5a1",
              "AzureArcScVmmAdministratorrole": "a92dfd61-77f9-4aec-a531-19858b406c87",
              "AzureArcScVmmPrivateCloudsOnboarding": "6aac74c4-6311-40d2-bbdd-7d01e7c6e3a9",
              "AzureArcScVmmPrivateCloudUser": "c0781e91-8102-4553-8951-97c6d4243cda",
              "AzureArcScVmmVMContributor": "e582369a-e17b-42a5-b10c-874c387c530b",
              "AzureArcVMwareAdministratorrole": "ddc140ed-e463-4246-9145-7c664192013f",
              "AzureArcVMwarePrivateCloudsOnboarding": "67d33e57-3129-45e6-bb0b-7cc522f762fa",
              "AzureArcVMwarePrivateCloudUser": "ce551c02-7c42-47e0-9deb-e3b6fc3a9a83",
              "AzureArcVMwareVMContributor": "b748a06d-6150-4f8a-aaa9-ce3940cd96cb",
              "AzureCenterforSAPsolutionsadministrator": "7b0c7e81-271f-4c71-90bf-e30bdfdbc2f7",
              "AzureCenterforSAPsolutionsManagementrole": "6d949e1d-41e2-46e3-8920-c6e4f31a8310",
              "AzureCenterforSAPsolutionsreader": "05352d14-a920-4328-a0de-4cbe7430e26b",
              "AzureCenterforSAPsolutionsservicerole": "aabbc5dd-1af0-458b-a942-81af88f9c138",
              "AzureCenterforSAPsolutionsServiceroleformanagement": "0105a6b0-4bb9-43d2-982a-12806f9faddb",
              "AzureConnectedMachineOnboarding": "b64e21ea-ac4e-4cdf-9dc9-5b892992bee7",
              "AzureConnectedMachineResourceAdministrator": "cd570a14-e51a-42ad-bac8-bafd67325302",
              "AzureConnectedMachineResourceManager": "f5819b54-e033-4d82-ac66-4fec3cbf3f4c",
              "AzureConnectedSQLServerOnboarding": "e8113dce-c529-4d33-91fa-e9b972617508",
              "AzureCustomerLockboxApproverforSubscription": "4dae6930-7baf-46f5-909e-0383bc931c46",
              "AzureDigitalTwinsDataOwner": "bcd981a7-7f74-457b-83e1-cceb9e632ffe",
              "AzureDigitalTwinsDataReader": "d57506d4-4c8d-48b1-8587-93c323f6a5a3",
              "AzureEdgeOn-SiteDeploymentEngineer": "207bcc4b-86a6-4487-9141-d6c1f4c238aa",
              "AzureEventHubsDataOwner": "f526a384-b230-433a-b45c-95f59c4a2dec",
              "AzureEventHubsDataReceiver": "a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
              "AzureEventHubsDataSender": "2b629674-e913-4c01-ae53-ef4638d8f975",
              "AzureExtensionforSQLServerDeployment": "7392c568-9289-4bde-aaaa-b7131215889d",
              "AzureFrontDoorDomainContributor": "0ab34830-df19-4f8c-b84e-aa85b8afa6e8",
              "AzureFrontDoorDomainReader": "0f99d363-226e-4dca-9920-b807cf8e1a5f",
              "AzureFrontDoorProfileReader": "662802e2-50f6-46b0-aed2-e834bacc6d12",
              "AzureFrontDoorSecretContributor": "3f2eb865-5811-4578-b90a-6fc6fa0df8e5",
              "AzureFrontDoorSecretReader": "0db238c4-885e-4c4f-a933-aa2cef684fca",
              "Azureimpact-insightreader": "dfb2f09d-25f8-4558-8986-497084006d7a",
              "AzureKubernetesFleetManagerContributorRole": "63bb64ad-9799-4770-b5c3-24ed299a07bf",
              "AzureKubernetesFleetManagerRBACAdmin": "434fb43a-c01c-447e-9f67-c3ad923cfaba",
              "AzureKubernetesFleetManagerRBACClusterAdmin": "18ab4d3d-a1bf-4477-8ad9-8359bc988f69",
              "AzureKubernetesFleetManagerRBACReader": "30b27cfc-9c84-438e-b0ce-70e35255df80",
              "AzureKubernetesFleetManagerRBACWriter": "5af6afb3-c06c-4fa4-8848-71a8aee05683",
              "AzureKubernetesServiceClusterAdminRole": "0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
              "AzureKubernetesServiceClusterMonitoringUser": "1afdec4b-e479-420e-99e7-f82237c7c5e6",
              "AzureKubernetesServiceClusterUserRole": "4abbcc35-e782-43d8-92c5-2d3f1bd2253f",
              "AzureKubernetesServiceContributorRole": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
              "AzureKubernetesServiceHybridClusterAdminRole": "b5092dac-c796-4349-8681-1a322a31c3f9",
              "AzureKubernetesServiceHybridClusterUserRole": "fc3f91a1-40bf-4439-8c46-45edbd83563a",
              "AzureKubernetesServiceHybridContributorRole": "e7037d40-443a-4434-a3fb-8cd202011e1d",
              "AzureKubernetesServicePolicyAdd-onDeployment": "18ed5180-3e48-46fd-8541-4ea054d57064",
              "AzureKubernetesServiceRBACAdmin": "3498e952-d568-435e-9b2c-8d77e338d7f7",
              "AzureKubernetesServiceRBACClusterAdmin": "b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b",
              "AzureKubernetesServiceRBACReader": "7f6c6a51-bcf8-42ba-9220-52d62157d7db",
              "AzureKubernetesServiceRBACWriter": "a7ffa36f-339b-4b5c-8bdf-e2c188b2c0eb",
              "AzureMachineLearningWorkspaceConnectionSecretsReader": "ea01e6af-a1c1-4350-9563-ad00f8c72ec5",
              "AzureMapsContributor": "dba33070-676a-4fb0-87fa-064dc56ff7fb",
              "AzureMapsDataContributor": "8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204",
              "AzureMapsDataReadandBatchRole": "d6470a16-71bd-43ab-86b3-6f3a73f4e787",
              "AzureMapsDataReader": "423170ca-a8f6-4b0f-8487-9e4eb8f49bfa",
              "AzureMapsSearchandRenderDataReader": "6be48352-4f82-47c9-ad5e-0acacefdb005",
              "AzureMLComputeOperator": "e503ece1-11d0-4e8e-8e2c-7a6c3bf38815",
              "AzureMLDataScientist": "f6c7c914-8db3-469d-8ca1-694a8f32e121",
              "AzureMLMetricsWriter(preview)": "635dd51f-9968-44d3-b7fb-6d9a6bd613ae",
              "AzureMLRegistryUser": "1823dd4f-9b8c-4ab6-ab4e-7397a3684615",
              "AzureProgrammableConnectivityGatewayUser": "609c0c20-e0a0-4a71-b99f-e7e755ac493d",
              "AzureRedHatOpenShiftAzureFilesStorageOperatorRole": "0d7aedc0-15fd-4a67-a412-efad370c947e",
              "AzureRedHatOpenShiftCloudControllerManagerRole": "a1f96423-95ce-4224-ab27-4e3dc72facd4",
              "AzureRedHatOpenShiftClusterIngressOperatorRole": "0336e1d3-7a87-462b-b6db-342b63f7802c",
              "AzureRedHatOpenShiftImageRegistryOperatorRole": "8b32b316-c2f5-4ddf-b05b-83dacd2d08b5",
              "AzureRedHatOpenShiftMachineAPIOperatorRole": "0358943c-7e01-48ba-8889-02cc51d78637",
              "AzureRedHatOpenShiftNetworkOperatorRole": "be7a6435-15ae-4171-8f30-4a343eff9e8f",
              "AzureRedHatOpenShiftServiceOperator": "4436bae4-7702-4c84-919b-c4069ff25ee2",
              "AzureRedHatOpenShiftStorageOperatorRole": "5b7237c5-45e1-49d6-bc18-a1f62f400748",
              "AzureRelayListener": "26e0b698-aa6d-4085-9386-aadae190014d",
              "AzureRelayOwner": "2787bf04-f1f5-4bfe-8383-c8a24483ee38",
              "AzureRelaySender": "26baccc8-eea7-41f1-98f4-1762cc7f685d",
              "AzureResourceBridgeDeploymentRole": "7b1f81f9-4196-4058-8aae-762e593270df",
              "AzureResourceNotificationsSystemTopicsSubscriber": "0b962ed2-6d56-471c-bd5f-3477d83a7ba4",
              "AzureServiceBusDataOwner": "090c5cfd-751d-490a-894a-3ce6f1109419",
              "AzureServiceBusDataReceiver": "4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0",
              "AzureServiceBusDataSender": "69a216fc-b8fb-44d8-bc22-1f3c2cd27a39",
              "AzureSphereContributor": "8b9dfcab-4b77-4632-a6df-94bd07820648",
              "AzureSphereOwner": "5a382001-fe36-41ff-bba4-8bf06bd54da9",
              "AzureSpherePublisher": "6d994134-994b-4a59-9974-f479f0b227fb",
              "AzureSphereReader": "c8ae6279-5a0b-4cb2-b3f0-d4d62845742c",
              "AzureSpringAppsApplicationConfigurationServiceLogReaderRole": "6593e776-2a30-40f9-8a32-4fe28b77655d",
              "AzureSpringAppsConnectRole": "80558df3-64f9-4c0f-b32d-e5094b036b0b",
              "AzureSpringAppsManagedComponentsLogReaderRole": "52fd16bd-6ed5-46af-9c40-29cbd7952a29",
              "AzureSpringAppsRemoteDebuggingRole": "a99b0159-1064-4c22-a57b-c9b3caa1c054",
              "AzureSpringAppsSpringCloudGatewayLogReaderRole": "4301dc2a-25a9-44b0-ae63-3636cf7f2bd2",
              "AzureSpringCloudConfigServerContributor": "a06f5c24-21a7-4e1a-aa2b-f19eb6684f5b",
              "AzureSpringCloudConfigServerReader": "d04c6db6-4947-4782-9e91-30a88feb7be7",
              "AzureSpringCloudDataReader": "b5537268-8956-4941-a8f0-646150406f0c",
              "AzureSpringCloudServiceRegistryContributor": "f5880b48-c26d-48be-b172-7927bfa1c8f1",
              "AzureSpringCloudServiceRegistryReader": "cff1b556-2399-4e7e-856d-a8f754be7b65",
              "AzureStackHCIAdministrator": "bda0d508-adf1-4af0-9c28-88919fc3ae06",
              "AzureStackHCIDeviceManagementRole": "865ae368-6a45-4bd1-8fbf-0d5151f56fc1",
              "AzureStackHCIVMContributor": "874d1c73-6003-4e60-a13a-cb31ea190a85",
              "AzureStackHCIVMReader": "4b3fe76c-f777-4d24-a2d7-b027b0f7b273",
              "AzureStackRegistrationOwner": "6f12a6df-dd06-4f3e-bcb1-ce8be600526a",
              "AzureUsageBillingDataSender": "f0310ce6-e953-4cf8-b892-fb1c87eaf7f6",
              "AzureVMManagedidentitiesrestoreContributor": "6ae96244-5829-4925-a7d3-5975537d91dd",
              "BackupContributor": "5e467623-bb1f-42f4-a55d-6e525e11384b",
              "BackupOperator": "00c29273-979b-4161-815c-10b084fb9324",
              "BackupReader": "a795c7a0-d4a2-40c1-ae25-d81f01202912",
              "BayerAgPoweredServicesCWUMSolution": "a9b99099-ead7-47db-8fcf-072597a61dfa",
              "BayerAgPoweredServicesGDUSolution": "c4bc862a-3b64-4a35-a021-a380c159b042",
              "BayerAgPoweredServicesImagerySolution": "ef29765d-0d37-4119-a4f8-f9f9902c9588",
              "BillingReader": "fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64",
              "BizTalkContributor": "5e3c6656-6cfa-4708-81fe-0de47ac73342",
              "BlockchainMemberNodeAccess(Preview)": "31a002a1-acaf-453e-8a5b-297c9ca1ea24",
              "BlueprintContributor": "41077137-e803-4205-871c-5a86e6a753b4",
              "BlueprintOperator": "437d2ced-4a38-4302-8479-ed2bcb43d090",
              "CarbonOptimizationReader": "fa0d39e6-28e5-40cf-8521-1eb320653a4c",
              "CDNEndpointContributor": "426e0c7f-0c7e-4658-b36f-ff54d6c29b45",
              "CDNEndpointReader": "871e35f6-b5c1-49cc-a043-bde969a0f2cd",
              "CDNProfileContributor": "ec156ff8-a8d1-4d15-830c-5b80698ca432",
              "CDNProfileReader": "8f96442b-4075-438f-813d-ad51ab4019af",
              "ChamberAdmin": "4e9b8407-af2e-495b-ae54-bb60a55b1b5a",
              "ChamberUser": "4447db05-44ed-4da3-ae60-6cbece780e32",
              "ClassicNetworkContributor": "b34d265f-36f7-4a0d-a4d4-e158ca92e90f",
              "ClassicStorageAccountContributor": "86e8f5dc-a6e9-4c67-9d15-de283e8eac25",
              "ClassicStorageAccountKeyOperatorServiceRole": "985d6b00-f706-48f5-a6fe-d0ca12fb668d",
              "ClassicVirtualMachineContributor": "d73bb868-a0df-4d4d-bd69-98a00b01fccb",
              "ClearDBMySQLDBContributor": "9106cda0-8a86-4e81-b686-29a22c54effe",
              "CodeSigningCertificateProfileSigner": "2837e146-70d7-4cfd-ad55-7efa6464f958",
              "CodeSigningIdentityVerifier": "4339b7cf-9826-4e41-b4ed-c7f4505dac08",
              "CognitiveSearchServerlessDataContributor": "7ac06ca7-21ca-47e3-a67b-cbd6e6223baf",
              "CognitiveSearchServerlessDataReader": "79b01272-bf9f-4f4c-9517-5506269cf524",
              "CognitiveServicesContributor": "25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68",
              "CognitiveServicesCustomVisionContributor": "c1ff6cc2-c111-46fe-8896-e0ef812ad9f3",
              "CognitiveServicesCustomVisionDeployment": "5c4089e1-6d96-4d2f-b296-c1bc7137275f",
              "CognitiveServicesCustomVisionLabeler": "88424f51-ebe7-446f-bc41-7fa16989e96c",
              "CognitiveServicesCustomVisionReader": "93586559-c37d-4a6b-ba08-b9f0940c2d73",
              "CognitiveServicesCustomVisionTrainer": "0a5ae4ab-0d65-4eeb-be61-29fc9b54394b",
              "CognitiveServicesDataReader(Preview)": "b59867f0-fa02-499b-be73-45a86b5b3e1c",
              "CognitiveServicesFaceRecognizer": "9894cab4-e18a-44aa-828b-cb588cd6f2d7",
              "CognitiveServicesImmersiveReaderUser": "b2de6794-95db-4659-8781-7e080d3f2b9d",
              "CognitiveServicesLanguageOwner": "f07febfe-79bc-46b1-8b37-790e26e6e498",
              "CognitiveServicesLanguageReader": "7628b7b8-a8b2-4cdc-b46f-e9b35248918e",
              "CognitiveServicesLanguageWriter": "f2310ca1-dc64-4889-bb49-c8e0fa3d47a8",
              "CognitiveServicesLUISOwner": "f72c8140-2111-481c-87ff-72b910f6e3f8",
              "CognitiveServicesLUISReader": "18e81cdc-4e98-4e29-a639-e7d10c5a6226",
              "CognitiveServicesLUISWriter": "6322a993-d5c9-4bed-b113-e49bbea25b27",
              "CognitiveServicesMetricsAdvisorAdministrator": "cb43c632-a144-4ec5-977c-e80c4affc34a",
              "CognitiveServicesMetricsAdvisorUser": "3b20f47b-3825-43cb-8114-4bd2201156a8",
              "CognitiveServicesOpenAIContributor": "a001fd3d-188f-4b5d-821b-7da978bf7442",
              "CognitiveServicesOpenAIUser": "5e0bd9bd-7b93-4f28-af87-19fc36ad61bd",
              "CognitiveServicesQnAMakerEditor": "f4cc2bf9-21be-47a1-bdf1-5c5804381025",
              "CognitiveServicesQnAMakerReader": "466ccd10-b268-4a11-b098-b4849f024126",
              "CognitiveServicesSpeechContributor": "0e75ca1e-0464-4b4d-8b93-68208a576181",
              "CognitiveServicesSpeechUser": "f2dc8367-1007-4938-bd23-fe263f013447",
              "CognitiveServicesUsagesReader": "bba48692-92b0-4667-a9ad-c31c7b334ac2",
              "CognitiveServicesUser": "a97b65f3-24c7-4388-baec-2e87135dc908",
              "CollaborativeDataContributor": "daa9e50b-21df-454c-94a6-a8050adab352",
              "CollaborativeRuntimeOperator": "7a6f0e70-c033-4fb1-828c-08514e5f4102",
              "CommunityContributorRole": "49435da6-99fe-48a5-a235-fc668b9dc04a",
              "CommunityOwnerRole": "5e28a61e-8040-49db-b175-bb5b88af6239",
              "CommunityReaderRole": "e6aadb6b-e64f-41c0-9392-d2bba3bc3ebc",
              "ComputeDiagnosticsRole": "df2711a6-406d-41cf-b366-b0250bff9ad1",
              "ComputeGallerySharingAdmin": "1ef6a3be-d0ac-425d-8c01-acb62866290b",
              "ConnectedClusterManagedIdentityCheckAccessReader": "65a14201-8f6c-4c28-bec4-12619c5a9aaa",
              "ContainerAppReader": "ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b",
              "Contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
              "Contributorw/NetworkReady-only": "ef2e6351-aaa6-4608-8d63-71880b149027",
              "CosmosBackupOperator": "db7b14f2-5adf-42da-9f96-f2ee17bab5cb",
              "CosmosDBAccountReaderRole": "fbdf93bf-df7d-467e-a4d2-9458aa1360c8",
              "CosmosDBOperator": "230815da-be43-4aae-9cb4-875f7bd000aa",
              "CosmosRestoreOperator": "5432c526-bc82-444a-b7ba-57c5b0b5b34f",
              "CostManagementContributor": "434105ed-43f6-45c7-a02f-909b2ba83430",
              "CostManagementReader": "72fafb9e-0641-4937-9268-a91bfd8191a3",
              "DataBoundaryTenantAdministrator": "d1a38570-4b05-4d70-b8e4-1100bcf76d12",
              "DataBoxContributor": "add466c9-e687-43fc-8d98-dfcf8d720be5",
              "DataBoxReader": "028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027",
              "DataFactoryContributor": "673868aa-7521-48a0-acc6-0f60742d39f5",
              "DataLabeling-Labeler": "c6decf44-fd0a-444c-a844-d653c394e7ab",
              "DataLakeAnalyticsDeveloper": "47b7735b-770e-4598-a7da-8b91488b4c88",
              "DataOperatorforManagedDisks": "959f8984-c045-4866-89c7-12bf9737be2e",
              "DataPurger": "150f5e0c-0603-4f03-8c7f-cf70034c4e90",
              "DefenderforStorageDataScanner": "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
              "DefenderKubernetesAgentOperator": "8bb6f106-b146-4ee6-a3f9-b9c5a96e0ae5",
              "DeIDBatchDataOwner": "8a90fa6b-6997-4a07-8a95-30633a7c97b9",
              "DeIDBatchDataReader": "b73a14ee-91f5-41b7-bd81-920e12466be9",
              "DeIDRealtimeDataUser": "bb6577c4-ea0a-40b2-8962-ea18cb8ecd4e",
              "DeploymentEnvironmentsReader": "eb960402-bf75-4cc3-8d68-35b34f960f72",
              "DeploymentEnvironmentsUser": "18e40d4e-8d2e-438d-97e1-9528336e149c",
              "DesktopVirtualizationApplicationGroupContributor": "86240b0e-9422-4c43-887b-b61143f32ba8",
              "DesktopVirtualizationApplicationGroupReader": "aebf23d0-b568-4e86-b8f9-fe83a2c6ab55",
              "DesktopVirtualizationContributor": "082f0a83-3be5-4ba1-904c-961cca79b387",
              "DesktopVirtualizationHostPoolContributor": "e307426c-f9b6-4e81-87de-d99efb3c32bc",
              "DesktopVirtualizationHostPoolReader": "ceadfde2-b300-400a-ab7b-6143895aa822",
              "DesktopVirtualizationPowerOnContributor": "489581de-a3bd-480d-9518-53dea7416b33",
              "DesktopVirtualizationPowerOnOffContributor": "40c5ff49-9181-41f8-ae61-143b0e78555e",
              "DesktopVirtualizationReader": "49a72310-ab8d-41df-bbb0-79b649203868",
              "DesktopVirtualizationSessionHostOperator": "2ad6aaab-ead9-4eaa-8ac5-da422f562408",
              "DesktopVirtualizationUser": "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
              "DesktopVirtualizationUserSessionOperator": "ea4bfff8-7fb4-485a-aadd-d4129a0ffaa6",
              "DesktopVirtualizationVirtualMachineContributor": "a959dbd1-f747-45e3-8ba6-dd80f235f97c",
              "DesktopVirtualizationWorkspaceContributor": "21efdde3-836f-432b-bf3d-3e8e734d4b2b",
              "DesktopVirtualizationWorkspaceReader": "0fa44ee9-7a7d-466b-9bb2-2bf446b1204d",
              "DevCenterDevBoxUser": "45d50f46-0b78-4001-a660-4198cbe8cd05",
              "DevCenterProjectAdmin": "331c37c6-af14-46d9-b9f4-e1909e1b95a0",
              "DeviceProvisioningServiceDataContributor": "dfce44e4-17b7-4bd1-a6d1-04996ec95633",
              "DeviceProvisioningServiceDataReader": "10745317-c249-44a1-a5ce-3a4353c0bbd8",
              "DeviceUpdateAdministrator": "02ca0879-e8e4-47a5-a61e-5c618b76e64a",
              "DeviceUpdateContentAdministrator": "0378884a-3af5-44ab-8323-f5b22f9f3c98",
              "DeviceUpdateContentReader": "d1ee9a80-8b14-47f0-bdc2-f4a351625a7b",
              "DeviceUpdateDeploymentsAdministrator": "e4237640-0e3d-4a46-8fda-70bc94856432",
              "DeviceUpdateDeploymentsReader": "49e2f5d2-7741-4835-8efa-19e1fe35e47f",
              "DeviceUpdateReader": "e9dba6fb-3d52-4cf0-bce3-f06ce71b9e0f",
              "DevTestLabsUser": "76283e04-6283-4c54-8f91-bcf1374a3c64",
              "DICOMDataOwner": "58a3b984-7adf-4c20-983a-32417c86fbc8",
              "DICOMDataReader": "e89c7a3c-2f64-4fa1-a847-3e4c9ba4283a",
              "DiskBackupReader": "3e5e47e6-65f7-47ef-90b5-e5dd4d455f24",
              "DiskPoolOperator": "60fc6e62-5479-42d4-8bf4-67625fcc2840",
              "DiskRestoreOperator": "b50d9833-a0cb-478e-945f-707fcc997c13",
              "DiskSnapshotContributor": "7efff54f-a5b4-42b5-a1c5-5411624893ce",
              "DNSResolverContributor": "0f2ebee7-ffd4-4fc0-b3b7-664099fdad5d",
              "DNSZoneContributor": "befefa01-2a29-4197-83a8-272ff33ce314",
              "DocumentDBAccountContributor": "5bd9cd88-fe45-4216-938b-f97437e15450",
              "DomainServicesContributor": "eeaeda52-9324-47f6-8069-5d5bade478b2",
              "DomainServicesReader": "361898ef-9ed1-48c2-849c-a832951106bb",
              "ElasticSANNetworkAdmin": "fa6cecf6-5db3-4c43-8470-c540bcb4eafa",
              "ElasticSANOwner": "80dcbedb-47ef-405d-95bd-188a1b4ac406",
              "ElasticSANReader": "af6a70f8-3c9f-4105-acf1-d719e9fca4ca",
              "ElasticSANSnapshotExporter": "1c4770c0-34f7-4110-a1ea-a5855cc7a939",
              "ElasticSANVolumeGroupOwner": "a8281131-f312-4f34-8d98-ae12be9f0d23",
              "ElasticSANVolumeImporter": "90e8b822-3e73-47b5-868a-787dc80c008f",
              "EnclaveContributorRole": "19feefae-eacc-4106-81fd-ac34c0671f14",
              "EnclaveOwnerRole": "3d5f3eff-eb94-473d-91e3-7aac74d6c0bb",
              "EnclaveReaderRole": "86fede04-b259-4277-8c3e-e26b9865abd8",
              "EventGridContributor": "1e241071-0855-49ea-94dc-649edcd759de",
              "EventGridDataContributor": "1d8c3fe3-8864-474b-8749-01e3783e8157",
              "EventGridDataReceiver": "78cbd9e7-9798-4e2e-9b5a-547d9ebb31fb",
              "EventGridDataSender": "d5a91429-5739-47e2-a06b-3470a27159e7",
              "EventGridEventSubscriptionContributor": "428e0ff0-5e57-4d9c-a221-2c70d0e0a443",
              "EventGridEventSubscriptionReader": "2414bbcf-6497-4faf-8c65-045460748405",
              "EventGridTopicSpacesPublisher": "a12b0b94-b317-4dcd-84a8-502ce99884c6",
              "EventGridTopicSpacesSubscriber": "4b0f2fd7-60b4-4eca-896f-4435034f8bf5",
              "ExperimentationAdministrator": "7f646f1b-fa08-80eb-a33b-edd6ce5c915c",
              "ExperimentationContributor": "7f646f1b-fa08-80eb-a22b-edd6ce5c915c",
              "ExperimentationMetricContributor": "6188b7c9-7d01-4f99-a59f-c88b630326c0",
              "ExperimentationReader": "49632ef5-d9ac-41f4-b8e7-bbe587fa74a1",
              "FHIRDataContributor": "5a1fc7df-4bf1-4951-a576-89034ee01acd",
              "FHIRDataConverter": "a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
              "FHIRDataExporter": "3db33094-8700-4567-8da5-1501d4e7e843",
              "FHIRDataImporter": "4465e953-8ced-4406-a58e-0f6e3f3b530b",
              "FHIRDataReader": "4c8d0bbc-75d3-4935-991f-5f3c56d81508",
              "FHIRDataWriter": "3f88fce4-5892-4214-ae73-ba5294559913",
              "FHIRSMARTUser": "4ba50f17-9666-485c-a643-ff00808643f0",
              "FirmwareAnalysisAdmin": "9c1607d1-791d-4c68-885d-c7b7aaff7c8a",
              "GrafanaAdmin": "22926164-76b3-42b3-bc55-97df8dab3e41",
              "GrafanaEditor": "a79a5197-3a5c-4973-a920-486035ffd60f",
              "GrafanaViewer": "60921a7e-fef1-4a43-9b16-a26c52ad4769",
              "GraphOwner": "b60367af-1334-4454-b71e-769d9a4f83d9",
              "GuestConfigurationResourceContributor": "088ab73d-1256-47ae-bea9-9de8e7131f31",
              "HDInsightClusterOperator": "61ed4efc-fab3-44fd-b111-e24485cc132a",
              "HDInsightDomainServicesContributor": "8d8d5a11-05d3-4bda-a417-a08778121c7c",
              "HDInsightonAKSClusterAdmin": "fd036e6b-1266-47a0-b0bb-a05d04831731",
              "HDInsightonAKSClusterPoolAdmin": "7656b436-37d4-490a-a4ab-d39f838f0042",
              "HierarchySettingsAdministrator": "350f8d15-c687-4448-8ae1-157740a3936d",
              "HybridServerOnboarding": "5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb",
              "HybridServerResourceAdministrator": "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "ImpactReader": "68ff5d27-c7f5-4fa9-a21c-785d0df7bd9e",
              "ImpactReporter": "36e80216-a7e8-4f42-a7e1-f12c98cbaf8a",
              "IntegrationServiceEnvironmentContributor": "a41e2c5b-bd99-4a07-88f4-9bf657a760b8",
              "IntegrationServiceEnvironmentDeveloper": "c7aa55d3-1abb-444a-a5ca-5e51e485d6ec",
              "IntelligentSystemsAccountContributor": "03a6d094-3444-4b3d-88af-7477090a9e5e",
              "IoTHubDataContributor": "4fc6c259-987e-4a07-842e-c321cc9d413f",
              "IoTHubDataReader": "b447c946-2db7-41ec-983d-d8bf3b1c77e3",
              "IoTHubRegistryContributor": "4ea46cd5-c1b2-4a8e-910b-273211f9ce47",
              "IoTHubTwinContributor": "494bdba2-168f-4f31-a0a1-191d2f7c028c",
              "IPAMPoolContributor": "7b3e853f-ad5d-4fb5-a7b8-56a3581c7037",
              "KeyVaultAdministrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
              "KeyVaultCertificatesOfficer": "a4417e6f-fecd-4de8-b567-7b0420556985",
              "KeyVaultCertificateUser": "db79e9a7-68ee-4b58-9aeb-b90e7c24fcba",
              "KeyVaultContributor": "f25e0fa2-a7c8-4377-a976-54943a77a395",
              "KeyVaultCryptoOfficer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
              "KeyVaultCryptoServiceEncryptionUser": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
              "KeyVaultCryptoServiceReleaseUser": "08bbd89e-9f13-488c-ac41-acfcb10c90ab",
              "KeyVaultCryptoUser": "12338af0-0e69-4776-bea7-57ae8d297424",
              "KeyVaultDataAccessAdministrator": "8b54135c-b56d-4d72-a534-26097cfdc8d8",
              "KeyVaultReader": "21090545-7ca7-4776-b22c-e363652d74d2",
              "KeyVaultSecretsOfficer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
              "KeyVaultSecretsUser": "4633458b-17de-408a-b874-0445c86b69e6",
              "KnowledgeConsumer": "ee361c5d-f7b5-4119-b4b6-892157c8f64c",
              "KubernetesAgentlessOperator": "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
              "KubernetesCluster-AzureArcOnboarding": "34e09817-6cbe-4d01-b1a2-e0eac5743d41",
              "KubernetesExtensionContributor": "85cb6faf-e071-4c9b-8136-154b5a04f717",
              "KubernetesNamespaceUser": "ba79058c-0414-4a34-9e42-c3399d80cd5a",
              "KubernetesRuntimeStorageClassContributorRole": "0cd9749a-3aaf-4ae5-8803-bd217705bf3b",
              "LabAssistant": "ce40b423-cede-4313-a93f-9b28290b72e1",
              "LabContributor": "5daaa2af-1fe8-407c-9122-bba179798270",
              "LabCreator": "b97fb8bc-a8b2-4522-a38b-dd33c7e65ead",
              "LabOperator": "a36e6959-b6be-4b12-8e9f-ef4b474d304d",
              "LabServicesContributor": "f69b8690-cc87-41d6-b77a-a4bc3c0a966f",
              "LabServicesReader": "2a5c394f-5eb7-4d4f-9c8e-e8eae39faebc",
              "LandingZoneManagementOwner": "38863829-c2a4-4f8d-b1d2-2e325973ebc7",
              "LandingZoneManagementReader": "8fe6e843-6d9e-417b-9073-106b048f50bb",
              "LoadTestContributor": "749a398d-560b-491b-bb21-08924219302e",
              "LoadTestOwner": "45bb0b16-2f0c-4e78-afaa-a07599b003f6",
              "LoadTestReader": "3ae3fb29-0000-4ccd-bf80-542e7b26e081",
              "LocalNGFirewallAdministratorrole": "a8835c7d-b5cb-47fa-b6f0-65ea10ce07a2",
              "LocalRulestacksAdministratorrole": "bfc3b73d-c6ff-45eb-9a5f-40298295bf20",
              "LogAnalyticsContributor": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "LogAnalyticsReader": "73c42c96-874c-492b-b04d-ab87d138a893",
              "LogicAppContributor": "87a39d53-fc1b-424a-814c-f7e04687dc9e",
              "LogicAppOperator": "515c2055-d9d4-4321-b1b9-bd0c9a0f79fe",
              "LogicAppsStandardContributor(Preview)": "ad710c24-b039-4e85-a019-deb4a06e8570",
              "LogicAppsStandardDeveloper(Preview)": "523776ba-4eb2-4600-a3c8-f2dc93da4bdb",
              "LogicAppsStandardOperator(Preview)": "b70c96e9-66fe-4c09-b6e7-c98e69c98555",
              "LogicAppsStandardReader(Preview)": "4accf36b-2c05-432f-91c8-5c532dff4c73",
              "LucidchartCloudInsightsimport": "32ba3ff9-6cc1-4b21-aa1c-4150ed63e1b9",
              "ManagedApplicationContributorRole": "641177b8-a67a-45b9-a033-47bc880bb21e",
              "ManagedApplicationOperatorRole": "c7393b34-138c-406f-901b-d8cf2b17e6ae",
              "ManagedApplicationsReader": "b9331d33-8a36-4f8c-b097-4f54124fdb44",
              "ManagedHSMcontributor": "18500a29-7fe2-46b2-a342-b16a415e101d",
              "ManagedIdentityContributor": "e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
              "ManagedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
              "ManagedServicesRegistrationassignmentDeleteRole": "91c1777a-f3dc-4fae-b103-61d183457e46",
              "ManagementGroupContributor": "5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c",
              "ManagementGroupReader": "ac63b705-f282-497d-ac71-919bf39d939d",
              "MediaServicesAccountAdministrator": "054126f8-9a2b-4f1c-a9ad-eca461f08466",
              "MediaServicesLiveEventsAdministrator": "532bc159-b25e-42c0-969e-a1d439f60d77",
              "MediaServicesMediaOperator": "e4395492-1534-4db2-bedf-88c14621589c",
              "MediaServicesPolicyAdministrator": "c4bba371-dacd-4a26-b320-7250bca963ae",
              "MediaServicesStreamingEndpointsAdministrator": "99dba123-b5fe-44d5-874c-ced7199a5804",
              "Microsoft.Kubernetesconnectedclusterrole": "5548b2cf-c94c-4228-90ba-30851930a12f",
              "MicrosoftSentinelAutomationContributor": "f4c81013-99ee-4d62-a7ee-b3f1f648599a",
              "MicrosoftSentinelContributor": "ab8e14d6-4a74-4a29-9ba8-549422addade",
              "MicrosoftSentinelPlaybookOperator": "51d6186e-6489-4900-b93f-92e23144cca5",
              "MicrosoftSentinelReader": "8d289c81-5878-46d4-8554-54e1e3d8b5cb",
              "MicrosoftSentinelResponder": "3e150937-b8fe-4cfb-8069-0eaf05ecd056",
              "MonitoringContributor": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "MonitoringDataReader": "b0d8363b-8ddd-447d-831f-62ca05bff136",
              "MonitoringMetricsPublisher": "3913510d-42f4-4e42-8a64-420c390055eb",
              "MonitoringReader": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
              "MySQLBackupAndExportOperator": "d18ad5f3-1baf-4119-b49b-d944edb1f9d0",
              "NetworkContributor": "4d97b98b-1d4f-4787-a291-c67834d212e7",
              "NewRelicAPMAccountContributor": "5d28c62d-5b37-4476-8438-e587778df237",
              "ObjectAnchorsAccountOwner": "ca0835dd-bacc-42dd-8ed2-ed5e7230d15b",
              "ObjectAnchorsAccountReader": "4a167cdf-cb95-4554-9203-2347fe489bd9",
              "ObjectUnderstandingAccountOwner": "4dd61c23-6743-42fe-a388-d8bdd41cb745",
              "ObjectUnderstandingAccountReader": "d18777c0-1514-4662-8490-608db7d334b6",
              "OperatorNexusKeyVaultWriterServiceRole(Preview)": "44f0a1a8-6fea-4b35-980a-8ff50c487c97",
              "Owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "Ownerw/NetworkRead-only": "1712bb1e-474a-4282-a94c-cdcbabf2cba1",
              "PlayFabContributor": "0c8b84dc-067c-4039-9615-fa1a4b77c726",
              "PlayFabReader": "a9a19cc5-31f4-447c-901f-56c0bb18fcaf",
              "PolicyInsightsDataWriter(Preview)": "66bb4e9e-b016-4a94-8249-4c0511c2be84",
              "PostgreSQLFlexibleServerLongTermRetentionBackupRole": "c088a766-074b-43ba-90d4-1fb21feae531",
              "PrivateDNSZoneContributor": "b12aa53e-6015-4669-85d0-8515ebb3ae7f",
              "ProcurementContributor": "be1a1ac2-09d3-4261-9e57-a73a6e227f53",
              "ProjectBabylonDataCurator": "9ef4ef9c-a049-46b0-82ab-dd8ac094c889",
              "ProjectBabylonDataReader": "c8d896ba-346d-4f50-bc1d-7d1c84130446",
              "ProjectBabylonDataSourceAdministrator": "05b7651b-dc44-475e-b74d-df3db49fae0f",
              "Purviewrole1(Deprecated)": "8a3c2885-9b38-4fd2-9d99-91af537c1347",
              "Purviewrole2(Deprecated)": "200bba9e-f0c8-430f-892b-6f0794863803",
              "Purviewrole3(Deprecated)": "ff100721-1b9d-43d8-af52-42b69c1272db",
              "QuotaRequestOperator": "0e5f05e5-9ab9-446b-b98d-1e2157c94125",
              "Reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "ReaderandDataAccess": "c12c1c16-33a1-487b-954d-41c89c60f349",
              "RedisCacheContributor": "e0f68234-74aa-48ed-b826-c38b57376e17",
              "RemoteRenderingAdministrator": "3df8b902-2a6f-47c7-8cc5-360e9b272a7e",
              "RemoteRenderingClient": "d39065c4-c120-43c9-ab0a-63eed9795f0a",
              "ReservationPurchaser": "f7b75c60-3036-4b75-91c3-6b41c27c1689",
              "ResourcePolicyContributor": "36243c78-bf99-498c-9df9-86d9f8d28608",
              "RoleBasedAccessControlAdministrator": "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
              "SaaSHubContributor": "e9b8712a-cbcf-4ea7-b0f7-e71b803401e6",
              "ScheduledPatchingContributor": "cd08ab90-6b14-449c-ad9a-8f8e549482c6",
              "SchedulerJobCollectionsContributor": "188a0f2f-5c9e-469b-ae67-2aa5ce574b94",
              "SchemaRegistryContributor(Preview)": "5dffeca3-4936-4216-b2bc-10343a5abb25",
              "SchemaRegistryReader(Preview)": "2c56ea50-c6b3-40a6-83c0-9d98858bc7d2",
              "SearchIndexDataContributor": "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
              "SearchIndexDataReader": "1407120a-92aa-4202-b7e9-c0e197c71c8f",
              "SearchParameterManager": "a02f7c31-354d-4106-865a-deedf37fa038",
              "SearchServiceContributor": "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
              "SecurityAdmin": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
              "SecurityAssessmentContributor": "612c2aa1-cb24-443b-ac28-3ab7272de6f5",
              "SecurityDetonationChamberPublisher": "352470b3-6a9c-4686-b503-35deb827e500",
              "SecurityDetonationChamberReader": "28241645-39f8-410b-ad48-87863e2951d5",
              "SecurityDetonationChamberSubmissionManager": "a37b566d-3efa-4beb-a2f2-698963fa42ce",
              "SecurityDetonationChamberSubmitter": "0b555d9b-b4a7-4f43-b330-627f0e5be8f0",
              "SecurityManager(Legacy)": "e3d13bf0-dd5a-482e-ba6b-9b8433878d10",
              "SecurityReader": "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
              "ServicesHubOperator": "82200a5b-e217-47a5-b665-6d8765ee745b",
              "SignalR/WebPubSubContributor": "8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761",
              "SignalRAccessKeyReader": "04165923-9d83-45d5-8227-78b77b0a687e",
              "SignalRAppServer": "420fcaa2-552c-430f-98ca-3264be4806c7",
              "SignalRRESTAPIOwner": "fd53cd77-2268-407a-8f46-7e7863d0f521",
              "SignalRRESTAPIReader": "ddde6b66-c0df-4114-a159-3618637b3035",
              "SignalRServiceOwner": "7e4f1700-ea5a-4f59-8f37-079cfe29dce3",
              "SiteRecoveryContributor": "6670b86e-a3f7-4917-ac9b-5d6ab1be4567",
              "SiteRecoveryOperator": "494ae006-db33-4328-bf46-533a6560a3ca",
              "SiteRecoveryReader": "dbaa88c4-0c30-4179-9fb3-46319faa6149",
              "SpatialAnchorsAccountContributor": "8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827",
              "SpatialAnchorsAccountOwner": "70bbe301-9835-447d-afdd-19eb3167307c",
              "SpatialAnchorsAccountReader": "5d51204f-eb77-4b1c-b86a-2ec626c49413",
              "SpatialMapsAccountsAccountOwner": "e9c9ed2b-2a99-4071-b2ff-5b113ebf73a1",
              "SQLDBContributor": "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
              "SqlDbMigrationRole": "189207d4-bb67-4208-a635-b06afe8b2c57",
              "SQLManagedInstanceContributor": "4939a1f6-9ae0-4e48-a1e0-f2cbe897382d",
              "SqlMIMigrationRole": "1d335eef-eee1-47fe-a9e0-53214eba8872",
              "SQLSecurityManager": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
              "SQLServerContributor": "6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
              "SqlVMMigrationRole": "ae8036db-e102-405b-a1b9-bae082ea436d",
              "StorageAccountBackupContributor": "e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
              "StorageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
              "StorageAccountEncryptionScopeContributorRole": "a316ed6d-1efe-48ac-ac08-f7995a9c26fb",
              "StorageAccountKeyOperatorServiceRole": "81a9662b-bebf-436f-a333-f67b29880f12",
              "StorageBlobDataContributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
              "StorageBlobDataOwner": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
              "StorageBlobDataReader": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
              "StorageBlobDelegator": "db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
              "StorageFileDataPrivilegedContributor": "69566ab7-960f-475b-8e7c-b3118f30c6bd",
              "StorageFileDataPrivilegedReader": "b8eda974-7b85-4f76-af95-65846b26df6d",
              "StorageFileDataSMBShareContributor": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
              "StorageFileDataSMBShareElevatedContributor": "a7264617-510b-434b-a828-9731dc254ea7",
              "StorageFileDataSMBShareReader": "aba4ae5f-2193-4029-9191-0cb91df5e314",
              "StorageQueueDataContributor": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
              "StorageQueueDataMessageProcessor": "8a0f0c08-91a1-4084-bc3d-661d67233fed",
              "StorageQueueDataMessageSender": "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
              "StorageQueueDataReader": "19e7f393-937e-4f77-808e-94535e297925",
              "StorageTableDataContributor": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
              "StorageTableDataReader": "76199698-9eea-4c19-bc75-cec21354c6b6",
              "StreamAnalyticsQueryTester": "1ec5b3c1-b17e-4e25-8312-2acb3c3c5abf",
              "SupportRequestContributor": "cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e",
              "TagContributor": "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "TemplateSpecContributor": "1c9b6475-caf0-4164-b5a1-2142a7116f4b",
              "TemplateSpecReader": "392ae280-861d-42bd-9ea5-08ee6d83b80e",
              "TestBaseReader": "15e0f5a1-3450-4248-8e25-e2afe88a9e85",
              "TrafficManagerContributor": "a4b10055-b0c7-44c2-b00f-c7b5b3550cf7",
              "UserAccessAdministrator": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
              "VideoIndexerRestrictedViewer": "a2c4a527-7dc0-4ee3-897b-403ade70fafb",
              "VirtualMachineAdministratorLogin": "1c0163c0-47e6-4577-8991-ea5c82e286e4",
              "VirtualMachineContributor": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "VirtualMachineDataAccessAdministrator(preview)": "66f75aeb-eabe-4b70-9f1e-c350c4c9ad04",
              "VirtualMachineLocalUserLogin": "602da2ba-a5c2-41da-b01d-5360126ab525",
              "VirtualMachineUserLogin": "fb879df8-f326-4884-b1cf-06f3ad86be52",
              "VMScannerOperator": "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
              "WebPlanContributor": "2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b",
              "WebPubSubServiceOwner": "12cf5a90-567b-43ae-8102-96cf46c7d9b4",
              "WebPubSubServiceReader": "bfb1c7d2-fb1a-466b-b2ba-aee63b92deaf",
              "WebsiteContributor": "de139f84-1756-47ae-9be6-808fbbe84772",
              "Windows365NetworkInterfaceContributor": "1f135831-5bbe-4924-9016-264044c00788",
              "Windows365NetworkUser": "7eabc9a4-85f7-4f71-b8ab-75daaccc1033",
              "Windows365SubscriptionReader": "3d55a8f6-4133-418d-8051-facdb1735758",
              "WindowsAdminCenterAdministratorLogin": "a6333a3e-0164-44c3-b281-7a577aff287f",
              "WorkbookContributor": "e8ddcd69-c73f-4f9f-9844-4100522f16ad",
              "WorkbookReader": "b279062a-9be3-42a0-92ae-8b3cf002ec4d",
              "WorkloadBuilderMigrationAgentRole": "d17ce0a2-0697-43bc-aac5-9113337ab61c"
            },
            "$fxv#4": "<policies>\r\n    <inbound>\r\n        {{policyFragments}}\r\n    </inbound>\r\n    <backend>\r\n        <forward-request />\r\n    </backend>\r\n    <outbound />\r\n    <on-error />\r\n</policies>",
            "apiServiceUrlPrimary": "[format('https://{0}.openai.azure.com/openai', parameters('apiServiceNamePrimary'))]",
            "apiServiceUrlSecondary": "[format('https://{0}.openai.azure.com/openai', parameters('apiServiceNameSecondary'))]",
            "openApiXmlRetry": "[if(parameters('enableRetryPolicy'), variables('$fxv#0'), variables('$fxv#1'))]",
            "openApiXml": "[if(equals(parameters('azureOpenAiRegionType'), 'Multi'), variables('$fxv#2'), variables('openApiXmlRetry'))]",
            "openApiJson": "{\r\n    \"openapi\": \"3.0.0\",\r\n    \"info\": {\r\n      \"title\": \"Azure OpenAI Service API\",\r\n      \"description\": \"Azure OpenAI APIs for completions and search\",\r\n      \"version\": \"2024-06-01\"\r\n    },\r\n    \"servers\": [\r\n      {\r\n        \"url\": \"https://{endpoint}/openai\",\r\n        \"variables\": {\r\n          \"endpoint\": {\r\n            \"default\": \"your-resource-name.openai.azure.com\"\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    \"security\": [\r\n      {\r\n        \"bearer\": [\r\n          \"api.read\"\r\n        ]\r\n      },\r\n      {\r\n        \"apiKey\": []\r\n      }\r\n    ],\r\n    \"paths\": {\r\n      \"/deployments/{deployment-id}/completions\": {\r\n        \"post\": {\r\n          \"summary\": \"Creates a completion for the provided prompt, parameters and chosen model.\",\r\n          \"operationId\": \"Completions_Create\",\r\n          \"parameters\": [\r\n            {\r\n              \"in\": \"path\",\r\n              \"name\": \"deployment-id\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"davinci\",\r\n                \"description\": \"Deployment id of the model which was deployed.\"\r\n              }\r\n            },\r\n            {\r\n              \"in\": \"query\",\r\n              \"name\": \"api-version\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"2024-06-01\",\r\n                \"description\": \"api version\"\r\n              }\r\n            }\r\n          ],\r\n          \"requestBody\": {\r\n            \"required\": true,\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"properties\": {\r\n                    \"prompt\": {\r\n                      \"description\": \"The prompt(s) to generate completions for, encoded as a string or array of strings.\\nNote that <|endoftext|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document. Maximum allowed size of string list is 2048.\",\r\n                      \"oneOf\": [\r\n                        {\r\n                          \"type\": \"string\",\r\n                          \"default\": \"\",\r\n                          \"example\": \"This is a test.\",\r\n                          \"nullable\": true\r\n                        },\r\n                        {\r\n                          \"type\": \"array\",\r\n                          \"items\": {\r\n                            \"type\": \"string\",\r\n                            \"default\": \"\",\r\n                            \"example\": \"This is a test.\",\r\n                            \"nullable\": false\r\n                          },\r\n                          \"description\": \"Array size minimum of 1 and maximum of 2048\"\r\n                        }\r\n                      ]\r\n                    },\r\n                    \"max_tokens\": {\r\n                      \"description\": \"The token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096). Has minimum of 0.\",\r\n                      \"type\": \"integer\",\r\n                      \"default\": 16,\r\n                      \"example\": 16,\r\n                      \"nullable\": true\r\n                    },\r\n                    \"temperature\": {\r\n                      \"description\": \"What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.\\nWe generally recommend altering this or top_p but not both.\",\r\n                      \"type\": \"number\",\r\n                      \"default\": 1,\r\n                      \"example\": 1,\r\n                      \"nullable\": true\r\n                    },\r\n                    \"top_p\": {\r\n                      \"description\": \"An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\\nWe generally recommend altering this or temperature but not both.\",\r\n                      \"type\": \"number\",\r\n                      \"default\": 1,\r\n                      \"example\": 1,\r\n                      \"nullable\": true\r\n                    },\r\n                    \"logit_bias\": {\r\n                      \"description\": \"Defaults to null. Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\\\"50256\\\" &#58; -100} to prevent the <|endoftext|> token from being generated.\",\r\n                      \"type\": \"object\",\r\n                      \"nullable\": false\r\n                    },\r\n                    \"user\": {\r\n                      \"description\": \"A unique identifier representing your end-user, which can help monitoring and detecting abuse\",\r\n                      \"type\": \"string\",\r\n                      \"nullable\": false\r\n                    },\r\n                    \"n\": {\r\n                      \"description\": \"How many completions to generate for each prompt. Minimum of 1 and maximum of 128 allowed.\\nNote: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.\",\r\n                      \"type\": \"integer\",\r\n                      \"default\": 1,\r\n                      \"example\": 1,\r\n                      \"nullable\": true\r\n                    },\r\n                    \"stream\": {\r\n                      \"description\": \"Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.\",\r\n                      \"type\": \"boolean\",\r\n                      \"nullable\": true,\r\n                      \"default\": false\r\n                    },\r\n                    \"logprobs\": {\r\n                      \"description\": \"Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if logprobs is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.\\nMinimum of 0 and maximum of 5 allowed.\",\r\n                      \"type\": \"integer\",\r\n                      \"default\": null,\r\n                      \"nullable\": true\r\n                    },\r\n                    \"suffix\": {\r\n                      \"type\": \"string\",\r\n                      \"nullable\": true,\r\n                      \"description\": \"The suffix that comes after a completion of inserted text.\"\r\n                    },\r\n                    \"echo\": {\r\n                      \"description\": \"Echo back the prompt in addition to the completion\",\r\n                      \"type\": \"boolean\",\r\n                      \"default\": false,\r\n                      \"nullable\": true\r\n                    },\r\n                    \"stop\": {\r\n                      \"description\": \"Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.\",\r\n                      \"oneOf\": [\r\n                        {\r\n                          \"type\": \"string\",\r\n                          \"default\": \"<|endoftext|>\",\r\n                          \"example\": \"\\n\",\r\n                          \"nullable\": true\r\n                        },\r\n                        {\r\n                          \"type\": \"array\",\r\n                          \"items\": {\r\n                            \"type\": \"string\",\r\n                            \"example\": \"\\n\",\r\n                            \"nullable\": false\r\n                          },\r\n                          \"description\": \"Array minimum size of 1 and maximum of 4\"\r\n                        }\r\n                      ]\r\n                    },\r\n                    \"completion_config\": {\r\n                      \"type\": \"string\",\r\n                      \"nullable\": true\r\n                    },\r\n                    \"presence_penalty\": {\r\n                      \"description\": \"Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\",\r\n                      \"type\": \"number\",\r\n                      \"default\": 0\r\n                    },\r\n                    \"frequency_penalty\": {\r\n                      \"description\": \"Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\",\r\n                      \"type\": \"number\",\r\n                      \"default\": 0\r\n                    },\r\n                    \"best_of\": {\r\n                      \"description\": \"Generates best_of completions server-side and returns the \\\"best\\\" (the one with the highest log probability per token). Results cannot be streamed.\\nWhen used with n, best_of controls the number of candidate completions and n specifies how many to return - best_of must be greater than n.\\nNote: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop. Has maximum value of 128.\",\r\n                      \"type\": \"integer\"\r\n                    }\r\n                  }\r\n                },\r\n                \"example\": {\r\n                  \"prompt\": \"Negate the following sentence.The price for bubblegum increased on thursday.\\n\\n Negated Sentence:\",\r\n                  \"max_tokens\": 50\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"responses\": {\r\n            \"200\": {\r\n              \"description\": \"OK\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                      \"id\": {\r\n                        \"type\": \"string\"\r\n                      },\r\n                      \"object\": {\r\n                        \"type\": \"string\"\r\n                      },\r\n                      \"created\": {\r\n                        \"type\": \"integer\"\r\n                      },\r\n                      \"model\": {\r\n                        \"type\": \"string\"\r\n                      },\r\n                      \"prompt_filter_results\": {\r\n                        \"$ref\": \"#/components/schemas/promptFilterResults\"\r\n                      },\r\n                      \"choices\": {\r\n                        \"type\": \"array\",\r\n                        \"items\": {\r\n                          \"type\": \"object\",\r\n                          \"properties\": {\r\n                            \"text\": {\r\n                              \"type\": \"string\"\r\n                            },\r\n                            \"index\": {\r\n                              \"type\": \"integer\"\r\n                            },\r\n                            \"logprobs\": {\r\n                              \"type\": \"object\",\r\n                              \"properties\": {\r\n                                \"tokens\": {\r\n                                  \"type\": \"array\",\r\n                                  \"items\": {\r\n                                    \"type\": \"string\"\r\n                                  }\r\n                                },\r\n                                \"token_logprobs\": {\r\n                                  \"type\": \"array\",\r\n                                  \"items\": {\r\n                                    \"type\": \"number\"\r\n                                  }\r\n                                },\r\n                                \"top_logprobs\": {\r\n                                  \"type\": \"array\",\r\n                                  \"items\": {\r\n                                    \"type\": \"object\",\r\n                                    \"additionalProperties\": {\r\n                                      \"type\": \"number\"\r\n                                    }\r\n                                  }\r\n                                },\r\n                                \"text_offset\": {\r\n                                  \"type\": \"array\",\r\n                                  \"items\": {\r\n                                    \"type\": \"integer\"\r\n                                  }\r\n                                }\r\n                              },\r\n                              \"nullable\": true\r\n                            },\r\n                            \"finish_reason\": {\r\n                              \"type\": \"string\"\r\n                            },\r\n                            \"content_filter_results\": {\r\n                              \"$ref\": \"#/components/schemas/contentFilterChoiceResults\"\r\n                            }\r\n                          }\r\n                        }\r\n                      },\r\n                      \"usage\": {\r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                          \"completion_tokens\": {\r\n                            \"type\": \"number\",\r\n                            \"format\": \"int32\"\r\n                          },\r\n                          \"prompt_tokens\": {\r\n                            \"type\": \"number\",\r\n                            \"format\": \"int32\"\r\n                          },\r\n                          \"total_tokens\": {\r\n                            \"type\": \"number\",\r\n                            \"format\": \"int32\"\r\n                          }\r\n                        },\r\n                        \"required\": [\r\n                          \"prompt_tokens\",\r\n                          \"total_tokens\",\r\n                          \"completion_tokens\"\r\n                        ]\r\n                      }\r\n                    },\r\n                    \"required\": [\r\n                      \"id\",\r\n                      \"object\",\r\n                      \"created\",\r\n                      \"model\",\r\n                      \"choices\"\r\n                    ]\r\n                  },\r\n                  \"example\": {\r\n                    \"model\": \"davinci\",\r\n                    \"object\": \"text_completion\",\r\n                    \"id\": \"cmpl-4509KAos68kxOqpE2uYGw81j6m7uo\",\r\n                    \"created\": 1637097562,\r\n                    \"choices\": [\r\n                      {\r\n                        \"index\": 0,\r\n                        \"text\": \"The price for bubblegum decreased on thursday.\",\r\n                        \"logprobs\": null,\r\n                        \"finish_reason\": \"stop\"\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              },\r\n              \"headers\": {\r\n                \"apim-request-id\": {\r\n                  \"description\": \"Request ID for troubleshooting purposes\",\r\n                  \"schema\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"default\": {\r\n              \"description\": \"Service unavailable\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"$ref\": \"#/components/schemas/errorResponse\"\r\n                  }\r\n                }\r\n              },\r\n              \"headers\": {\r\n                \"apim-request-id\": {\r\n                  \"description\": \"Request ID for troubleshooting purposes\",\r\n                  \"schema\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"x-ms-examples\": {\r\n            \"Create a completion.\": {\r\n              \"$ref\": \"./examples/completions.json\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"/deployments/{deployment-id}/embeddings\": {\r\n        \"post\": {\r\n          \"summary\": \"Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.\",\r\n          \"operationId\": \"embeddings_create\",\r\n          \"parameters\": [\r\n            {\r\n              \"in\": \"path\",\r\n              \"name\": \"deployment-id\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"ada-search-index-v1\"\r\n              },\r\n              \"description\": \"The deployment id of the model which was deployed.\"\r\n            },\r\n            {\r\n              \"in\": \"query\",\r\n              \"name\": \"api-version\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"2024-06-01\",\r\n                \"description\": \"api version\"\r\n              }\r\n            }\r\n          ],\r\n          \"requestBody\": {\r\n            \"required\": true,\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": true,\r\n                  \"properties\": {\r\n                    \"input\": {\r\n                      \"description\": \"Input text to get embeddings for, encoded as a string. To get embeddings for multiple inputs in a single request, pass an array of strings. Each input must not exceed 2048 tokens in length.\\nUnless you are embedding code, we suggest replacing newlines (\\\\n) in your input with a single space, as we have observed inferior results when newlines are present.\",\r\n                      \"oneOf\": [\r\n                        {\r\n                          \"type\": \"string\",\r\n                          \"default\": \"\",\r\n                          \"example\": \"This is a test.\",\r\n                          \"nullable\": true\r\n                        },\r\n                        {\r\n                          \"type\": \"array\",\r\n                          \"minItems\": 1,\r\n                          \"maxItems\": 2048,\r\n                          \"items\": {\r\n                            \"type\": \"string\",\r\n                            \"minLength\": 1,\r\n                            \"example\": \"This is a test.\",\r\n                            \"nullable\": false\r\n                          }\r\n                        }\r\n                      ]\r\n                    },\r\n                    \"user\": {\r\n                      \"description\": \"A unique identifier representing your end-user, which can help monitoring and detecting abuse.\",\r\n                      \"type\": \"string\",\r\n                      \"nullable\": false\r\n                    },\r\n                    \"input_type\": {\r\n                      \"description\": \"input type of embedding search to use\",\r\n                      \"type\": \"string\",\r\n                      \"example\": \"query\"\r\n                    },\r\n                    \"encoding_format\": {\r\n                      \"description\": \"The format to return the embeddings in. Can be either `float` or `base64`. Defaults to `float`.\",\r\n                      \"type\": \"string\",\r\n                      \"example\": \"float\",\r\n                      \"nullable\": true\r\n                    },\r\n                    \"dimensions\": {\r\n                      \"description\": \"The number of dimensions the resulting output embeddings should have. Only supported in `text-embedding-3` and later models.\",\r\n                      \"type\": \"integer\",\r\n                      \"example\": 1,\r\n                      \"nullable\": true\r\n                    }\r\n                  },\r\n                  \"required\": [\r\n                    \"input\"\r\n                  ]\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"responses\": {\r\n            \"200\": {\r\n              \"description\": \"OK\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"type\": \"object\",\r\n                    \"properties\": {\r\n                      \"object\": {\r\n                        \"type\": \"string\"\r\n                      },\r\n                      \"model\": {\r\n                        \"type\": \"string\"\r\n                      },\r\n                      \"data\": {\r\n                        \"type\": \"array\",\r\n                        \"items\": {\r\n                          \"type\": \"object\",\r\n                          \"properties\": {\r\n                            \"index\": {\r\n                              \"type\": \"integer\"\r\n                            },\r\n                            \"object\": {\r\n                              \"type\": \"string\"\r\n                            },\r\n                            \"embedding\": {\r\n                              \"type\": \"array\",\r\n                              \"items\": {\r\n                                \"type\": \"number\"\r\n                              }\r\n                            }\r\n                          },\r\n                          \"required\": [\r\n                            \"index\",\r\n                            \"object\",\r\n                            \"embedding\"\r\n                          ]\r\n                        }\r\n                      },\r\n                      \"usage\": {\r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                          \"prompt_tokens\": {\r\n                            \"type\": \"integer\"\r\n                          },\r\n                          \"total_tokens\": {\r\n                            \"type\": \"integer\"\r\n                          }\r\n                        },\r\n                        \"required\": [\r\n                          \"prompt_tokens\",\r\n                          \"total_tokens\"\r\n                        ]\r\n                      }\r\n                    },\r\n                    \"required\": [\r\n                      \"object\",\r\n                      \"model\",\r\n                      \"data\",\r\n                      \"usage\"\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"x-ms-examples\": {\r\n            \"Create a embeddings.\": {\r\n              \"$ref\": \"./examples/embeddings.json\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"/deployments/{deployment-id}/chat/completions\": {\r\n        \"post\": {\r\n          \"summary\": \"Creates a completion for the chat message\",\r\n          \"operationId\": \"ChatCompletions_Create\",\r\n          \"parameters\": [\r\n            {\r\n              \"in\": \"path\",\r\n              \"name\": \"deployment-id\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"description\": \"Deployment id of the model which was deployed.\"\r\n              }\r\n            },\r\n            {\r\n              \"in\": \"query\",\r\n              \"name\": \"api-version\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"2024-06-01\",\r\n                \"description\": \"api version\"\r\n              }\r\n            }\r\n          ],\r\n          \"requestBody\": {\r\n            \"required\": true,\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/createChatCompletionRequest\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"responses\": {\r\n            \"200\": {\r\n              \"description\": \"OK\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"$ref\": \"#/components/schemas/createChatCompletionResponse\"\r\n                  }\r\n                }\r\n              },\r\n              \"headers\": {\r\n                \"apim-request-id\": {\r\n                  \"description\": \"Request ID for troubleshooting purposes\",\r\n                  \"schema\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"default\": {\r\n              \"description\": \"Service unavailable\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"$ref\": \"#/components/schemas/errorResponse\"\r\n                  }\r\n                }\r\n              },\r\n              \"headers\": {\r\n                \"apim-request-id\": {\r\n                  \"description\": \"Request ID for troubleshooting purposes\",\r\n                  \"schema\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"x-ms-examples\": {\r\n            \"Create a chat completion.\": {\r\n              \"$ref\": \"./examples/chat_completions.json\"\r\n            },\r\n            \"Creates a completion based on Azure Search data and system-assigned managed identity.\": {\r\n              \"$ref\": \"./examples/chat_completions_azure_search_minimum.json\"\r\n            },\r\n            \"Creates a completion based on Azure Search vector data, previous assistant message and user-assigned managed identity.\": {\r\n              \"$ref\": \"./examples/chat_completions_azure_search_advanced.json\"\r\n            },\r\n            \"Creates a completion for the provided Azure Cosmos DB.\": {\r\n              \"$ref\": \"./examples/chat_completions_cosmos_db.json\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"/deployments/{deployment-id}/audio/transcriptions\": {\r\n        \"post\": {\r\n          \"summary\": \"Transcribes audio into the input language.\",\r\n          \"operationId\": \"Transcriptions_Create\",\r\n          \"parameters\": [\r\n            {\r\n              \"in\": \"path\",\r\n              \"name\": \"deployment-id\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"whisper\",\r\n                \"description\": \"Deployment id of the whisper model.\"\r\n              }\r\n            },\r\n            {\r\n              \"in\": \"query\",\r\n              \"name\": \"api-version\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"2024-06-01\",\r\n                \"description\": \"api version\"\r\n              }\r\n            }\r\n          ],\r\n          \"requestBody\": {\r\n            \"required\": true,\r\n            \"content\": {\r\n              \"multipart/form-data\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/createTranscriptionRequest\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"responses\": {\r\n            \"200\": {\r\n              \"description\": \"OK\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"oneOf\": [\r\n                      {\r\n                        \"$ref\": \"#/components/schemas/audioResponse\"\r\n                      },\r\n                      {\r\n                        \"$ref\": \"#/components/schemas/audioVerboseResponse\"\r\n                      }\r\n                    ]\r\n                  }\r\n                },\r\n                \"text/plain\": {\r\n                  \"schema\": {\r\n                    \"type\": \"string\",\r\n                    \"description\": \"Transcribed text in the output format (when response_format was one of text, vtt or srt).\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"x-ms-examples\": {\r\n            \"Create an audio transcription with json response format.\": {\r\n              \"$ref\": \"./examples/audio_transcription_object.json\"\r\n            },\r\n            \"Create an audio transcription with text response format.\": {\r\n              \"$ref\": \"./examples/audio_transcription_text.json\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"/deployments/{deployment-id}/audio/translations\": {\r\n        \"post\": {\r\n          \"summary\": \"Transcribes and translates input audio into English text.\",\r\n          \"operationId\": \"Translations_Create\",\r\n          \"parameters\": [\r\n            {\r\n              \"in\": \"path\",\r\n              \"name\": \"deployment-id\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"whisper\",\r\n                \"description\": \"Deployment id of the whisper model which was deployed.\"\r\n              }\r\n            },\r\n            {\r\n              \"in\": \"query\",\r\n              \"name\": \"api-version\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"2024-06-01\",\r\n                \"description\": \"api version\"\r\n              }\r\n            }\r\n          ],\r\n          \"requestBody\": {\r\n            \"required\": true,\r\n            \"content\": {\r\n              \"multipart/form-data\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/createTranslationRequest\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"responses\": {\r\n            \"200\": {\r\n              \"description\": \"OK\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"oneOf\": [\r\n                      {\r\n                        \"$ref\": \"#/components/schemas/audioResponse\"\r\n                      },\r\n                      {\r\n                        \"$ref\": \"#/components/schemas/audioVerboseResponse\"\r\n                      }\r\n                    ]\r\n                  }\r\n                },\r\n                \"text/plain\": {\r\n                  \"schema\": {\r\n                    \"type\": \"string\",\r\n                    \"description\": \"Transcribed text in the output format (when response_format was one of text, vtt or srt).\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"x-ms-examples\": {\r\n            \"Create an audio translation with json response format.\": {\r\n              \"$ref\": \"./examples/audio_translation_object.json\"\r\n            },\r\n            \"Create an audio translation with text response format.\": {\r\n              \"$ref\": \"./examples/audio_translation_text.json\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"/deployments/{deployment-id}/images/generations\": {\r\n        \"post\": {\r\n          \"summary\": \"Generates a batch of images from a text caption on a given DALLE model deployment\",\r\n          \"operationId\": \"ImageGenerations_Create\",\r\n          \"requestBody\": {\r\n            \"required\": true,\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/imageGenerationsRequest\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"parameters\": [\r\n            {\r\n              \"in\": \"path\",\r\n              \"name\": \"deployment-id\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"dalle-deployment\",\r\n                \"description\": \"Deployment id of the dalle model which was deployed.\"\r\n              }\r\n            },\r\n            {\r\n              \"in\": \"query\",\r\n              \"name\": \"api-version\",\r\n              \"required\": true,\r\n              \"schema\": {\r\n                \"type\": \"string\",\r\n                \"example\": \"2024-06-01\",\r\n                \"description\": \"api version\"\r\n              }\r\n            }\r\n          ],\r\n          \"responses\": {\r\n            \"200\": {\r\n              \"description\": \"Ok\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"$ref\": \"#/components/schemas/generateImagesResponse\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"default\": {\r\n              \"description\": \"An error occurred.\",\r\n              \"content\": {\r\n                \"application/json\": {\r\n                  \"schema\": {\r\n                    \"$ref\": \"#/components/schemas/dalleErrorResponse\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"x-ms-examples\": {\r\n            \"Create an image.\": {\r\n              \"$ref\": \"./examples/image_generation.json\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"components\": {\r\n      \"schemas\": {\r\n        \"errorResponse\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"error\": {\r\n              \"$ref\": \"#/components/schemas/error\"\r\n            }\r\n          }\r\n        },\r\n        \"errorBase\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"code\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"message\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"error\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/errorBase\"\r\n            }\r\n          ],\r\n          \"properties\": {\r\n            \"param\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"type\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"inner_error\": {\r\n              \"$ref\": \"#/components/schemas/innerError\"\r\n            }\r\n          }\r\n        },\r\n        \"innerError\": {\r\n          \"description\": \"Inner error with additional details.\",\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"code\": {\r\n              \"$ref\": \"#/components/schemas/innerErrorCode\"\r\n            },\r\n            \"content_filter_results\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterPromptResults\"\r\n            }\r\n          }\r\n        },\r\n        \"innerErrorCode\": {\r\n          \"description\": \"Error codes for the inner error object.\",\r\n          \"enum\": [\r\n            \"ResponsibleAIPolicyViolation\"\r\n          ],\r\n          \"type\": \"string\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"InnerErrorCode\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"ResponsibleAIPolicyViolation\",\r\n                \"description\": \"The prompt violated one of more content filter rules.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"dalleErrorResponse\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"error\": {\r\n              \"$ref\": \"#/components/schemas/dalleError\"\r\n            }\r\n          }\r\n        },\r\n        \"dalleError\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/errorBase\"\r\n            }\r\n          ],\r\n          \"properties\": {\r\n            \"param\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"type\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"inner_error\": {\r\n              \"$ref\": \"#/components/schemas/dalleInnerError\"\r\n            }\r\n          }\r\n        },\r\n        \"dalleInnerError\": {\r\n          \"description\": \"Inner error with additional details.\",\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"code\": {\r\n              \"$ref\": \"#/components/schemas/innerErrorCode\"\r\n            },\r\n            \"content_filter_results\": {\r\n              \"$ref\": \"#/components/schemas/dalleFilterResults\"\r\n            },\r\n            \"revised_prompt\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The prompt that was used to generate the image, if there was any revision to the prompt.\"\r\n            }\r\n          }\r\n        },\r\n        \"contentFilterResultBase\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"filtered\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"filtered\"\r\n          ]\r\n        },\r\n        \"contentFilterSeverityResult\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/contentFilterResultBase\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"severity\": {\r\n                  \"type\": \"string\",\r\n                  \"enum\": [\r\n                    \"safe\",\r\n                    \"low\",\r\n                    \"medium\",\r\n                    \"high\"\r\n                  ],\r\n                  \"x-ms-enum\": {\r\n                    \"name\": \"ContentFilterSeverity\",\r\n                    \"modelAsString\": true,\r\n                    \"values\": [\r\n                      {\r\n                        \"value\": \"safe\",\r\n                        \"description\": \"General content or related content in generic or non-harmful contexts.\"\r\n                      },\r\n                      {\r\n                        \"value\": \"low\",\r\n                        \"description\": \"Harmful content at a low intensity and risk level.\"\r\n                      },\r\n                      {\r\n                        \"value\": \"medium\",\r\n                        \"description\": \"Harmful content at a medium intensity and risk level.\"\r\n                      },\r\n                      {\r\n                        \"value\": \"high\",\r\n                        \"description\": \"Harmful content at a high intensity and risk level.\"\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"severity\",\r\n            \"filtered\"\r\n          ]\r\n        },\r\n        \"contentFilterDetectedResult\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/contentFilterResultBase\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"detected\": {\r\n                  \"type\": \"boolean\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"detected\",\r\n            \"filtered\"\r\n          ]\r\n        },\r\n        \"contentFilterDetectedWithCitationResult\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/contentFilterDetectedResult\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"citation\": {\r\n                  \"type\": \"object\",\r\n                  \"properties\": {\r\n                    \"URL\": {\r\n                      \"type\": \"string\"\r\n                    },\r\n                    \"license\": {\r\n                      \"type\": \"string\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"detected\",\r\n            \"filtered\"\r\n          ]\r\n        },\r\n        \"contentFilterResultsBase\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Information about the content filtering results.\",\r\n          \"properties\": {\r\n            \"sexual\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"violence\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"hate\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"self_harm\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"profanity\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterDetectedResult\"\r\n            },\r\n            \"error\": {\r\n              \"$ref\": \"#/components/schemas/errorBase\"\r\n            }\r\n          }\r\n        },\r\n        \"contentFilterPromptResults\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Information about the content filtering category (hate, sexual, violence, self_harm), if it has been detected, as well as the severity level (very_low, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not. Information about jailbreak content and profanity, if it has been detected, and if it has been filtered or not. And information about customer block list, if it has been filtered and its id.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/contentFilterResultsBase\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"jailbreak\": {\r\n                  \"$ref\": \"#/components/schemas/contentFilterDetectedResult\"\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"contentFilterChoiceResults\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Information about the content filtering category (hate, sexual, violence, self_harm), if it has been detected, as well as the severity level (very_low, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not. Information about third party text and profanity, if it has been detected, and if it has been filtered or not. And information about customer block list, if it has been filtered and its id.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/contentFilterResultsBase\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"protected_material_text\": {\r\n                  \"$ref\": \"#/components/schemas/contentFilterDetectedResult\"\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"protected_material_code\": {\r\n                  \"$ref\": \"#/components/schemas/contentFilterDetectedWithCitationResult\"\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"promptFilterResult\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Content filtering results for a single prompt in the request.\",\r\n          \"properties\": {\r\n            \"prompt_index\": {\r\n              \"type\": \"integer\"\r\n            },\r\n            \"content_filter_results\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterPromptResults\"\r\n            }\r\n          }\r\n        },\r\n        \"promptFilterResults\": {\r\n          \"type\": \"array\",\r\n          \"description\": \"Content filtering results for zero or more prompts in the request. In a streaming request, results for different prompts may arrive at different times or in different orders.\",\r\n          \"items\": {\r\n            \"$ref\": \"#/components/schemas/promptFilterResult\"\r\n          }\r\n        },\r\n        \"dalleContentFilterResults\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Information about the content filtering results.\",\r\n          \"properties\": {\r\n            \"sexual\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"violence\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"hate\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            },\r\n            \"self_harm\": {\r\n              \"$ref\": \"#/components/schemas/contentFilterSeverityResult\"\r\n            }\r\n          }\r\n        },\r\n        \"dalleFilterResults\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Information about the content filtering category (hate, sexual, violence, self_harm), if it has been detected, as well as the severity level (very_low, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not. Information about jailbreak content and profanity, if it has been detected, and if it has been filtered or not. And information about customer block list, if it has been filtered and its id.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/dalleContentFilterResults\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"profanity\": {\r\n                  \"$ref\": \"#/components/schemas/contentFilterDetectedResult\"\r\n                },\r\n                \"jailbreak\": {\r\n                  \"$ref\": \"#/components/schemas/contentFilterDetectedResult\"\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"chatCompletionsRequestCommon\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"temperature\": {\r\n              \"description\": \"What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\\nWe generally recommend altering this or `top_p` but not both.\",\r\n              \"type\": \"number\",\r\n              \"minimum\": 0,\r\n              \"maximum\": 2,\r\n              \"default\": 1,\r\n              \"example\": 1,\r\n              \"nullable\": true\r\n            },\r\n            \"top_p\": {\r\n              \"description\": \"An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\\nWe generally recommend altering this or `temperature` but not both.\",\r\n              \"type\": \"number\",\r\n              \"minimum\": 0,\r\n              \"maximum\": 1,\r\n              \"default\": 1,\r\n              \"example\": 1,\r\n              \"nullable\": true\r\n            },\r\n            \"stream\": {\r\n              \"description\": \"If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.\",\r\n              \"type\": \"boolean\",\r\n              \"nullable\": true,\r\n              \"default\": false\r\n            },\r\n            \"stop\": {\r\n              \"description\": \"Up to 4 sequences where the API will stop generating further tokens.\",\r\n              \"oneOf\": [\r\n                {\r\n                  \"type\": \"string\",\r\n                  \"nullable\": true\r\n                },\r\n                {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"string\",\r\n                    \"nullable\": false\r\n                  },\r\n                  \"minItems\": 1,\r\n                  \"maxItems\": 4,\r\n                  \"description\": \"Array minimum size of 1 and maximum of 4\"\r\n                }\r\n              ],\r\n              \"default\": null\r\n            },\r\n            \"max_tokens\": {\r\n              \"description\": \"The maximum number of tokens allowed for the generated answer. By default, the number of tokens the model can return will be (4096 - prompt tokens).\",\r\n              \"type\": \"integer\",\r\n              \"default\": 4096\r\n            },\r\n            \"presence_penalty\": {\r\n              \"description\": \"Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\",\r\n              \"type\": \"number\",\r\n              \"default\": 0,\r\n              \"minimum\": -2,\r\n              \"maximum\": 2\r\n            },\r\n            \"frequency_penalty\": {\r\n              \"description\": \"Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\",\r\n              \"type\": \"number\",\r\n              \"default\": 0,\r\n              \"minimum\": -2,\r\n              \"maximum\": 2\r\n            },\r\n            \"logit_bias\": {\r\n              \"description\": \"Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.\",\r\n              \"type\": \"object\",\r\n              \"nullable\": true\r\n            },\r\n            \"user\": {\r\n              \"description\": \"A unique identifier representing your end-user, which can help Azure OpenAI to monitor and detect abuse.\",\r\n              \"type\": \"string\",\r\n              \"example\": \"user-1234\",\r\n              \"nullable\": false\r\n            }\r\n          }\r\n        },\r\n        \"createChatCompletionRequest\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionsRequestCommon\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"messages\": {\r\n                  \"description\": \"A list of messages comprising the conversation so far. [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb).\",\r\n                  \"type\": \"array\",\r\n                  \"minItems\": 1,\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/chatCompletionRequestMessage\"\r\n                  }\r\n                },\r\n                \"data_sources\": {\r\n                  \"type\": \"array\",\r\n                  \"description\": \"  The configuration entries for Azure OpenAI chat extensions that use them.\\n  This additional specification is only compatible with Azure OpenAI.\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/azureChatExtensionConfiguration\"\r\n                  }\r\n                },\r\n                \"n\": {\r\n                  \"type\": \"integer\",\r\n                  \"minimum\": 1,\r\n                  \"maximum\": 128,\r\n                  \"default\": 1,\r\n                  \"example\": 1,\r\n                  \"nullable\": true,\r\n                  \"description\": \"How many chat completion choices to generate for each input message.\"\r\n                },\r\n                \"seed\": {\r\n                  \"type\": \"integer\",\r\n                  \"minimum\": -9223372036854775808,\r\n                  \"maximum\": 9223372036854775807,\r\n                  \"default\": 0,\r\n                  \"example\": 1,\r\n                  \"nullable\": true,\r\n                  \"description\": \"If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.\"\r\n                },\r\n                \"logprobs\": {\r\n                  \"description\": \"Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the `content` of `message`. This option is currently not available on the `gpt-4-vision-preview` model.\",\r\n                  \"type\": \"boolean\",\r\n                  \"default\": false,\r\n                  \"nullable\": true\r\n                },\r\n                \"top_logprobs\": {\r\n                  \"description\": \"An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. `logprobs` must be set to `true` if this parameter is used.\",\r\n                  \"type\": \"integer\",\r\n                  \"minimum\": 0,\r\n                  \"maximum\": 5,\r\n                  \"nullable\": true\r\n                },\r\n                \"response_format\": {\r\n                  \"type\": \"object\",\r\n                  \"description\": \"An object specifying the format that the model must output. Used to enable JSON mode.\",\r\n                  \"properties\": {\r\n                    \"type\": {\r\n                      \"$ref\": \"#/components/schemas/chatCompletionResponseFormat\"\r\n                    }\r\n                  }\r\n                },\r\n                \"tools\": {\r\n                  \"description\": \"A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for.\",\r\n                  \"type\": \"array\",\r\n                  \"minItems\": 1,\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/chatCompletionTool\"\r\n                  }\r\n                },\r\n                \"tool_choice\": {\r\n                  \"$ref\": \"#/components/schemas/chatCompletionToolChoiceOption\"\r\n                },\r\n                \"functions\": {\r\n                  \"description\": \"Deprecated in favor of `tools`. A list of functions the model may generate JSON inputs for.\",\r\n                  \"type\": \"array\",\r\n                  \"minItems\": 1,\r\n                  \"maxItems\": 128,\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/chatCompletionFunction\"\r\n                  }\r\n                },\r\n                \"function_call\": {\r\n                  \"description\": \"Deprecated in favor of `tool_choice`. Controls how the model responds to function calls. \\\"none\\\" means the model does not call a function, and responds to the end-user. \\\"auto\\\" means the model can pick between an end-user or calling a function.  Specifying a particular function via `{\\\"name\\\":\\\\ \\\"my_function\\\"}` forces the model to call that function. \\\"none\\\" is the default when no functions are present. \\\"auto\\\" is the default if functions are present.\",\r\n                  \"oneOf\": [\r\n                    {\r\n                      \"type\": \"string\",\r\n                      \"enum\": [\r\n                        \"none\",\r\n                        \"auto\"\r\n                      ],\r\n                      \"description\": \"`none` means the model will not call a function and instead generates a message. `auto` means the model can pick between generating a message or calling a function.\"\r\n                    },\r\n                    {\r\n                      \"type\": \"object\",\r\n                      \"description\": \"Specifying a particular function via `{\\\"name\\\": \\\"my_function\\\"}` forces the model to call that function.\",\r\n                      \"properties\": {\r\n                        \"name\": {\r\n                          \"type\": \"string\",\r\n                          \"description\": \"The name of the function to call.\"\r\n                        }\r\n                      },\r\n                      \"required\": [\r\n                        \"name\"\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"messages\"\r\n          ]\r\n        },\r\n        \"chatCompletionResponseFormat\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"text\",\r\n            \"json_object\"\r\n          ],\r\n          \"default\": \"text\",\r\n          \"example\": \"json_object\",\r\n          \"nullable\": true,\r\n          \"description\": \"Setting to `json_object` enables JSON mode. This guarantees that the message the model generates is valid JSON.\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ChatCompletionResponseFormat\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"text\",\r\n                \"description\": \"Response format is a plain text string.\"\r\n              },\r\n              {\r\n                \"value\": \"json_object\",\r\n                \"description\": \"Response format is a JSON object.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"chatCompletionFunction\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"name\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.\"\r\n            },\r\n            \"description\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The description of what the function does.\"\r\n            },\r\n            \"parameters\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionFunctionParameters\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"name\"\r\n          ]\r\n        },\r\n        \"chatCompletionFunctionParameters\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format.\",\r\n          \"additionalProperties\": true\r\n        },\r\n        \"chatCompletionRequestMessage\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"role\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessageRole\"\r\n            }\r\n          },\r\n          \"discriminator\": {\r\n            \"propertyName\": \"role\",\r\n            \"mapping\": {\r\n              \"system\": \"#/components/schemas/chatCompletionRequestMessageSystem\",\r\n              \"user\": \"#/components/schemas/chatCompletionRequestMessageUser\",\r\n              \"assistant\": \"#/components/schemas/chatCompletionRequestMessageAssistant\",\r\n              \"tool\": \"#/components/schemas/chatCompletionRequestMessageTool\",\r\n              \"function\": \"#/components/schemas/chatCompletionRequestMessageFunction\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"role\"\r\n          ]\r\n        },\r\n        \"chatCompletionRequestMessageRole\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"system\",\r\n            \"user\",\r\n            \"assistant\",\r\n            \"tool\",\r\n            \"function\"\r\n          ],\r\n          \"description\": \"The role of the messages author.\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ChatCompletionRequestMessageRole\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"system\",\r\n                \"description\": \"The message author role is system.\"\r\n              },\r\n              {\r\n                \"value\": \"user\",\r\n                \"description\": \"The message author role is user.\"\r\n              },\r\n              {\r\n                \"value\": \"assistant\",\r\n                \"description\": \"The message author role is assistant.\"\r\n              },\r\n              {\r\n                \"value\": \"tool\",\r\n                \"description\": \"The message author role is tool.\"\r\n              },\r\n              {\r\n                \"value\": \"function\",\r\n                \"description\": \"Deprecated. The message author role is function.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"chatCompletionRequestMessageSystem\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessage\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"content\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The contents of the message.\",\r\n                  \"nullable\": true\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"content\"\r\n          ]\r\n        },\r\n        \"chatCompletionRequestMessageUser\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessage\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"content\": {\r\n                  \"oneOf\": [\r\n                    {\r\n                      \"type\": \"string\",\r\n                      \"description\": \"The contents of the message.\"\r\n                    },\r\n                    {\r\n                      \"type\": \"array\",\r\n                      \"description\": \"An array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts. Image input is only supported when using the `gpt-4-visual-preview` model.\",\r\n                      \"minimum\": 1,\r\n                      \"items\": {\r\n                        \"$ref\": \"#/components/schemas/chatCompletionRequestMessageContentPart\"\r\n                      }\r\n                    }\r\n                  ],\r\n                  \"nullable\": true\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"content\"\r\n          ]\r\n        },\r\n        \"chatCompletionRequestMessageContentPart\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"type\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessageContentPartType\"\r\n            }\r\n          },\r\n          \"discriminator\": {\r\n            \"propertyName\": \"type\",\r\n            \"mapping\": {\r\n              \"text\": \"#/components/schemas/chatCompletionRequestMessageContentPartText\",\r\n              \"image_url\": \"#/components/schemas/chatCompletionRequestMessageContentPartImage\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"type\"\r\n          ]\r\n        },\r\n        \"chatCompletionRequestMessageContentPartType\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"text\",\r\n            \"image_url\"\r\n          ],\r\n          \"description\": \"The type of the content part.\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ChatCompletionRequestMessageContentPartType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"text\",\r\n                \"description\": \"The content part type is text.\"\r\n              },\r\n              {\r\n                \"value\": \"image_url\",\r\n                \"description\": \"The content part type is image_url.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"chatCompletionRequestMessageContentPartText\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessageContentPart\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"text\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The text content.\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"text\"\r\n          ]\r\n        },\r\n        \"chatCompletionRequestMessageContentPartImage\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessageContentPart\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"url\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"Either a URL of the image or the base64 encoded image data.\",\r\n                  \"format\": \"uri\"\r\n                },\r\n                \"detail\": {\r\n                  \"$ref\": \"#/components/schemas/imageDetailLevel\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"url\"\r\n          ]\r\n        },\r\n        \"imageDetailLevel\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"Specifies the detail level of the image.\",\r\n          \"enum\": [\r\n            \"auto\",\r\n            \"low\",\r\n            \"high\"\r\n          ],\r\n          \"default\": \"auto\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ImageDetailLevel\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"auto\",\r\n                \"description\": \"The image detail level is auto.\"\r\n              },\r\n              {\r\n                \"value\": \"low\",\r\n                \"description\": \"The image detail level is low.\"\r\n              },\r\n              {\r\n                \"value\": \"high\",\r\n                \"description\": \"The image detail level is high.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"chatCompletionRequestMessageAssistant\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessage\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"content\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The contents of the message.\",\r\n                  \"nullable\": true\r\n                },\r\n                \"tool_calls\": {\r\n                  \"type\": \"array\",\r\n                  \"description\": \"The tool calls generated by the model, such as function calls.\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/chatCompletionMessageToolCall\"\r\n                  }\r\n                },\r\n                \"context\": {\r\n                  \"$ref\": \"#/components/schemas/azureChatExtensionsMessageContext\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"content\"\r\n          ]\r\n        },\r\n        \"azureChatExtensionConfiguration\": {\r\n          \"required\": [\r\n            \"type\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"type\": {\r\n              \"$ref\": \"#/components/schemas/azureChatExtensionType\"\r\n            }\r\n          },\r\n          \"description\": \"  A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat\\n  completions request that should use Azure OpenAI chat extensions to augment the response behavior.\\n  The use of this configuration is compatible only with Azure OpenAI.\",\r\n          \"discriminator\": {\r\n            \"propertyName\": \"type\",\r\n            \"mapping\": {\r\n              \"azure_search\": \"#/components/schemas/azureSearchChatExtensionConfiguration\",\r\n              \"azure_cosmos_db\": \"#/components/schemas/azureCosmosDBChatExtensionConfiguration\"\r\n            }\r\n          }\r\n        },\r\n        \"azureChatExtensionType\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"  A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat\\n  completions request that should use Azure OpenAI chat extensions to augment the response behavior.\\n  The use of this configuration is compatible only with Azure OpenAI.\",\r\n          \"enum\": [\r\n            \"azure_search\",\r\n            \"azure_cosmos_db\"\r\n          ],\r\n          \"x-ms-enum\": {\r\n            \"name\": \"AzureChatExtensionType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"name\": \"azureSearch\",\r\n                \"value\": \"azure_search\",\r\n                \"description\": \"Represents the use of Azure Search as an Azure OpenAI chat extension.\"\r\n              },\r\n              {\r\n                \"name\": \"azureCosmosDB\",\r\n                \"value\": \"azure_cosmos_db\",\r\n                \"description\": \"Represents the use of Azure Cosmos DB as an Azure OpenAI chat extension.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"azureSearchChatExtensionConfiguration\": {\r\n          \"required\": [\r\n            \"parameters\"\r\n          ],\r\n          \"description\": \"A specific representation of configurable options for Azure Search when using it as an Azure OpenAI chat\\nextension.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/azureChatExtensionConfiguration\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"parameters\": {\r\n                  \"$ref\": \"#/components/schemas/azureSearchChatExtensionParameters\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"azure_search\"\r\n        },\r\n        \"azureSearchChatExtensionParameters\": {\r\n          \"required\": [\r\n            \"authentication\",\r\n            \"endpoint\",\r\n            \"index_name\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"authentication\": {\r\n              \"oneOf\": [\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataApiKeyAuthenticationOptions\"\r\n                },\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataSystemAssignedManagedIdentityAuthenticationOptions\"\r\n                },\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataUserAssignedManagedIdentityAuthenticationOptions\"\r\n                }\r\n              ]\r\n            },\r\n            \"top_n_documents\": {\r\n              \"type\": \"integer\",\r\n              \"description\": \"The configured top number of documents to feature for the configured query.\",\r\n              \"format\": \"int32\"\r\n            },\r\n            \"in_scope\": {\r\n              \"type\": \"boolean\",\r\n              \"description\": \"Whether queries should be restricted to use of indexed data.\"\r\n            },\r\n            \"strictness\": {\r\n              \"maximum\": 5,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"The configured strictness of the search relevance filtering. The higher of strictness, the higher of the precision but lower recall of the answer.\",\r\n              \"format\": \"int32\"\r\n            },\r\n            \"role_information\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Give the model instructions about how it should behave and any context it should reference when generating a response. You can describe the assistant's personality and tell it how to format responses. There's a 100 token limit for it, and it counts against the overall token limit.\"\r\n            },\r\n            \"endpoint\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The absolute endpoint path for the Azure Search resource to use.\",\r\n              \"format\": \"uri\"\r\n            },\r\n            \"index_name\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index to use as available in the referenced Azure Search resource.\"\r\n            },\r\n            \"fields_mapping\": {\r\n              \"$ref\": \"#/components/schemas/azureSearchIndexFieldMappingOptions\"\r\n            },\r\n            \"query_type\": {\r\n              \"$ref\": \"#/components/schemas/azureSearchQueryType\"\r\n            },\r\n            \"semantic_configuration\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The additional semantic configuration for the query.\"\r\n            },\r\n            \"filter\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Search filter.\"\r\n            },\r\n            \"embedding_dependency\": {\r\n              \"oneOf\": [\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataEndpointVectorizationSource\"\r\n                },\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataDeploymentNameVectorizationSource\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          \"description\": \"Parameters for Azure Search when used as an Azure OpenAI chat extension.\"\r\n        },\r\n        \"azureSearchIndexFieldMappingOptions\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"title_field\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index field to use as a title.\"\r\n            },\r\n            \"url_field\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index field to use as a URL.\"\r\n            },\r\n            \"filepath_field\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index field to use as a filepath.\"\r\n            },\r\n            \"content_fields\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The names of index fields that should be treated as content.\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"content_fields_separator\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The separator pattern that content fields should use.\"\r\n            },\r\n            \"vector_fields\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The names of fields that represent vector data.\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"description\": \"Optional settings to control how fields are processed when using a configured Azure Search resource.\"\r\n        },\r\n        \"azureSearchQueryType\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"The type of Azure Search retrieval query that should be executed when using it as an Azure OpenAI chat extension.\",\r\n          \"enum\": [\r\n            \"simple\",\r\n            \"semantic\",\r\n            \"vector\",\r\n            \"vector_simple_hybrid\",\r\n            \"vector_semantic_hybrid\"\r\n          ],\r\n          \"x-ms-enum\": {\r\n            \"name\": \"azureSearchQueryType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"name\": \"simple\",\r\n                \"value\": \"simple\",\r\n                \"description\": \"Represents the default, simple query parser.\"\r\n              },\r\n              {\r\n                \"name\": \"semantic\",\r\n                \"value\": \"semantic\",\r\n                \"description\": \"Represents the semantic query parser for advanced semantic modeling.\"\r\n              },\r\n              {\r\n                \"name\": \"vector\",\r\n                \"value\": \"vector\",\r\n                \"description\": \"Represents vector search over computed data.\"\r\n              },\r\n              {\r\n                \"name\": \"vectorSimpleHybrid\",\r\n                \"value\": \"vector_simple_hybrid\",\r\n                \"description\": \"Represents a combination of the simple query strategy with vector data.\"\r\n              },\r\n              {\r\n                \"name\": \"vectorSemanticHybrid\",\r\n                \"value\": \"vector_semantic_hybrid\",\r\n                \"description\": \"Represents a combination of semantic search and vector data querying.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"azureCosmosDBChatExtensionConfiguration\": {\r\n          \"required\": [\r\n            \"parameters\"\r\n          ],\r\n          \"description\": \"A specific representation of configurable options for Azure Cosmos DB when using it as an Azure OpenAI chat\\nextension.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/azureChatExtensionConfiguration\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"parameters\": {\r\n                  \"$ref\": \"#/components/schemas/azureCosmosDBChatExtensionParameters\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"azure_cosmos_db\"\r\n        },\r\n        \"azureCosmosDBChatExtensionParameters\": {\r\n          \"required\": [\r\n            \"authentication\",\r\n            \"container_name\",\r\n            \"database_name\",\r\n            \"embedding_dependency\",\r\n            \"fields_mapping\",\r\n            \"index_name\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"authentication\": {\r\n              \"$ref\": \"#/components/schemas/onYourDataConnectionStringAuthenticationOptions\"\r\n            },\r\n            \"top_n_documents\": {\r\n              \"type\": \"integer\",\r\n              \"description\": \"The configured top number of documents to feature for the configured query.\",\r\n              \"format\": \"int32\"\r\n            },\r\n            \"in_scope\": {\r\n              \"type\": \"boolean\",\r\n              \"description\": \"Whether queries should be restricted to use of indexed data.\"\r\n            },\r\n            \"strictness\": {\r\n              \"maximum\": 5,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"The configured strictness of the search relevance filtering. The higher of strictness, the higher of the precision but lower recall of the answer.\",\r\n              \"format\": \"int32\"\r\n            },\r\n            \"role_information\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Give the model instructions about how it should behave and any context it should reference when generating a response. You can describe the assistant's personality and tell it how to format responses. There's a 100 token limit for it, and it counts against the overall token limit.\"\r\n            },\r\n            \"database_name\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The MongoDB vCore database name to use with Azure Cosmos DB.\"\r\n            },\r\n            \"container_name\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the Azure Cosmos DB resource container.\"\r\n            },\r\n            \"index_name\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The MongoDB vCore index name to use with Azure Cosmos DB.\"\r\n            },\r\n            \"fields_mapping\": {\r\n              \"$ref\": \"#/components/schemas/azureCosmosDBFieldMappingOptions\"\r\n            },\r\n            \"embedding_dependency\": {\r\n              \"oneOf\": [\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataEndpointVectorizationSource\"\r\n                },\r\n                {\r\n                  \"$ref\": \"#/components/schemas/onYourDataDeploymentNameVectorizationSource\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          \"description\": \"Parameters to use when configuring Azure OpenAI On Your Data chat extensions when using Azure Cosmos DB for\\nMongoDB vCore.\"\r\n        },\r\n        \"azureCosmosDBFieldMappingOptions\": {\r\n          \"required\": [\r\n            \"content_fields\",\r\n            \"vector_fields\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"title_field\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index field to use as a title.\"\r\n            },\r\n            \"url_field\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index field to use as a URL.\"\r\n            },\r\n            \"filepath_field\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the index field to use as a filepath.\"\r\n            },\r\n            \"content_fields\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The names of index fields that should be treated as content.\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"content_fields_separator\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The separator pattern that content fields should use.\"\r\n            },\r\n            \"vector_fields\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The names of fields that represent vector data.\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"description\": \"Optional settings to control how fields are processed when using a configured Azure Cosmos DB resource.\"\r\n        },\r\n        \"onYourDataAuthenticationOptions\": {\r\n          \"required\": [\r\n            \"type\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"type\": {\r\n              \"$ref\": \"#/components/schemas/onYourDataAuthenticationType\"\r\n            }\r\n          },\r\n          \"description\": \"The authentication options for Azure OpenAI On Your Data.\",\r\n          \"discriminator\": {\r\n            \"propertyName\": \"type\",\r\n            \"mapping\": {\r\n              \"api_key\": \"#/components/schemas/onYourDataApiKeyAuthenticationOptions\",\r\n              \"connection_string\": \"#/components/schemas/onYourDataConnectionStringAuthenticationOptions\",\r\n              \"system_assigned_managed_identity\": \"#/components/schemas/onYourDataSystemAssignedManagedIdentityAuthenticationOptions\",\r\n              \"user_assigned_managed_identity\": \"#/components/schemas/onYourDataUserAssignedManagedIdentityAuthenticationOptions\"\r\n            }\r\n          }\r\n        },\r\n        \"onYourDataAuthenticationType\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"The authentication types supported with Azure OpenAI On Your Data.\",\r\n          \"enum\": [\r\n            \"api_key\",\r\n            \"connection_string\",\r\n            \"system_assigned_managed_identity\",\r\n            \"user_assigned_managed_identity\"\r\n          ],\r\n          \"x-ms-enum\": {\r\n            \"name\": \"OnYourDataAuthenticationType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"name\": \"apiKey\",\r\n                \"value\": \"api_key\",\r\n                \"description\": \"Authentication via API key.\"\r\n              },\r\n              {\r\n                \"name\": \"connectionString\",\r\n                \"value\": \"connection_string\",\r\n                \"description\": \"Authentication via connection string.\"\r\n              },\r\n              {\r\n                \"name\": \"systemAssignedManagedIdentity\",\r\n                \"value\": \"system_assigned_managed_identity\",\r\n                \"description\": \"Authentication via system-assigned managed identity.\"\r\n              },\r\n              {\r\n                \"name\": \"userAssignedManagedIdentity\",\r\n                \"value\": \"user_assigned_managed_identity\",\r\n                \"description\": \"Authentication via user-assigned managed identity.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"onYourDataApiKeyAuthenticationOptions\": {\r\n          \"required\": [\r\n            \"key\"\r\n          ],\r\n          \"description\": \"The authentication options for Azure OpenAI On Your Data when using an API key.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/onYourDataAuthenticationOptions\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"key\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The API key to use for authentication.\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"api_key\"\r\n        },\r\n        \"onYourDataConnectionStringAuthenticationOptions\": {\r\n          \"required\": [\r\n            \"connection_string\"\r\n          ],\r\n          \"description\": \"The authentication options for Azure OpenAI On Your Data when using a connection string.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/onYourDataAuthenticationOptions\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"connection_string\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The connection string to use for authentication.\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"connection_string\"\r\n        },\r\n        \"onYourDataSystemAssignedManagedIdentityAuthenticationOptions\": {\r\n          \"description\": \"The authentication options for Azure OpenAI On Your Data when using a system-assigned managed identity.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/onYourDataAuthenticationOptions\"\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"system_assigned_managed_identity\"\r\n        },\r\n        \"onYourDataUserAssignedManagedIdentityAuthenticationOptions\": {\r\n          \"required\": [\r\n            \"managed_identity_resource_id\"\r\n          ],\r\n          \"description\": \"The authentication options for Azure OpenAI On Your Data when using a user-assigned managed identity.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/onYourDataAuthenticationOptions\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"managed_identity_resource_id\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The resource ID of the user-assigned managed identity to use for authentication.\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"user_assigned_managed_identity\"\r\n        },\r\n        \"onYourDataVectorizationSource\": {\r\n          \"required\": [\r\n            \"type\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"type\": {\r\n              \"$ref\": \"#/components/schemas/onYourDataVectorizationSourceType\"\r\n            }\r\n          },\r\n          \"description\": \"An abstract representation of a vectorization source for Azure OpenAI On Your Data with vector search.\",\r\n          \"discriminator\": {\r\n            \"propertyName\": \"type\",\r\n            \"mapping\": {\r\n              \"endpoint\": \"#/components/schemas/onYourDataEndpointVectorizationSource\",\r\n              \"deployment_name\": \"#/components/schemas/onYourDataDeploymentNameVectorizationSource\"\r\n            }\r\n          }\r\n        },\r\n        \"onYourDataVectorizationSourceType\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"Represents the available sources Azure OpenAI On Your Data can use to configure vectorization of data for use with\\nvector search.\",\r\n          \"enum\": [\r\n            \"endpoint\",\r\n            \"deployment_name\"\r\n          ],\r\n          \"x-ms-enum\": {\r\n            \"name\": \"OnYourDataVectorizationSourceType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"name\": \"endpoint\",\r\n                \"value\": \"endpoint\",\r\n                \"description\": \"Represents vectorization performed by public service calls to an Azure OpenAI embedding model.\"\r\n              },\r\n              {\r\n                \"name\": \"deploymentName\",\r\n                \"value\": \"deployment_name\",\r\n                \"description\": \"Represents an Ada model deployment name to use. This model deployment must be in the same Azure OpenAI resource, but\\nOn Your Data will use this model deployment via an internal call rather than a public one, which enables vector\\nsearch even in private networks.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"onYourDataDeploymentNameVectorizationSource\": {\r\n          \"required\": [\r\n            \"deployment_name\"\r\n          ],\r\n          \"description\": \"The details of a a vectorization source, used by Azure OpenAI On Your Data when applying vector search, that is based\\non an internal embeddings model deployment name in the same Azure OpenAI resource.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/onYourDataVectorizationSource\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"deployment_name\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"Specifies the name of the model deployment to use for vectorization. This model deployment must be in the same Azure OpenAI resource, but On Your Data will use this model deployment via an internal call rather than a public one, which enables vector search even in private networks.\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"deployment_name\"\r\n        },\r\n        \"onYourDataEndpointVectorizationSource\": {\r\n          \"required\": [\r\n            \"authentication\",\r\n            \"endpoint\"\r\n          ],\r\n          \"description\": \"The details of a a vectorization source, used by Azure OpenAI On Your Data when applying vector search, that is based\\non a public Azure OpenAI endpoint call for embeddings.\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/onYourDataVectorizationSource\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"authentication\": {\r\n                  \"$ref\": \"#/components/schemas/onYourDataApiKeyAuthenticationOptions\"\r\n                },\r\n                \"endpoint\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"Specifies the endpoint to use for vectorization. This endpoint must be in the same Azure OpenAI resource, but On Your Data will use this endpoint via an internal call rather than a public one, which enables vector search even in private networks.\",\r\n                  \"format\": \"uri\"\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"x-ms-discriminator-value\": \"endpoint\"\r\n        },\r\n        \"azureChatExtensionsMessageContext\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"citations\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The data source retrieval result, used to generate the assistant message in the response.\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/citation\"\r\n              },\r\n              \"x-ms-identifiers\": []\r\n            },\r\n            \"intent\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The detected intent from the chat history, used to pass to the next turn to carry over the context.\"\r\n            }\r\n          },\r\n          \"description\": \"  A representation of the additional context information available when Azure OpenAI chat extensions are involved\\n  in the generation of a corresponding chat completions response. This context information is only populated when\\n  using an Azure OpenAI request configured to use a matching extension.\"\r\n        },\r\n        \"citation\": {\r\n          \"required\": [\r\n            \"content\"\r\n          ],\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"content\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The content of the citation.\"\r\n            },\r\n            \"title\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The title of the citation.\"\r\n            },\r\n            \"url\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The URL of the citation.\"\r\n            },\r\n            \"filepath\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The file path of the citation.\"\r\n            },\r\n            \"chunk_id\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The chunk ID of the citation.\"\r\n            }\r\n          },\r\n          \"description\": \"citation information for a chat completions response message.\"\r\n        },\r\n        \"chatCompletionMessageToolCall\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The ID of the tool call.\"\r\n            },\r\n            \"type\": {\r\n              \"$ref\": \"#/components/schemas/toolCallType\"\r\n            },\r\n            \"function\": {\r\n              \"type\": \"object\",\r\n              \"description\": \"The function that the model called.\",\r\n              \"properties\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The name of the function to call.\"\r\n                },\r\n                \"arguments\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.\"\r\n                }\r\n              },\r\n              \"required\": [\r\n                \"name\",\r\n                \"arguments\"\r\n              ]\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"id\",\r\n            \"type\",\r\n            \"function\"\r\n          ]\r\n        },\r\n        \"toolCallType\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"function\"\r\n          ],\r\n          \"description\": \"The type of the tool call, in this case `function`.\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ToolCallType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"function\",\r\n                \"description\": \"The tool call type is function.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"chatCompletionRequestMessageTool\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessage\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"nullable\": true,\r\n              \"properties\": {\r\n                \"tool_call_id\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"Tool call that this message is responding to.\"\r\n                },\r\n                \"content\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The contents of the message.\",\r\n                  \"nullable\": true\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"tool_call_id\",\r\n            \"content\"\r\n          ]\r\n        },\r\n        \"chatCompletionRequestMessageFunction\": {\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionRequestMessage\"\r\n            },\r\n            {\r\n              \"type\": \"object\",\r\n              \"description\": \"Deprecated. Message that represents a function.\",\r\n              \"nullable\": true,\r\n              \"properties\": {\r\n                \"role\": {\r\n                  \"type\": \"string\",\r\n                  \"enum\": [\r\n                    \"function\"\r\n                  ],\r\n                  \"description\": \"The role of the messages author, in this case `function`.\"\r\n                },\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The contents of the message.\"\r\n                },\r\n                \"content\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The contents of the message.\",\r\n                  \"nullable\": true\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"function_call_id\",\r\n            \"content\"\r\n          ]\r\n        },\r\n        \"createChatCompletionResponse\": {\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionsResponseCommon\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"prompt_filter_results\": {\r\n                  \"$ref\": \"#/components/schemas/promptFilterResults\"\r\n                },\r\n                \"choices\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"allOf\": [\r\n                      {\r\n                        \"$ref\": \"#/components/schemas/chatCompletionChoiceCommon\"\r\n                      },\r\n                      {\r\n                        \"properties\": {\r\n                          \"message\": {\r\n                            \"$ref\": \"#/components/schemas/chatCompletionResponseMessage\"\r\n                          },\r\n                          \"content_filter_results\": {\r\n                            \"$ref\": \"#/components/schemas/contentFilterChoiceResults\"\r\n                          },\r\n                          \"logprobs\": {\r\n                            \"$ref\": \"#/components/schemas/chatCompletionChoiceLogProbs\"\r\n                          }\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"id\",\r\n            \"object\",\r\n            \"created\",\r\n            \"model\",\r\n            \"choices\"\r\n          ]\r\n        },\r\n        \"chatCompletionChoiceLogProbs\": {\r\n          \"description\": \"Log probability information for the choice.\",\r\n          \"type\": \"object\",\r\n          \"nullable\": true,\r\n          \"properties\": {\r\n            \"content\": {\r\n              \"description\": \"A list of message content tokens with log probability information.\",\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/chatCompletionTokenLogprob\"\r\n              },\r\n              \"nullable\": true\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"content\"\r\n          ]\r\n        },\r\n        \"chatCompletionTokenLogprob\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"token\": {\r\n              \"description\": \"The token.\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"logprob\": {\r\n              \"description\": \"The log probability of this token.\",\r\n              \"type\": \"number\"\r\n            },\r\n            \"bytes\": {\r\n              \"description\": \"A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.\",\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"integer\"\r\n              },\r\n              \"nullable\": true\r\n            },\r\n            \"top_logprobs\": {\r\n              \"description\": \"List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.\",\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"token\": {\r\n                    \"description\": \"The token.\",\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"logprob\": {\r\n                    \"description\": \"The log probability of this token.\",\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"bytes\": {\r\n                    \"description\": \"A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.\",\r\n                    \"type\": \"array\",\r\n                    \"items\": {\r\n                      \"type\": \"integer\"\r\n                    },\r\n                    \"nullable\": true\r\n                  }\r\n                },\r\n                \"required\": [\r\n                  \"token\",\r\n                  \"logprob\",\r\n                  \"bytes\"\r\n                ]\r\n              }\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"token\",\r\n            \"logprob\",\r\n            \"bytes\",\r\n            \"top_logprobs\"\r\n          ]\r\n        },\r\n        \"chatCompletionResponseMessage\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"A chat completion message generated by the model.\",\r\n          \"properties\": {\r\n            \"role\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionResponseMessageRole\"\r\n            },\r\n            \"content\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The contents of the message.\",\r\n              \"nullable\": true\r\n            },\r\n            \"tool_calls\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The tool calls generated by the model, such as function calls.\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/chatCompletionMessageToolCall\"\r\n              }\r\n            },\r\n            \"function_call\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionFunctionCall\"\r\n            },\r\n            \"context\": {\r\n              \"$ref\": \"#/components/schemas/azureChatExtensionsMessageContext\"\r\n            }\r\n          }\r\n        },\r\n        \"chatCompletionResponseMessageRole\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"assistant\"\r\n          ],\r\n          \"description\": \"The role of the author of the response message.\"\r\n        },\r\n        \"chatCompletionToolChoiceOption\": {\r\n          \"description\": \"Controls which (if any) function is called by the model. `none` means the model will not call a function and instead generates a message. `auto` means the model can pick between generating a message or calling a function. Specifying a particular function via `{\\\"type\\\": \\\"function\\\", \\\"function\\\": {\\\"name\\\": \\\"my_function\\\"}}` forces the model to call that function.\",\r\n          \"oneOf\": [\r\n            {\r\n              \"type\": \"string\",\r\n              \"description\": \"`none` means the model will not call a function and instead generates a message. `auto` means the model can pick between generating a message or calling a function.\",\r\n              \"enum\": [\r\n                \"none\",\r\n                \"auto\",\r\n                \"required\"\r\n              ]\r\n            },\r\n            {\r\n              \"$ref\": \"#/components/schemas/chatCompletionNamedToolChoice\"\r\n            }\r\n          ]\r\n        },\r\n        \"chatCompletionNamedToolChoice\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Specifies a tool the model should use. Use to force the model to call a specific function.\",\r\n          \"properties\": {\r\n            \"type\": {\r\n              \"type\": \"string\",\r\n              \"enum\": [\r\n                \"function\"\r\n              ],\r\n              \"description\": \"The type of the tool. Currently, only `function` is supported.\"\r\n            },\r\n            \"function\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The name of the function to call.\"\r\n                }\r\n              },\r\n              \"required\": [\r\n                \"name\"\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        \"chatCompletionFunctionCall\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.\",\r\n          \"properties\": {\r\n            \"name\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The name of the function to call.\"\r\n            },\r\n            \"arguments\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"name\",\r\n            \"arguments\"\r\n          ]\r\n        },\r\n        \"chatCompletionsResponseCommon\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"A unique identifier for the chat completion.\"\r\n            },\r\n            \"object\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionResponseObject\"\r\n            },\r\n            \"created\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"unixtime\",\r\n              \"description\": \"The Unix timestamp (in seconds) of when the chat completion was created.\"\r\n            },\r\n            \"model\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The model used for the chat completion.\"\r\n            },\r\n            \"usage\": {\r\n              \"$ref\": \"#/components/schemas/completionUsage\"\r\n            },\r\n            \"system_fingerprint\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"id\",\r\n            \"object\",\r\n            \"created\",\r\n            \"model\"\r\n          ]\r\n        },\r\n        \"chatCompletionResponseObject\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"The object type.\",\r\n          \"enum\": [\r\n            \"chat.completion\"\r\n          ],\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ChatCompletionResponseObject\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"chat.completion\",\r\n                \"description\": \"The object type is chat completion.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"completionUsage\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Usage statistics for the completion request.\",\r\n          \"properties\": {\r\n            \"prompt_tokens\": {\r\n              \"type\": \"integer\",\r\n              \"description\": \"Number of tokens in the prompt.\"\r\n            },\r\n            \"completion_tokens\": {\r\n              \"type\": \"integer\",\r\n              \"description\": \"Number of tokens in the generated completion.\"\r\n            },\r\n            \"total_tokens\": {\r\n              \"type\": \"integer\",\r\n              \"description\": \"Total number of tokens used in the request (prompt + completion).\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"prompt_tokens\",\r\n            \"completion_tokens\",\r\n            \"total_tokens\"\r\n          ]\r\n        },\r\n        \"chatCompletionTool\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"type\": {\r\n              \"$ref\": \"#/components/schemas/chatCompletionToolType\"\r\n            },\r\n            \"function\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"description\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"A description of what the function does, used by the model to choose when and how to call the function.\"\r\n                },\r\n                \"name\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.\"\r\n                },\r\n                \"parameters\": {\r\n                  \"$ref\": \"#/components/schemas/chatCompletionFunctionParameters\"\r\n                }\r\n              },\r\n              \"required\": [\r\n                \"name\",\r\n                \"parameters\"\r\n              ]\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"type\",\r\n            \"function\"\r\n          ]\r\n        },\r\n        \"chatCompletionToolType\": {\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"function\"\r\n          ],\r\n          \"description\": \"The type of the tool. Currently, only `function` is supported.\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ChatCompletionToolType\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"function\",\r\n                \"description\": \"The tool type is function.\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"chatCompletionChoiceCommon\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"index\": {\r\n              \"type\": \"integer\"\r\n            },\r\n            \"finish_reason\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"createTranslationRequest\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Translation request.\",\r\n          \"properties\": {\r\n            \"file\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The audio file to translate.\",\r\n              \"format\": \"binary\"\r\n            },\r\n            \"prompt\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"An optional text to guide the model's style or continue a previous audio segment. The prompt should be in English.\"\r\n            },\r\n            \"response_format\": {\r\n              \"$ref\": \"#/components/schemas/audioResponseFormat\"\r\n            },\r\n            \"temperature\": {\r\n              \"type\": \"number\",\r\n              \"default\": 0,\r\n              \"description\": \"The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use log probability to automatically increase the temperature until certain thresholds are hit.\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"file\"\r\n          ]\r\n        },\r\n        \"audioResponse\": {\r\n          \"description\": \"Translation or transcription response when response_format was json\",\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"text\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Translated or transcribed text.\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"text\"\r\n          ]\r\n        },\r\n        \"audioVerboseResponse\": {\r\n          \"description\": \"Translation or transcription response when response_format was verbose_json\",\r\n          \"type\": \"object\",\r\n          \"allOf\": [\r\n            {\r\n              \"$ref\": \"#/components/schemas/audioResponse\"\r\n            },\r\n            {\r\n              \"properties\": {\r\n                \"task\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"Type of audio task.\",\r\n                  \"enum\": [\r\n                    \"transcribe\",\r\n                    \"translate\"\r\n                  ],\r\n                  \"x-ms-enum\": {\r\n                    \"modelAsString\": true\r\n                  }\r\n                },\r\n                \"language\": {\r\n                  \"type\": \"string\",\r\n                  \"description\": \"Language.\"\r\n                },\r\n                \"duration\": {\r\n                  \"type\": \"number\",\r\n                  \"description\": \"Duration.\"\r\n                },\r\n                \"segments\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/audioSegment\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          \"required\": [\r\n            \"text\"\r\n          ]\r\n        },\r\n        \"audioResponseFormat\": {\r\n          \"title\": \"AudioResponseFormat\",\r\n          \"description\": \"Defines the format of the output.\",\r\n          \"enum\": [\r\n            \"json\",\r\n            \"text\",\r\n            \"srt\",\r\n            \"verbose_json\",\r\n            \"vtt\"\r\n          ],\r\n          \"type\": \"string\",\r\n          \"x-ms-enum\": {\r\n            \"modelAsString\": true\r\n          }\r\n        },\r\n        \"createTranscriptionRequest\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Transcription request.\",\r\n          \"properties\": {\r\n            \"file\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The audio file object to transcribe.\",\r\n              \"format\": \"binary\"\r\n            },\r\n            \"prompt\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio language.\"\r\n            },\r\n            \"response_format\": {\r\n              \"$ref\": \"#/components/schemas/audioResponseFormat\"\r\n            },\r\n            \"temperature\": {\r\n              \"type\": \"number\",\r\n              \"default\": 0,\r\n              \"description\": \"The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use log probability to automatically increase the temperature until certain thresholds are hit.\"\r\n            },\r\n            \"language\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The language of the input audio. Supplying the input language in ISO-639-1 format will improve accuracy and latency.\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"file\"\r\n          ]\r\n        },\r\n        \"audioSegment\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"Transcription or translation segment.\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"type\": \"integer\",\r\n              \"description\": \"Segment identifier.\"\r\n            },\r\n            \"seek\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Offset of the segment.\"\r\n            },\r\n            \"start\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Segment start offset.\"\r\n            },\r\n            \"end\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Segment end offset.\"\r\n            },\r\n            \"text\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Segment text.\"\r\n            },\r\n            \"tokens\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"number\",\r\n                \"nullable\": false\r\n              },\r\n              \"description\": \"Tokens of the text.\"\r\n            },\r\n            \"temperature\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Temperature.\"\r\n            },\r\n            \"avg_logprob\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Average log probability.\"\r\n            },\r\n            \"compression_ratio\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Compression ratio.\"\r\n            },\r\n            \"no_speech_prob\": {\r\n              \"type\": \"number\",\r\n              \"description\": \"Probability of 'no speech'.\"\r\n            }\r\n          }\r\n        },\r\n        \"imageQuality\": {\r\n          \"description\": \"The quality of the image that will be generated.\",\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"standard\",\r\n            \"hd\"\r\n          ],\r\n          \"default\": \"standard\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"Quality\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"standard\",\r\n                \"description\": \"Standard quality creates images with standard quality.\",\r\n                \"name\": \"Standard\"\r\n              },\r\n              {\r\n                \"value\": \"hd\",\r\n                \"description\": \"HD quality creates images with finer details and greater consistency across the image.\",\r\n                \"name\": \"HD\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"imagesResponseFormat\": {\r\n          \"description\": \"The format in which the generated images are returned.\",\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"url\",\r\n            \"b64_json\"\r\n          ],\r\n          \"default\": \"url\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"ImagesResponseFormat\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"url\",\r\n                \"description\": \"The URL that provides temporary access to download the generated images.\",\r\n                \"name\": \"Url\"\r\n              },\r\n              {\r\n                \"value\": \"b64_json\",\r\n                \"description\": \"The generated images are returned as base64 encoded string.\",\r\n                \"name\": \"Base64Json\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"imageSize\": {\r\n          \"description\": \"The size of the generated images.\",\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"1792x1024\",\r\n            \"1024x1792\",\r\n            \"1024x1024\"\r\n          ],\r\n          \"default\": \"1024x1024\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"Size\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"1792x1024\",\r\n                \"description\": \"The desired size of the generated image is 1792x1024 pixels.\",\r\n                \"name\": \"Size1792x1024\"\r\n              },\r\n              {\r\n                \"value\": \"1024x1792\",\r\n                \"description\": \"The desired size of the generated image is 1024x1792 pixels.\",\r\n                \"name\": \"Size1024x1792\"\r\n              },\r\n              {\r\n                \"value\": \"1024x1024\",\r\n                \"description\": \"The desired size of the generated image is 1024x1024 pixels.\",\r\n                \"name\": \"Size1024x1024\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"imageStyle\": {\r\n          \"description\": \"The style of the generated images.\",\r\n          \"type\": \"string\",\r\n          \"enum\": [\r\n            \"vivid\",\r\n            \"natural\"\r\n          ],\r\n          \"default\": \"vivid\",\r\n          \"x-ms-enum\": {\r\n            \"name\": \"Style\",\r\n            \"modelAsString\": true,\r\n            \"values\": [\r\n              {\r\n                \"value\": \"vivid\",\r\n                \"description\": \"Vivid creates images that are hyper-realistic and dramatic.\",\r\n                \"name\": \"Vivid\"\r\n              },\r\n              {\r\n                \"value\": \"natural\",\r\n                \"description\": \"Natural creates images that are more natural and less hyper-realistic.\",\r\n                \"name\": \"Natural\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"imageGenerationsRequest\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"prompt\": {\r\n              \"description\": \"A text description of the desired image(s). The maximum length is 4000 characters.\",\r\n              \"type\": \"string\",\r\n              \"format\": \"string\",\r\n              \"example\": \"a corgi in a field\",\r\n              \"minLength\": 1\r\n            },\r\n            \"n\": {\r\n              \"description\": \"The number of images to generate.\",\r\n              \"type\": \"integer\",\r\n              \"minimum\": 1,\r\n              \"maximum\": 1,\r\n              \"default\": 1\r\n            },\r\n            \"size\": {\r\n              \"$ref\": \"#/components/schemas/imageSize\"\r\n            },\r\n            \"response_format\": {\r\n              \"$ref\": \"#/components/schemas/imagesResponseFormat\"\r\n            },\r\n            \"user\": {\r\n              \"description\": \"A unique identifier representing your end-user, which can help to monitor and detect abuse.\",\r\n              \"type\": \"string\",\r\n              \"format\": \"string\",\r\n              \"example\": \"user123456\"\r\n            },\r\n            \"quality\": {\r\n              \"$ref\": \"#/components/schemas/imageQuality\"\r\n            },\r\n            \"style\": {\r\n              \"$ref\": \"#/components/schemas/imageStyle\"\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"prompt\"\r\n          ]\r\n        },\r\n        \"generateImagesResponse\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"created\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"unixtime\",\r\n              \"description\": \"The unix timestamp when the operation was created.\",\r\n              \"example\": \"1676540381\"\r\n            },\r\n            \"data\": {\r\n              \"type\": \"array\",\r\n              \"description\": \"The result data of the operation, if successful\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/imageResult\"\r\n              }\r\n            }\r\n          },\r\n          \"required\": [\r\n            \"created\",\r\n            \"data\"\r\n          ]\r\n        },\r\n        \"imageResult\": {\r\n          \"type\": \"object\",\r\n          \"description\": \"The image url or encoded image if successful, and an error otherwise.\",\r\n          \"properties\": {\r\n            \"url\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The image url.\",\r\n              \"example\": \"https://www.contoso.com\"\r\n            },\r\n            \"b64_json\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The base64 encoded image\"\r\n            },\r\n            \"content_filter_results\": {\r\n              \"$ref\": \"#/components/schemas/dalleContentFilterResults\"\r\n            },\r\n            \"revised_prompt\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"The prompt that was used to generate the image, if there was any revision to the prompt.\"\r\n            },\r\n            \"prompt_filter_results\": {\r\n              \"$ref\": \"#/components/schemas/dalleFilterResults\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"securitySchemes\": {\r\n        \"bearer\": {\r\n          \"type\": \"oauth2\",\r\n          \"flows\": {\r\n            \"implicit\": {\r\n              \"authorizationUrl\": \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\r\n              \"scopes\": {}\r\n            }\r\n          },\r\n          \"x-tokenInfoFunc\": \"api.middleware.auth.bearer_auth\",\r\n          \"x-scopeValidateFunc\": \"api.middleware.auth.validate_scopes\"\r\n        },\r\n        \"apiKey\": {\r\n          \"type\": \"apiKey\",\r\n          \"name\": \"api-key\",\r\n          \"in\": \"header\"\r\n        }\r\n      }\r\n    }\r\n  }",
            "apiNetwork": "External",
            "apiName": "azure-openai-service-api",
            "apiPath": "openai",
            "apiSubscriptionName": "AzureOpenAI-Consumer-Chat",
            "azureRoles": "[variables('$fxv#3')]"
          },
          "resources": {
            "eventHubNamespaceParent": {
              "existing": true,
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2024-01-01",
              "name": "[parameters('eventHubNamespaceName')]"
            },
            "applicationInsightsParent": {
              "existing": true,
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]"
            },
            "monitoringMetricsPublisher": {
              "condition": "[parameters('assignRbacRoles')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Insights/components/{0}', parameters('applicationInsightsName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('applicationInsightsName'))]",
              "properties": {
                "principalId": "[reference('apiManagement').outputs.apiManagementIdentityPrincipalId.value]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRoles').MonitoringMetricsPublisher)]"
              },
              "dependsOn": [
                "apiManagement",
                "openAiApi"
              ]
            },
            "azureEventHubsDataSender": {
              "condition": "[parameters('assignRbacRoles')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.EventHub/namespaces/{0}', parameters('eventHubNamespaceName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('eventHubNamespaceName'))]",
              "properties": {
                "principalId": "[reference('apiManagement').outputs.apiManagementIdentityPrincipalId.value]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRoles').AzureEventHubsDataSender)]"
              },
              "dependsOn": [
                "apiManagement",
                "openAiApi"
              ]
            },
            "autoScaleRule": {
              "condition": "[parameters('autoScale')]",
              "type": "Microsoft.Insights/autoscalesettings",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-autoscale', parameters('apiManagementServiceName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enabled": true,
                "targetResourceUri": "[reference('apiManagement').outputs.apiManagementResourceId.value]",
                "profiles": [
                  {
                    "name": "Auto created default scale condition",
                    "capacity": {
                      "default": "[string(parameters('apiManagementSkuCount'))]",
                      "minimum": "[string(parameters('apiManagementSkuCount'))]",
                      "maximum": "[string(add(parameters('apiManagementSkuCount'), 1))]"
                    },
                    "rules": [
                      {
                        "scaleAction": {
                          "cooldown": "PT5M",
                          "direction": "Increase",
                          "type": "ChangeCount",
                          "value": "1"
                        },
                        "metricTrigger": {
                          "metricName": "Capacity",
                          "metricNamespace": "microsoft.apimanagement/service",
                          "metricResourceUri": "[reference('apiManagement').outputs.apiManagementResourceId.value]",
                          "operator": "GreaterThan",
                          "statistic": "Average",
                          "threshold": 70,
                          "timeAggregation": "Average",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT10M",
                          "dividePerInstance": false
                        }
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "apiManagement"
              ]
            },
            "apiManagement": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "api-management",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "zoneRedundant": {
                    "value": "[parameters('zoneRedundant')]"
                  },
                  "serviceName": {
                    "value": "[parameters('apiManagementServiceName')]"
                  },
                  "publisherName": {
                    "value": "[parameters('apiManagementPublisherName')]"
                  },
                  "publisherEmail": {
                    "value": "[parameters('apiManagementPublisherEmail')]"
                  },
                  "skuName": {
                    "value": "[parameters('apiManagementSku')]"
                  },
                  "skuCount": {
                    "value": "[parameters('apiManagementSkuCount')]"
                  },
                  "subnetResourceId": {
                    "value": "[parameters('apiManagmentSubnetResourceId')]"
                  },
                  "virtualNetworkType": {
                    "value": "[variables('apiNetwork')]"
                  },
                  "aiName": {
                    "value": "[reference('applicationInsightsParent').Name]"
                  },
                  "enableLoggers": {
                    "value": "[parameters('enableLoggers')]"
                  },
                  "publicIPName": "[if(equals(variables('apiNetwork'), 'External'), createObject('value', format('pip-{0}', parameters('apiManagementServiceName'))), createObject('value', ''))]",
                  "domainNameLabel": "[if(equals(variables('apiNetwork'), 'External'), createObject('value', parameters('apiManagementServiceName')), createObject('value', ''))]",
                  "linkPrivateEndpointToPrivateDns": {
                    "value": "[parameters('linkPrivateEndpointToPrivateDns')]"
                  },
                  "privateDnsZoneResourceGroup": {
                    "value": "[parameters('privateDnsZonesResourceGroup')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "13349255494907167080"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "The location into which the API Management resources should be deployed."
                      }
                    },
                    "serviceName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the API Management service instance to create. This must be globally unique."
                      }
                    },
                    "publisherName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the API publisher. This information is used by API Management."
                      }
                    },
                    "publisherEmail": {
                      "type": "string",
                      "metadata": {
                        "description": "The email address of the API publisher. This information is used by API Management."
                      }
                    },
                    "aiName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of Application Insights"
                      }
                    },
                    "skuName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the SKU to use when creating the API Management service instance. This must be a SKU that supports virtual network integration."
                      }
                    },
                    "skuCount": {
                      "type": "int",
                      "metadata": {
                        "description": "The number of worker instances of your API Management service that should be provisioned."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "publicIPName": {
                      "type": "string"
                    },
                    "domainNameLabel": {
                      "type": "string"
                    },
                    "virtualNetworkType": {
                      "type": "string",
                      "allowedValues": [
                        "External",
                        "Internal",
                        "None"
                      ]
                    },
                    "subnetResourceId": {
                      "type": "string"
                    },
                    "enableLoggers": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "zoneRedundant": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "linkPrivateEndpointToPrivateDns": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDnsZoneResourceGroup": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[and(equals(parameters('virtualNetworkType'), 'None'), parameters('linkPrivateEndpointToPrivateDns'))]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('serviceName')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.azure-api.net')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('serviceName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('virtualNetworkType'), 'External')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2024-01-01",
                      "name": "[parameters('publicIPName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "zones": "[if(parameters('zoneRedundant'), createArray('1', '2', '3'), createArray())]",
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[parameters('domainNameLabel')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.ApiManagement/service",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[parameters('serviceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('skuName')]",
                        "capacity": "[parameters('skuCount')]"
                      },
                      "zones": "[if(parameters('zoneRedundant'), createArray('1', '2', '3'), createArray())]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "publisherName": "[parameters('publisherName')]",
                        "publisherEmail": "[parameters('publisherEmail')]",
                        "publicIpAddressId": "[if(equals(parameters('virtualNetworkType'), 'External'), resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName')), null())]",
                        "virtualNetworkConfiguration": "[if(equals(parameters('virtualNetworkType'), 'None'), null(), createObject('subnetResourceId', parameters('subnetResourceId')))]",
                        "virtualNetworkType": "[parameters('virtualNetworkType')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('virtualNetworkType'), 'None')]",
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-endpoint', parameters('serviceName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetResourceId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-connection', parameters('serviceName'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]",
                              "groupIds": [
                                "Gateway"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/namedValues",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('serviceName'), 'aiLoggerInstrumentationKey')]",
                      "properties": {
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('aiName')), '2020-02-02').InstrumentationKey]",
                        "secret": true,
                        "displayName": "ai-logger-credentials"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('enableLoggers')]",
                      "type": "Microsoft.ApiManagement/service/loggers",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('serviceName'), 'aiLogger')]",
                      "properties": {
                        "loggerType": "applicationInsights",
                        "description": "Application Insights logger with connection string",
                        "resourceId": "[resourceId('Microsoft.Insights/components', parameters('aiName'))]",
                        "isBuffered": true,
                        "credentials": {
                          "instrumentationKey": "[format('{{{{{0}}}}}', reference(resourceId('Microsoft.ApiManagement/service/namedValues', parameters('serviceName'), 'aiLoggerInstrumentationKey'), '2023-09-01-preview').displayName)]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/namedValues', parameters('serviceName'), 'aiLoggerInstrumentationKey')]",
                        "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "apiManagementResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]"
                    },
                    "apiManagementServiceName": {
                      "type": "string",
                      "value": "[parameters('serviceName')]"
                    },
                    "apiManagementPublicIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-09-01-preview').publicIPAddresses[0]]"
                    },
                    "apiManagementIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-09-01-preview', 'full').identity.principalId]"
                    },
                    "apiManagementProxyHostName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-09-01-preview').hostnameConfigurations[0].hostName]"
                    },
                    "apiManagementGatewayUrl": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-09-01-preview').gatewayUrl]"
                    },
                    "apiManagementDeveloperPortalHostName": {
                      "type": "string",
                      "value": "[replace(reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-09-01-preview').developerPortalUrl, 'https://', '')]"
                    },
                    "aiLoggerId": {
                      "type": "string",
                      "value": "[if(parameters('enableLoggers'), resourceId('Microsoft.ApiManagement/service/loggers', parameters('serviceName'), 'aiLogger'), '')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "applicationInsightsParent"
              ]
            },
            "corsFragment": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cors-fragment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[reference('apiManagement').outputs.apiManagementServiceName.value]"
                  },
                  "allowedOrigins": {
                    "value": "[parameters('allowedOrigins')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "5102213311201497483"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": []
                    }
                  },
                  "variables": {
                    "corsFragmentTemplate": "<fragment>\r\n    <cors allow-credentials=\"false\">\r\n        <allowed-origins>\r\n            {{allowedOrigins}}\r\n        </allowed-origins>\r\n        <allowed-methods>\r\n            <method>*</method>\r\n        </allowed-methods>\r\n        <allowed-headers>\r\n            <header>*</header>\r\n        </allowed-headers>\r\n    </cors>\r\n</fragment>",
                    "allowedOriginsXml": "[if(empty(parameters('allowedOrigins')), '<origin>*</origin>', join(map(parameters('allowedOrigins'), lambda('arg', format('<origin>{0}</origin>', lambdaVariables('arg')))), '\n'))]",
                    "corsXml": "[replace(variables('corsFragmentTemplate'), '{{allowedOrigins}}', variables('allowedOriginsXml'))]"
                  },
                  "resources": {
                    "corsFragment": {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "cors",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apimName": {
                            "value": "[parameters('apimName')]"
                          },
                          "fragmentName": {
                            "value": "cors"
                          },
                          "fragmentValue": {
                            "value": "[variables('corsXml')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "languageVersion": "2.0",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "3345657553750707727"
                            }
                          },
                          "definitions": {
                            "namedValue": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "parameters": {
                            "apimName": {
                              "type": "string"
                            },
                            "fragmentName": {
                              "type": "string"
                            },
                            "fragmentValue": {
                              "type": "string"
                            },
                            "fragmentNamedValues": {
                              "type": "array",
                              "items": {
                                "$ref": "#/definitions/namedValue"
                              },
                              "defaultValue": []
                            }
                          },
                          "resources": {
                            "parentAPIM": {
                              "existing": true,
                              "type": "Microsoft.ApiManagement/service",
                              "apiVersion": "2023-09-01-preview",
                              "name": "[parameters('apimName')]"
                            },
                            "namedValueResources": {
                              "copy": {
                                "name": "namedValueResources",
                                "count": "[length(parameters('fragmentNamedValues'))]",
                                "mode": "serial",
                                "batchSize": 1
                              },
                              "type": "Microsoft.ApiManagement/service/namedValues",
                              "apiVersion": "2023-09-01-preview",
                              "name": "[format('{0}/{1}', parameters('apimName'), parameters('fragmentNamedValues')[copyIndex()].name)]",
                              "properties": {
                                "displayName": "[parameters('fragmentNamedValues')[copyIndex()].name]",
                                "value": "[parameters('fragmentNamedValues')[copyIndex()].value]"
                              }
                            },
                            "policyFragment": {
                              "type": "Microsoft.ApiManagement/service/policyFragments",
                              "apiVersion": "2023-09-01-preview",
                              "name": "[format('{0}/{1}', parameters('apimName'), parameters('fragmentName'))]",
                              "properties": {
                                "format": "rawxml",
                                "value": "[parameters('fragmentValue')]"
                              },
                              "dependsOn": [
                                "namedValueResources"
                              ]
                            }
                          },
                          "outputs": {
                            "policyFragmentId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ApiManagement/service/policyFragments', parameters('apimName'), parameters('fragmentName'))]"
                            },
                            "policyFragmentName": {
                              "type": "string",
                              "value": "[parameters('fragmentName')]"
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": {
                    "corsFragmentId": {
                      "type": "string",
                      "value": "[reference('corsFragment').outputs.policyFragmentId.value]"
                    },
                    "corsFragmentName": {
                      "type": "string",
                      "value": "[reference('corsFragment').outputs.policyFragmentName.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "apiManagement"
              ]
            },
            "rateFragment": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "rate-fragment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[reference('apiManagement').outputs.apiManagementServiceName.value]"
                  },
                  "rateLimitCalls": {
                    "value": "[parameters('rateLimitCalls')]"
                  },
                  "rateLimitPeriod": {
                    "value": "[parameters('rateLimitPeriod')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8283075390370984426"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "rateLimitCalls": {
                      "type": "int",
                      "defaultValue": 20
                    },
                    "rateLimitPeriod": {
                      "type": "int",
                      "defaultValue": 60
                    }
                  },
                  "variables": {
                    "rateFragmentTemplate": "<fragment>\r\n    <rate-limit calls=\"{{rateLimitCalls}}\" renewal-period=\"{{rateLimitPeriod}}\"\r\n        remaining-calls-variable-name=\"remainingCallsPerSubscription\" />\r\n</fragment>",
                    "rateLimitXml": "[replace(replace(variables('rateFragmentTemplate'), '{{rateLimitCalls}}', string(parameters('rateLimitCalls'))), '{{rateLimitPeriod}}', string(parameters('rateLimitPeriod')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "rate-throttle",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apimName": {
                            "value": "[parameters('apimName')]"
                          },
                          "fragmentName": {
                            "value": "rate-throttle"
                          },
                          "fragmentValue": {
                            "value": "[variables('rateLimitXml')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "languageVersion": "2.0",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "3345657553750707727"
                            }
                          },
                          "definitions": {
                            "namedValue": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "parameters": {
                            "apimName": {
                              "type": "string"
                            },
                            "fragmentName": {
                              "type": "string"
                            },
                            "fragmentValue": {
                              "type": "string"
                            },
                            "fragmentNamedValues": {
                              "type": "array",
                              "items": {
                                "$ref": "#/definitions/namedValue"
                              },
                              "defaultValue": []
                            }
                          },
                          "resources": {
                            "parentAPIM": {
                              "existing": true,
                              "type": "Microsoft.ApiManagement/service",
                              "apiVersion": "2023-09-01-preview",
                              "name": "[parameters('apimName')]"
                            },
                            "namedValueResources": {
                              "copy": {
                                "name": "namedValueResources",
                                "count": "[length(parameters('fragmentNamedValues'))]",
                                "mode": "serial",
                                "batchSize": 1
                              },
                              "type": "Microsoft.ApiManagement/service/namedValues",
                              "apiVersion": "2023-09-01-preview",
                              "name": "[format('{0}/{1}', parameters('apimName'), parameters('fragmentNamedValues')[copyIndex()].name)]",
                              "properties": {
                                "displayName": "[parameters('fragmentNamedValues')[copyIndex()].name]",
                                "value": "[parameters('fragmentNamedValues')[copyIndex()].value]"
                              }
                            },
                            "policyFragment": {
                              "type": "Microsoft.ApiManagement/service/policyFragments",
                              "apiVersion": "2023-09-01-preview",
                              "name": "[format('{0}/{1}', parameters('apimName'), parameters('fragmentName'))]",
                              "properties": {
                                "format": "rawxml",
                                "value": "[parameters('fragmentValue')]"
                              },
                              "dependsOn": [
                                "namedValueResources"
                              ]
                            }
                          },
                          "outputs": {
                            "policyFragmentId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ApiManagement/service/policyFragments', parameters('apimName'), parameters('fragmentName'))]"
                            },
                            "policyFragmentName": {
                              "type": "string",
                              "value": "[parameters('fragmentName')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "rateFragmentId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'rate-throttle'), '2022-09-01').outputs.policyFragmentId.value]"
                    },
                    "rateFragmentName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'rate-throttle'), '2022-09-01').outputs.policyFragmentName.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "apiManagement",
                "corsFragment"
              ]
            },
            "globalPolicy": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "globalPolicy",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[parameters('apiManagementServiceName')]"
                  },
                  "policyValue": {
                    "value": "[variables('$fxv#4')]"
                  },
                  "policyFragmentIds": {
                    "value": [
                      "[reference('corsFragment').outputs.corsFragmentName.value]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3281291321907733238"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "policyValue": {
                      "type": "string"
                    },
                    "policyFragmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": []
                    }
                  },
                  "variables": {
                    "policyFragmentsXml": "[join(map(parameters('policyFragmentIds'), lambda('fragmentId', format('<include-fragment fragment-id=\"{0}\" />', lambdaVariables('fragmentId')))), '\n')]",
                    "policyXml": "[replace(parameters('policyValue'), '{{policyFragments}}', variables('policyFragmentsXml'))]"
                  },
                  "resources": {
                    "parentAPIM": {
                      "existing": true,
                      "type": "Microsoft.ApiManagement/service",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[parameters('apimName')]"
                    },
                    "policy": {
                      "type": "Microsoft.ApiManagement/service/policies",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "[variables('policyXml')]"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "corsFragment"
              ]
            },
            "openAiApi": {
              "condition": "[parameters('enableAzureOpenAiSupport')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openAiApi",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[parameters('apiManagementServiceName')]"
                  },
                  "apiName": {
                    "value": "[variables('apiName')]"
                  },
                  "apiPath": {
                    "value": "[variables('apiPath')]"
                  },
                  "openApiJson": {
                    "value": "[variables('openApiJson')]"
                  },
                  "openApiXml": {
                    "value": "[variables('openApiXml')]"
                  },
                  "serviceUrlPrimary": {
                    "value": "[variables('apiServiceUrlPrimary')]"
                  },
                  "serviceUrlSecondary": {
                    "value": "[variables('apiServiceUrlSecondary')]"
                  },
                  "azureOpenAiRegionType": {
                    "value": "[parameters('azureOpenAiRegionType')]"
                  },
                  "apiSubscriptionName": {
                    "value": "[variables('apiSubscriptionName')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "policyFragmentIds": {
                    "value": [
                      "[reference('rateFragment').outputs.rateFragmentName.value]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "9623179515660411905"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "apiName": {
                      "type": "string"
                    },
                    "apiPath": {
                      "type": "string"
                    },
                    "openApiJson": {
                      "type": "string"
                    },
                    "openApiXml": {
                      "type": "string"
                    },
                    "serviceUrlPrimary": {
                      "type": "string"
                    },
                    "serviceUrlSecondary": {
                      "type": "string"
                    },
                    "apiSubscriptionName": {
                      "type": "string"
                    },
                    "azureOpenAiRegionType": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "policyFragmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": []
                    }
                  },
                  "variables": {
                    "policyFragmentsXml": "[join(map(parameters('policyFragmentIds'), lambda('fragmentId', format('<include-fragment fragment-id=\"{0}\" />', lambdaVariables('fragmentId')))), '\n')]",
                    "policyXml": "[replace(parameters('openApiXml'), '{{policyFragments}}', variables('policyFragmentsXml'))]"
                  },
                  "resources": {
                    "parentAPIM": {
                      "existing": true,
                      "type": "Microsoft.ApiManagement/service",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[parameters('apimName')]"
                    },
                    "primarybackend": {
                      "type": "Microsoft.ApiManagement/service/backends",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), 'aoai-primary-backend')]",
                      "properties": {
                        "description": "Primary AOAI endpoint",
                        "protocol": "http",
                        "url": "[parameters('serviceUrlPrimary')]"
                      }
                    },
                    "secondarybackend": {
                      "condition": "[equals(parameters('azureOpenAiRegionType'), 'Multi')]",
                      "type": "Microsoft.ApiManagement/service/backends",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), 'aoai-secondary-backend')]",
                      "properties": {
                        "description": "Secondary AOAI endpoint",
                        "protocol": "http",
                        "url": "[parameters('serviceUrlSecondary')]"
                      }
                    },
                    "api": {
                      "type": "Microsoft.ApiManagement/service/apis",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiName'))]",
                      "properties": {
                        "format": "openapi+json",
                        "value": "[parameters('openApiJson')]",
                        "path": "[parameters('apiPath')]",
                        "protocols": [
                          "https",
                          "http"
                        ],
                        "subscriptionKeyParameterNames": {
                          "header": "api-key"
                        },
                        "subscriptionRequired": true
                      }
                    },
                    "apiPolicy": {
                      "type": "Microsoft.ApiManagement/service/apis/policies",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), parameters('apiName'), 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "[variables('policyXml')]"
                      },
                      "dependsOn": [
                        "api"
                      ]
                    },
                    "apiSubscription": {
                      "type": "Microsoft.ApiManagement/service/subscriptions",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiSubscriptionName'))]",
                      "properties": {
                        "allowTracing": false,
                        "displayName": "[parameters('apiSubscriptionName')]",
                        "scope": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('apiName'))]",
                        "state": "active"
                      },
                      "dependsOn": [
                        "api"
                      ]
                    },
                    "apiSubscriptionKey": {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-subscription-secret', parameters('apiName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultSecretName": {
                            "value": "[format('{0}-subscription-key', parameters('apiName'))]"
                          },
                          "keyVaultSecretValue": {
                            "value": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('apimName'), parameters('apiSubscriptionName')), '2023-09-01-preview').primaryKey]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "2738895811534356834"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultSecretName": {
                              "type": "string"
                            },
                            "keyVaultSecretValue": {
                              "type": "securestring"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                              "properties": {
                                "value": "[parameters('keyVaultSecretValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretName": {
                              "type": "string",
                              "value": "[parameters('keyVaultSecretName')]"
                            },
                            "secretUri": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "api",
                        "apiSubscription"
                      ]
                    }
                  },
                  "outputs": {
                    "apiSubscriptionSecretUri": {
                      "type": "string",
                      "value": "[reference('apiSubscriptionKey').outputs.secretUri.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "globalPolicy",
                "rateFragment"
              ]
            },
            "backendApi": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backendApi",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[parameters('apiManagementServiceName')]"
                  },
                  "apiName": {
                    "value": "[parameters('backendApiName')]"
                  },
                  "apiPath": {
                    "value": "[parameters('backendApiPath')]"
                  },
                  "openApiJson": {
                    "value": "[parameters('backendApiDefinitionJson')]"
                  },
                  "openApiXml": {
                    "value": "[parameters('backendApiPoliciesXml')]"
                  },
                  "apiBackendName": {
                    "value": "api-backend"
                  },
                  "apiBackendUrl": {
                    "value": "[parameters('backendApiUrl')]"
                  },
                  "apiSubscriptionName": {
                    "value": "[parameters('backendApiSubscriptionName')]"
                  },
                  "apiSubscriptionRequired": {
                    "value": "[parameters('backendApiSubscriptionRequired')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "policyFragmentIds": {
                    "value": [
                      "[reference('rateFragment').outputs.rateFragmentName.value]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "2.0",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7303694529761848173"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "apiName": {
                      "type": "string"
                    },
                    "apiPath": {
                      "type": "string"
                    },
                    "apiBackendUrl": {
                      "type": "string"
                    },
                    "apiBackendDescription": {
                      "type": "string",
                      "defaultValue": "Enter description here"
                    },
                    "apiSubscriptionName": {
                      "type": "string"
                    },
                    "apiSubscriptionRequired": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "apiBackendName": {
                      "type": "string"
                    },
                    "openApiJson": {
                      "type": "string"
                    },
                    "openApiXml": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "policyFragmentIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "defaultValue": []
                    }
                  },
                  "variables": {
                    "policyFragmentsXml": "[join(map(parameters('policyFragmentIds'), lambda('fragmentId', format('<include-fragment fragment-id=\"{0}\" />', lambdaVariables('fragmentId')))), '\n')]",
                    "policyXml": "[replace(parameters('openApiXml'), '{{policyFragments}}', variables('policyFragmentsXml'))]"
                  },
                  "resources": {
                    "parentAPIM": {
                      "existing": true,
                      "type": "Microsoft.ApiManagement/service",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[parameters('apimName')]"
                    },
                    "primarybackend": {
                      "type": "Microsoft.ApiManagement/service/backends",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiBackendName'))]",
                      "properties": {
                        "description": "[parameters('apiBackendDescription')]",
                        "protocol": "http",
                        "url": "[parameters('apiBackendUrl')]"
                      }
                    },
                    "api": {
                      "type": "Microsoft.ApiManagement/service/apis",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiName'))]",
                      "properties": {
                        "format": "openapi+json",
                        "value": "[parameters('openApiJson')]",
                        "path": "[parameters('apiPath')]",
                        "protocols": [
                          "https",
                          "http"
                        ],
                        "subscriptionRequired": "[parameters('apiSubscriptionRequired')]",
                        "subscriptionKeyParameterNames": {
                          "header": "api-key"
                        }
                      }
                    },
                    "apiPolicy": {
                      "type": "Microsoft.ApiManagement/service/apis/policies",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), parameters('apiName'), 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "[variables('policyXml')]"
                      },
                      "dependsOn": [
                        "api"
                      ]
                    },
                    "apiSubscription": {
                      "type": "Microsoft.ApiManagement/service/subscriptions",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiSubscriptionName'))]",
                      "properties": {
                        "allowTracing": false,
                        "displayName": "[parameters('apiSubscriptionName')]",
                        "scope": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('apiName'))]",
                        "state": "active"
                      },
                      "dependsOn": [
                        "api"
                      ]
                    },
                    "apiSubscriptionKey": {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-subscription-secret', parameters('apiName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultSecretName": {
                            "value": "[format('{0}-subscription-key', parameters('apiName'))]"
                          },
                          "keyVaultSecretValue": {
                            "value": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('apimName'), parameters('apiSubscriptionName')), '2023-09-01-preview').primaryKey]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "2738895811534356834"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultSecretName": {
                              "type": "string"
                            },
                            "keyVaultSecretValue": {
                              "type": "securestring"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                              "properties": {
                                "value": "[parameters('keyVaultSecretValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretName": {
                              "type": "string",
                              "value": "[parameters('keyVaultSecretName')]"
                            },
                            "secretUri": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "api",
                        "apiSubscription"
                      ]
                    }
                  },
                  "outputs": {
                    "apiSubscriptionSecretUri": {
                      "type": "string",
                      "value": "[reference('apiSubscriptionKey').outputs.secretUri.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "openAiApi",
                "rateFragment"
              ]
            },
            "diagnostic": {
              "condition": "[parameters('enableLoggers')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "diagnostic",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[parameters('apiManagementServiceName')]"
                  },
                  "aiLoggerId": {
                    "value": "[reference('apiManagement').outputs.aiLoggerId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1569905666042043820"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "aiLoggerId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(empty(parameters('aiLoggerId')))]",
                      "type": "Microsoft.ApiManagement/service/diagnostics",
                      "apiVersion": "2023-09-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), 'applicationinsights')]",
                      "properties": {
                        "alwaysLog": "allErrors",
                        "httpCorrelationProtocol": "Legacy",
                        "verbosity": "information",
                        "logClientIp": true,
                        "loggerId": "[parameters('aiLoggerId')]",
                        "sampling": {
                          "samplingType": "fixed",
                          "percentage": 100
                        },
                        "frontend": {
                          "request": {
                            "headers": [],
                            "body": {
                              "bytes": 0
                            }
                          },
                          "response": {
                            "headers": [],
                            "body": {
                              "bytes": 0
                            }
                          }
                        },
                        "backend": {
                          "request": {
                            "headers": [],
                            "body": {
                              "bytes": 0
                            }
                          },
                          "response": {
                            "headers": [],
                            "body": {
                              "bytes": 0
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "apiManagement",
                "backendApi",
                "openAiApi"
              ]
            },
            "openAiUserPrimary": {
              "condition": "[and(parameters('assignRbacRoles'), parameters('enableAzureOpenAiSupport'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-openAiUserPrimary', parameters('apiManagementServiceName'))]",
              "resourceGroup": "[parameters('apiServiceRgPrimary')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "roleName": {
                    "value": "[guid(resourceGroup().id, reference('apiManagement').outputs.apiManagementIdentityPrincipalId.value, variables('azureRoles').CognitiveServicesOpenAIUser, parameters('apiServiceNamePrimary'))]"
                  },
                  "principalId": {
                    "value": "[reference('apiManagement').outputs.apiManagementIdentityPrincipalId.value]"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  },
                  "roleDefinitionId": {
                    "value": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRoles').CognitiveServicesOpenAIUser)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1099573578392314422"
                    }
                  },
                  "parameters": {
                    "roleName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[parameters('roleName')]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[parameters('roleDefinitionId')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "apiManagement",
                "azureEventHubsDataSender"
              ]
            },
            "openAiUserSecondary": {
              "condition": "[and(and(and(parameters('assignRbacRoles'), parameters('enableAzureOpenAiSupport')), equals(parameters('azureOpenAiRegionType'), 'Multi')), not(equals(parameters('apiServiceRgPrimary'), parameters('apiServiceRgSecondary'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-openAiUserSecondary', parameters('apiManagementServiceName'))]",
              "resourceGroup": "[parameters('apiServiceRgSecondary')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "roleName": {
                    "value": "[guid(resourceGroup().id, reference('apiManagement').outputs.apiManagementIdentityPrincipalId.value, variables('azureRoles').CognitiveServicesOpenAIUser, parameters('apiServiceNameSecondary'))]"
                  },
                  "principalId": {
                    "value": "[reference('apiManagement').outputs.apiManagementIdentityPrincipalId.value]"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  },
                  "roleDefinitionId": {
                    "value": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRoles').CognitiveServicesOpenAIUser)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1099573578392314422"
                    }
                  },
                  "parameters": {
                    "roleName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[parameters('roleName')]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[parameters('roleDefinitionId')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "apiManagement",
                "openAiUserPrimary"
              ]
            }
          },
          "outputs": {
            "apiManagementServiceName": {
              "type": "string",
              "value": "[reference('apiManagement').outputs.apiManagementServiceName.value]"
            },
            "apiManagementProxyHostName": {
              "type": "string",
              "value": "[reference('apiManagement').outputs.apiManagementProxyHostName.value]"
            },
            "apiManagementPortalHostName": {
              "type": "string",
              "value": "[reference('apiManagement').outputs.apiManagementDeveloperPortalHostName.value]"
            },
            "apiManagementGatewayUrl": {
              "type": "string",
              "value": "[reference('apiManagement').outputs.apiManagementGatewayUrl.value]"
            },
            "openAiApiSubscriptionSecretUri": {
              "type": "string",
              "value": "[reference('openAiApi').outputs.apiSubscriptionSecretUri.value]"
            },
            "backendApiSubscriptionSecretUri": {
              "type": "string",
              "value": "[reference('backendApi').outputs.apiSubscriptionSecretUri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'event-hub')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupNameSecondary'))), parameters('openAiResourceGroupNameSecondary'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai-secondary')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": "[if(not(empty(parameters('cosmosAccountName'))), createObject('value', parameters('cosmosAccountName')), createObject('value', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "secondaryLocation": "[if(variables('isProd'), createObject('value', parameters('cosmosSecondaryRegion')), createObject('value', ''))]",
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "principalIds": {
            "value": [
              "[parameters('principalId')]",
              "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'backend-identity'), '2022-09-01').outputs.principalId.value]",
              "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'indexing-function-identity'), '2022-09-01').outputs.principalId.value]"
            ]
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZonesResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "enableServerless": {
            "value": "[not(equals(parameters('environmentName'), 'prd'))]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13528456267873650716"
            }
          },
          "definitions": {
            "container": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "partitionKey": {
                  "type": "string"
                },
                "procs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/proc"
                  },
                  "nullable": true
                }
              }
            },
            "proc": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                }
              }
            }
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "secondaryLocation": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "databaseName": {
              "type": "string",
              "defaultValue": "db_conversation_history"
            },
            "collectionName": {
              "type": "string",
              "defaultValue": "conversations"
            },
            "principalIds": {
              "type": "array",
              "defaultValue": []
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZonesResourceGroup": {
              "type": "string"
            },
            "containers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/container"
              },
              "defaultValue": [
                {
                  "name": "[parameters('collectionName')]",
                  "id": "[parameters('collectionName')]",
                  "partitionKey": "/userId"
                }
              ]
            },
            "enableServerless": {
              "type": "bool",
              "defaultValue": false
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "resources": {
            "cosmos": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cosmos-sql",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "accountName": {
                    "value": "[parameters('accountName')]"
                  },
                  "databaseName": {
                    "value": "[parameters('databaseName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "secondaryLocation": {
                    "value": "[parameters('secondaryLocation')]"
                  },
                  "containers": {
                    "value": "[parameters('containers')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "principalIds": {
                    "value": "[parameters('principalIds')]"
                  },
                  "kind": {
                    "value": "GlobalDocumentDB"
                  },
                  "privateEndpointSubnetId": {
                    "value": "[parameters('privateEndpointSubnetId')]"
                  },
                  "enableServerless": {
                    "value": "[parameters('enableServerless')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "linkPrivateEndpointToPrivateDns": {
                    "value": "[parameters('linkPrivateEndpointToPrivateDns')]"
                  },
                  "privateDnsZoneResourceGroup": {
                    "value": "[parameters('privateDnsZonesResourceGroup')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8013878602504428363"
                    },
                    "description": "Creates an Azure Cosmos DB account."
                  },
                  "parameters": {
                    "accountName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "secondaryLocation": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "privateEndpointSubnetId": {
                      "type": "string"
                    },
                    "linkPrivateEndpointToPrivateDns": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDnsZoneResourceGroup": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "allowedValues": [
                        "GlobalDocumentDB",
                        "MongoDB",
                        "Parse"
                      ]
                    },
                    "enableServerless": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "databaseName": {
                      "type": "string"
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "principalIds": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "defaultConsistencyLevel": {
                      "type": "string",
                      "defaultValue": "Session",
                      "allowedValues": [
                        "Eventual",
                        "ConsistentPrefix",
                        "Session",
                        "BoundedStaleness",
                        "Strong"
                      ],
                      "metadata": {
                        "description": "The default consistency level of the Cosmos DB account."
                      }
                    },
                    "maxStalenessPrefix": {
                      "type": "int",
                      "defaultValue": 100000,
                      "minValue": 10,
                      "maxValue": 2147483647,
                      "metadata": {
                        "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 2147483647. Multi Region: 100000 to 2147483647."
                      }
                    },
                    "maxIntervalInSeconds": {
                      "type": "int",
                      "defaultValue": 300,
                      "minValue": 5,
                      "maxValue": 86400,
                      "metadata": {
                        "description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
                      }
                    },
                    "systemManagedFailover": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Enable system managed failover for regions"
                      }
                    },
                    "autoscaleMaxThroughput": {
                      "type": "int",
                      "defaultValue": 1000,
                      "minValue": 1000,
                      "maxValue": 1000000,
                      "metadata": {
                        "description": "Maximum autoscale throughput for the container"
                      }
                    },
                    "keyVaultName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "consistencyPolicy": {
                      "Eventual": {
                        "defaultConsistencyLevel": "Eventual"
                      },
                      "ConsistentPrefix": {
                        "defaultConsistencyLevel": "ConsistentPrefix"
                      },
                      "Session": {
                        "defaultConsistencyLevel": "Session"
                      },
                      "BoundedStaleness": {
                        "defaultConsistencyLevel": "BoundedStaleness",
                        "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                        "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
                      },
                      "Strong": {
                        "defaultConsistencyLevel": "Strong"
                      }
                    },
                    "locations": "[union(createArray(createObject('locationName', parameters('location'), 'failoverPriority', 0, 'isZoneRedundant', false())), if(not(empty(parameters('secondaryLocation'))), createArray(createObject('locationName', parameters('secondaryLocation'), 'failoverPriority', 1, 'isZoneRedundant', false())), createArray()))]",
                    "procs": "[flatten(map(range(0, length(parameters('containers'))), lambda('i', if(not(equals(tryGet(parameters('containers')[lambdaVariables('i')], 'procs'), null())), map(parameters('containers')[lambdaVariables('i')].procs, lambda('proc', createObject('index', lambdaVariables('i'), 'container', parameters('containers')[lambdaVariables('i')].name, 'procName', lambdaVariables('proc').name, 'procBody', lambdaVariables('proc').body))), createArray()))))]"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "databaseContainers",
                        "count": "[length(parameters('containers'))]"
                      },
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}/{2}', parameters('accountName'), parameters('databaseName'), parameters('containers')[copyIndex()].name)]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('containers')[copyIndex()].id]",
                          "partitionKey": {
                            "paths": [
                              "[parameters('containers')[copyIndex()].partitionKey]"
                            ]
                          }
                        },
                        "options": "[if(parameters('enableServerless'), createObject(), createObject('autoscaleSettings', createObject('maxThroughput', parameters('autoscaleMaxThroughput'))))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('accountName'), parameters('databaseName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('accountName')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.documents.azure.com')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('accountName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts",
                      "apiVersion": "2024-05-15",
                      "name": "[parameters('accountName')]",
                      "kind": "[parameters('kind')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
                        "locations": "[variables('locations')]",
                        "databaseAccountOfferType": "Standard",
                        "enableAutomaticFailover": "[parameters('systemManagedFailover')]",
                        "enableMultipleWriteLocations": false,
                        "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.0'), createObject())]",
                        "capabilities": "[if(parameters('enableServerless'), createArray(createObject('name', 'EnableServerless')), createArray())]",
                        "publicNetworkAccess": "Disabled",
                        "networkAclBypass": "AzureServices"
                      }
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('databaseName')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "storedProcedures",
                        "count": "[length(variables('procs'))]"
                      },
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}/{2}/{3}', parameters('accountName'), parameters('databaseName'), parameters('containers')[variables('procs')[copyIndex()].index].name, variables('procs')[copyIndex()].procName)]",
                      "properties": {
                        "resource": {
                          "id": "[variables('procs')[copyIndex()].procName]",
                          "body": "[variables('procs')[copyIndex()].procBody]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('accountName'), parameters('databaseName'), parameters('containers')[variables('procs')[copyIndex()].index].name)]"
                      ]
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]",
                      "properties": {
                        "assignableScopes": [
                          "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                        ],
                        "permissions": [
                          {
                            "dataActions": [
                              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*",
                              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*"
                            ],
                            "notDataActions": []
                          }
                        ],
                        "roleName": "Reader Writer",
                        "type": "CustomRole"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "role",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "condition": "[not(empty(parameters('principalIds')[copyIndex()]))]",
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
                      "apiVersion": "2024-05-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role')), parameters('principalIds')[copyIndex()], resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))))]",
                      "properties": {
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]",
                        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]",
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('accountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), parameters('accountName'), 'sql-role'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-endpoint', parameters('accountName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-connection', parameters('accountName'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]",
                              "groupIds": [
                                "Sql"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('accountKeySecret-{0}', parameters('accountName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultSecretName": {
                            "value": "[format('{0}-key', parameters('accountName'))]"
                          },
                          "keyVaultSecretValue": {
                            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2024-05-15').primaryMasterKey]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "2738895811534356834"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultSecretName": {
                              "type": "string"
                            },
                            "keyVaultSecretValue": {
                              "type": "securestring"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                              "properties": {
                                "value": "[parameters('keyVaultSecretValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretName": {
                              "type": "string",
                              "value": "[parameters('keyVaultSecretName')]"
                            },
                            "secretUri": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName')), '2024-05-15').documentEndpoint]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('accountName'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('accountName')]"
                    },
                    "accountKeySecretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('accountName'))), '2022-09-01').outputs.secretUri.value]"
                    }
                  }
                }
              }
            }
          },
          "outputs": {
            "databaseName": {
              "type": "string",
              "value": "[parameters('databaseName')]"
            },
            "containerName": {
              "type": "string",
              "value": "[parameters('containers')[0].name]"
            },
            "accountName": {
              "type": "string",
              "value": "[parameters('accountName')]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference('cosmos').outputs.endpoint.value]"
            },
            "accountKeySecretUri": {
              "type": "string",
              "value": "[reference('cosmos').outputs.accountKeySecretUri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'backend-identity')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'indexing-function-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('formrecognizer{0}', variables('resourceToken'))]",
      "resourceGroup": "[if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('formRecognizerServiceName'))), createObject('value', parameters('formRecognizerServiceName')), createObject('value', format('{0}{1}', variables('abbrs').cognitiveServicesFormRecognizer, variables('resourceToken'))))]",
          "kind": {
            "value": "FormRecognizer"
          },
          "autoScaleEnabled": {
            "value": "[variables('isProd')]"
          },
          "location": {
            "value": "[parameters('formRecognizerResourceGroupLocation')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "sku": {
            "value": {
              "name": "[if(not(empty(parameters('formRecognizerSkuName'))), parameters('formRecognizerSkuName'), 'S0')]"
            }
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "publicNetworkAccess": {
            "value": "Disabled"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "privateEndpointLocation": {
            "value": "[parameters('vnetResourceGroupLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12984255510448965408"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "autoScaleEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "defaultValue": ""
            },
            "privateEndpointLocation": {
              "type": "string",
              "defaultValue": "[parameters('location')]"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "keyVaultName": {
              "type": "string"
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI",
              "allowedValues": [
                "Academic",
                "AnomalyDetector",
                "BingAutosuggest",
                "Bing.Autosuggest.v7",
                "Bing.CustomSearch",
                "Bing.Search",
                "Bing.Search.v7",
                "Bing.Speech",
                "Bing.SpellCheck",
                "Bing.SpellCheck.v7",
                "CognitiveServices",
                "ComputerVision",
                "ContentModerator",
                "ContentSafety",
                "CustomSpeech",
                "CustomVision.Prediction",
                "CustomVision.Training",
                "Emotion",
                "Face",
                "FormRecognizer",
                "ImmersiveReader",
                "LUIS",
                "LUIS.Authoring",
                "MetricsAdvisor",
                "OpenAI",
                "Personalizer",
                "QnAMaker",
                "Recommendations",
                "SpeakerRecognition",
                "Speech",
                "SpeechServices",
                "SpeechTranslation",
                "TextAnalytics",
                "TextTranslation",
                "WebLM"
              ]
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "condition": "[and(not(empty(parameters('privateEndpointSubnetId'))), parameters('linkPrivateEndpointToPrivateDns'))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', if(equals(parameters('kind'), 'OpenAI'), 'privatelink.openai.azure.com', 'privatelink.cognitiveservices.azure.com'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2024-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": {
                  "defaultAction": "Deny"
                },
                "restrictOutboundNetworkAccess": false,
                "dynamicThrottlingEnabled": "[if(equals(parameters('kind'), 'OpenAI'), false(), parameters('autoScaleEnabled'))]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2024-04-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'raiPolicyName'), null())]"
              },
              "sku": {
                "name": "[coalesce(tryGet(parameters('deployments')[copyIndex()], 'skuName'), 'Standard')]",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('privateEndpointLocation')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]",
                  "properties": {}
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]",
                "deployment"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').key1]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2738895811534356834"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').sku.name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('accountKeySecret-{0}', parameters('name'))), '2022-09-01').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2024-04-01-preview', 'full').identity.principalId]"
            },
            "resourceGroup": {
              "type": "string",
              "value": "[resourceGroup().name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-registry",
      "resourceGroup": "[if(not(empty(parameters('containerRegistryResourceGroupName'))), parameters('containerRegistryResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUserEnabled": {
            "value": "[parameters('containerRegistryAdminUserEnabled')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "publicNetworkAccess": {
            "value": "Disabled"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "sku": {
            "value": {
              "name": "Premium"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1716696972439923431"
            },
            "description": "Creates an Azure Container Registry."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "adminUserEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether admin user is enabled"
              }
            },
            "anonymousPullEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether anonymous pull is enabled"
              }
            },
            "dataEndpointEnabled": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Indicates whether data endpoint is enabled"
              }
            },
            "encryption": {
              "type": "object",
              "defaultValue": {
                "status": "disabled"
              },
              "metadata": {
                "description": "Encryption settings"
              }
            },
            "networkRuleBypassOptions": {
              "type": "string",
              "defaultValue": "AzureServices",
              "metadata": {
                "description": "Options for bypassing network rules"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "metadata": {
                "description": "Public network access setting"
              }
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Basic"
              },
              "metadata": {
                "description": "SKU settings"
              }
            },
            "zoneRedundancy": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Zone redundancy setting"
              }
            },
            "workspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The log analytics workspace ID used for logging and monitoring"
              }
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink{0}', environment().suffixes.acrLoginServer))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-11-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "adminUserEnabled": "[parameters('adminUserEnabled')]",
                "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                "encryption": "[parameters('encryption')]",
                "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]",
                "networkRuleSet": {
                  "defaultAction": "Deny"
                }
              }
            },
            {
              "condition": "[not(empty(parameters('workspaceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
              "name": "registry-diagnostics",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "logs": [
                  {
                    "category": "ContainerRegistryRepositoryEvents",
                    "enabled": true
                  },
                  {
                    "category": "ContainerRegistryLoginEvents",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "timeGrain": "PT1M"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]",
                      "groupIds": [
                        "registry"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2023-11-01-preview').loginServer]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "index-function-app",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "runFromPackage": {
            "value": true
          },
          "zoneRedundant": {
            "value": "[variables('isProd')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "identityType": {
            "value": "UserAssigned"
          },
          "identityName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'indexing-function-identity'), '2022-09-01').outputs.name.value]"
          },
          "appServicePlanName": "[if(not(empty(parameters('indexingFunctionAppServicePlanName'))), createObject('value', parameters('indexingFunctionAppServicePlanName')), createObject('value', format('{0}function-{1}', variables('abbrs').webServerFarms, variables('resourceToken'))))]",
          "functionAppName": "[if(not(empty(parameters('indexingFunctionAppName'))), createObject('value', parameters('indexingFunctionAppName')), createObject('value', format('{0}{1}', variables('abbrs').webSitesFunctions, variables('resourceToken'))))]",
          "tags": {
            "value": "[union(variables('unionTags'), createObject('azd-service-name', 'function'))]"
          },
          "inboundSubnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "outboundSubnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.webAppSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "storageAccountName": "[if(not(empty(parameters('indexingFunctionAppStorageAccountName'))), createObject('value', parameters('indexingFunctionAppStorageAccountName')), createObject('value', format('{0}function{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken'))))]",
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "9900183449724435612"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string"
            },
            "useExistingAppServicePlan": {
              "type": "bool",
              "defaultValue": false
            },
            "appServicePlanName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "appSettings": {
              "type": "object",
              "defaultValue": {}
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerImageTag": {
              "type": "string",
              "defaultValue": ""
            },
            "identityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            "identityName": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "zoneRedundant": {
              "type": "bool",
              "defaultValue": false
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python",
              "allowedValues": [
                "dotnet",
                "dotnetcore",
                "dotnet-isolated",
                "node",
                "python",
                "java",
                "powershell",
                "custom"
              ]
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": "3.11"
            },
            "inboundSubnetResourceId": {
              "type": "string"
            },
            "outboundSubnetResourceId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "EP3",
              "allowedValues": [
                "Y1",
                "EP3"
              ]
            },
            "runFromPackage": {
              "type": "bool",
              "defaultValue": false
            },
            "authAllowedRedirectUrls": {
              "type": "array",
              "defaultValue": []
            }
          },
          "variables": {
            "functionContentShareName": "function-content-share"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('func-storage-{0}', parameters('functionAppName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "privateEndpointSubnetId": {
                    "value": "[parameters('inboundSubnetResourceId')]"
                  },
                  "linkPrivateEndpointToPrivateDns": {
                    "value": "[parameters('linkPrivateEndpointToPrivateDns')]"
                  },
                  "privateDnsZoneResourceGroup": {
                    "value": "[parameters('privateDnsZoneResourceGroup')]"
                  },
                  "shares": {
                    "value": [
                      {
                        "name": "[variables('functionContentShareName')]"
                      }
                    ]
                  },
                  "virtualNetworkRules": {
                    "value": [
                      {
                        "id": "[parameters('outboundSubnetResourceId')]",
                        "action": "Allow",
                        "state": "Succeeded"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12619449762193667108"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "accessTier": {
                      "type": "string",
                      "defaultValue": "Hot",
                      "allowedValues": [
                        "Hot",
                        "Cool",
                        "Premium"
                      ]
                    },
                    "allowBlobPublicAccess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowCrossTenantReplication": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowSharedKeyAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "defaultToOAuthAuthentication": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deleteRetentionPolicy": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dnsEndpointType": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "AzureDnsZone",
                        "Standard"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2"
                    },
                    "minimumTlsVersion": {
                      "type": "string",
                      "defaultValue": "TLS1_2"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Standard_LRS"
                      }
                    },
                    "privateEndpointSubnetId": {
                      "type": "string"
                    },
                    "linkPrivateEndpointToPrivateDns": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDnsZoneResourceGroup": {
                      "type": "string"
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "shares": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "queues": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "analysisServicesServers": "as",
                      "apiManagementService": "apim-",
                      "appConfigurationConfigurationStores": "appcs-",
                      "appManagedEnvironments": "cae-",
                      "appContainerApps": "ca-",
                      "authorizationPolicyDefinitions": "policy-",
                      "automationAutomationAccounts": "aa-",
                      "blueprintBlueprints": "bp-",
                      "blueprintBlueprintsArtifacts": "bpa-",
                      "cacheRedis": "redis-",
                      "cdnProfiles": "cdnp-",
                      "cdnProfilesEndpoints": "cdne-",
                      "cognitiveServicesAccounts": "cog-",
                      "cognitiveServicesFormRecognizer": "cog-fr-",
                      "cognitiveServicesTextAnalytics": "cog-ta-",
                      "computeAvailabilitySets": "avail-",
                      "computeCloudServices": "cld-",
                      "computeDiskEncryptionSets": "des",
                      "computeDisks": "disk",
                      "computeDisksOs": "osdisk",
                      "computeGalleries": "gal",
                      "computeSnapshots": "snap-",
                      "computeVirtualMachines": "vm",
                      "computeVirtualMachineScaleSets": "vmss-",
                      "containerInstanceContainerGroups": "ci",
                      "containerRegistryRegistries": "cr",
                      "containerServiceManagedClusters": "aks-",
                      "databricksWorkspaces": "dbw-",
                      "dataFactoryFactories": "adf-",
                      "dataLakeAnalyticsAccounts": "dla",
                      "dataLakeStoreAccounts": "dls",
                      "dataMigrationServices": "dms-",
                      "dBforMySQLServers": "mysql-",
                      "dBforPostgreSQLServers": "psql-",
                      "devicesIotHubs": "iot-",
                      "devicesProvisioningServices": "provs-",
                      "devicesProvisioningServicesCertificates": "pcert-",
                      "documentDBDatabaseAccounts": "cosmos-",
                      "eventGridDomains": "evgd-",
                      "eventGridDomainsTopics": "evgt-",
                      "eventGridEventSubscriptions": "evgs-",
                      "eventHubNamespaces": "evhns-",
                      "eventHubNamespacesEventHubs": "evh-",
                      "hdInsightClustersHadoop": "hadoop-",
                      "hdInsightClustersHbase": "hbase-",
                      "hdInsightClustersKafka": "kafka-",
                      "hdInsightClustersMl": "mls-",
                      "hdInsightClustersSpark": "spark-",
                      "hdInsightClustersStorm": "storm-",
                      "hybridComputeMachines": "arcs-",
                      "insightsActionGroups": "ag-",
                      "insightsComponents": "appi-",
                      "keyVaultVaults": "kv-",
                      "kubernetesConnectedClusters": "arck",
                      "kustoClusters": "dec",
                      "kustoClustersDatabases": "dedb",
                      "logicIntegrationAccounts": "ia-",
                      "logicWorkflows": "logic-",
                      "machineLearningServicesWorkspaces": "mlw-",
                      "managedIdentityUserAssignedIdentities": "id-",
                      "managementManagementGroups": "mg-",
                      "migrateAssessmentProjects": "migr-",
                      "networkApplicationGateways": "agw-",
                      "networkApplicationSecurityGroups": "asg-",
                      "networkAzureFirewalls": "afw-",
                      "networkBastionHosts": "bas-",
                      "networkConnections": "con-",
                      "networkDnsZones": "dnsz-",
                      "networkExpressRouteCircuits": "erc-",
                      "networkFirewallPolicies": "afwp-",
                      "networkFirewallPoliciesWebApplication": "waf",
                      "networkFirewallPoliciesRuleGroups": "wafrg",
                      "networkFrontDoors": "fd-",
                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                      "networkLoadBalancersExternal": "lbe-",
                      "networkLoadBalancersInternal": "lbi-",
                      "networkLoadBalancersInboundNatRules": "rule-",
                      "networkLocalNetworkGateways": "lgw-",
                      "networkNatGateways": "ng-",
                      "networkNetworkInterfaces": "nic-",
                      "networkNetworkSecurityGroups": "nsg-",
                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                      "networkNetworkWatchers": "nw-",
                      "networkPrivateDnsZones": "pdnsz-",
                      "networkPrivateLinkServices": "pl-",
                      "networkPublicIPAddresses": "pip-",
                      "networkPublicIPPrefixes": "ippre-",
                      "networkRouteFilters": "rf-",
                      "networkRouteTables": "rt-",
                      "networkRouteTablesRoutes": "udr-",
                      "networkTrafficManagerProfiles": "traf-",
                      "networkVirtualNetworkGateways": "vgw-",
                      "networkVirtualNetworks": "vnet-",
                      "networkVirtualNetworksSubnets": "snet-",
                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                      "networkVirtualWans": "vwan-",
                      "networkVpnGateways": "vpng-",
                      "networkVpnGatewaysVpnConnections": "vcn-",
                      "networkVpnGatewaysVpnSites": "vst-",
                      "notificationHubsNamespaces": "ntfns-",
                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                      "operationalInsightsWorkspaces": "log-",
                      "portalDashboards": "dash-",
                      "powerBIDedicatedCapacities": "pbi-",
                      "purviewAccounts": "pview-",
                      "recoveryServicesVaults": "rsv-",
                      "resourcesResourceGroups": "rg-",
                      "searchSearchServices": "srch-",
                      "serviceBusNamespaces": "sb-",
                      "serviceBusNamespacesQueues": "sbq-",
                      "serviceBusNamespacesTopics": "sbt-",
                      "serviceEndPointPolicies": "se-",
                      "serviceFabricClusters": "sf-",
                      "signalRServiceSignalR": "sigr",
                      "sqlManagedInstances": "sqlmi-",
                      "sqlServers": "sql-",
                      "sqlServersDataWarehouse": "sqldw-",
                      "sqlServersDatabases": "sqldb-",
                      "sqlServersDatabasesStretch": "sqlstrdb-",
                      "storageStorageAccounts": "st",
                      "storageStorageAccountsVm": "stvm",
                      "storSimpleManagers": "ssimp",
                      "streamAnalyticsCluster": "asa-",
                      "synapseWorkspaces": "syn",
                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                      "timeSeriesInsightsEnvironments": "tsi-",
                      "webServerFarms": "plan-",
                      "webSitesAppService": "app-",
                      "webSitesAppServiceEnvironment": "ase-",
                      "webSitesFunctions": "func-",
                      "webStaticSites": "stapp-"
                    },
                    "storageFileDataPrivilegedContributorRoleId": "69566ab7-960f-475b-8e7c-b3118f30c6bd",
                    "abbrs": "[variables('$fxv#0')]"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "container",
                        "count": "[length(parameters('containers'))]"
                      },
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
                      "properties": {
                        "publicAccess": "[coalesce(tryGet(parameters('containers')[copyIndex()], 'publicAccess'), 'None')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "share",
                        "count": "[length(parameters('shares'))]"
                      },
                      "condition": "[not(empty(parameters('shares')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('shares')[copyIndex()].name)]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "queue",
                        "count": "[length(parameters('queues'))]"
                      },
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('containers')))]",
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "properties": {
                        "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('shares')))]",
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('queues')))]",
                      "type": "Microsoft.Storage/storageAccounts/queueServices",
                      "apiVersion": "2023-05-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-file-endpoint', parameters('name')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-file-endpoint', parameters('name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-table-endpoint', parameters('name')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.table.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-table-endpoint', parameters('name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-queue-endpoint', parameters('name')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', format('privatelink.queue.{0}', environment().suffixes.storage))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-queue-endpoint', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2023-05-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "accessTier": "[parameters('accessTier')]",
                        "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                        "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                        "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                        "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                        "dnsEndpointType": "[parameters('dnsEndpointType')]",
                        "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "virtualNetworkRules": "[parameters('virtualNetworkRules')]",
                          "defaultAction": "Deny"
                        },
                        "publicNetworkAccess": "[if(empty(parameters('virtualNetworkRules')), parameters('publicNetworkAccess'), 'Enabled')]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-endpoint', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-connection', parameters('name'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                              "groupIds": [
                                "blob"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-file-endpoint', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-file-connection', parameters('name'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                              "groupIds": [
                                "file"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-table-endpoint', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-table-connection', parameters('name'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                              "groupIds": [
                                "table"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-queue-endpoint', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('privateEndpointSubnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-queue-connection', parameters('name'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]",
                              "groupIds": [
                                "queue"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-01-31",
                      "name": "[format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))]",
                      "location": "[parameters('location')]"
                    },
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('name'))]",
                      "name": "[guid(subscription().id, resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), variables('storageFileDataPrivilegedContributorRoleId'))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageFileDataPrivilegedContributorRoleId'))]",
                        "principalType": "ServicePrincipal",
                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), '2023-01-31').principalId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name')))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('keyVaultName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-cs-secret', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "keyVaultSecretName": {
                            "value": "[format('{0}-cs', parameters('name'))]"
                          },
                          "keyVaultSecretValue": {
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('name'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').keys[0].value)]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "2738895811534356834"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "keyVaultSecretName": {
                              "type": "string"
                            },
                            "keyVaultSecretValue": {
                              "type": "securestring"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2023-07-01",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                              "properties": {
                                "value": "[parameters('keyVaultSecretValue')]"
                              }
                            }
                          ],
                          "outputs": {
                            "secretName": {
                              "type": "string",
                              "value": "[parameters('keyVaultSecretName')]"
                            },
                            "secretUri": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2023-05-01').primaryEndpoints]"
                    },
                    "connectionStringSecretUri": {
                      "type": "string",
                      "value": "[if(empty(parameters('keyVaultName')), '', reference(resourceId('Microsoft.Resources/deployments', format('{0}-cs-secret', parameters('name'))), '2022-09-01').outputs.secretUri.value)]"
                    },
                    "scriptRunnerIdentityId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name')))]"
                    },
                    "scriptRunnerPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), '2023-01-31').principalId]"
                    },
                    "scriptRunnerClientId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}{1}-scriptrunner', variables('abbrs').managedIdentityUserAssignedIdentities, parameters('name'))), '2023-01-31').clientId]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionAppName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "runFromPackage": {
                    "value": "[parameters('runFromPackage')]"
                  },
                  "appServiceName": {
                    "value": "[parameters('functionAppName')]"
                  },
                  "useExistingAppServicePlan": {
                    "value": "[parameters('useExistingAppServicePlan')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "identityName": {
                    "value": "[parameters('identityName')]"
                  },
                  "identityType": {
                    "value": "[parameters('identityType')]"
                  },
                  "appServicePlanName": {
                    "value": "[parameters('appServicePlanName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "sku": {
                    "value": "[parameters('sku')]"
                  },
                  "kind": {
                    "value": "functionapp,linux"
                  },
                  "containerImageName": {
                    "value": "[parameters('containerImageName')]"
                  },
                  "containerImageTag": {
                    "value": "[parameters('containerImageTag')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('WEBSITE_CONTENTSHARE', variables('functionContentShareName')))]"
                  },
                  "inboundSubnetResourceId": {
                    "value": "[parameters('inboundSubnetResourceId')]"
                  },
                  "outboundSubnetResourceId": {
                    "value": "[parameters('outboundSubnetResourceId')]"
                  },
                  "linkPrivateEndpointToPrivateDns": {
                    "value": "[parameters('linkPrivateEndpointToPrivateDns')]"
                  },
                  "privateDnsZoneResourceGroup": {
                    "value": "[parameters('privateDnsZoneResourceGroup')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "storageAccountName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('func-storage-{0}', parameters('functionAppName'))), '2022-09-01').outputs.name.value]"
                  },
                  "zoneRedundant": {
                    "value": "[parameters('zoneRedundant')]"
                  },
                  "numberOfWorkers": "[if(parameters('zoneRedundant'), createObject('value', 3), createObject('value', -1))]",
                  "authAllowedRedirectUrls": {
                    "value": "[parameters('authAllowedRedirectUrls')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12582674571295286292"
                    }
                  },
                  "parameters": {
                    "appServiceName": {
                      "type": "string"
                    },
                    "appServicePlanName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "useExistingAppServicePlan": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "identityType": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned"
                      ]
                    },
                    "identityName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "runtimeName": {
                      "type": "string",
                      "defaultValue": "python",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "defaultValue": "3.11"
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerImageTag": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux",
                      "allowedValues": [
                        "functionapp,linux",
                        "app,linux"
                      ]
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "authClientId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "authClientSecret": {
                      "type": "securestring",
                      "defaultValue": ""
                    },
                    "authIssuerUri": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "authAllowedRedirectUrls": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "authUnauthenticatedAction": {
                      "type": "string",
                      "defaultValue": "RedirectToLoginPage",
                      "allowedValues": [
                        "AllowAnonymous",
                        "RedirectToLoginPage",
                        "Return401",
                        "Return403"
                      ]
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[contains(parameters('kind'), 'linux')]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "elasticWebAppScaleLimit": {
                      "type": "int",
                      "defaultValue": "[parameters('functionAppScaleLimit')]"
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "runFromPackage": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "ftpsState": {
                      "type": "string",
                      "defaultValue": "FtpsOnly"
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "inboundSubnetResourceId": {
                      "type": "string"
                    },
                    "outboundSubnetResourceId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "zoneRedundant": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "linkPrivateEndpointToPrivateDns": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateDnsZoneResourceGroup": {
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "allowedValues": [
                        "Enabled",
                        "Disabled"
                      ]
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "B1",
                      "allowedValues": [
                        "B1",
                        "B2",
                        "EP3",
                        "P0V3",
                        "P1V3",
                        "P2V3",
                        "P3V3",
                        "Y1"
                      ]
                    }
                  },
                  "variables": {
                    "containerRegistryServerUrl": "[if(empty(parameters('containerRegistryName')), 'https://mcr.microsoft.com', format('https://{0}.azurecr.io', parameters('containerRegistryName')))]",
                    "containerImageNameAndTag": "[if(or(empty(parameters('containerImageName')), empty(parameters('containerImageTag'))), 'azuredocs/containerapps-helloworld:latest', format('{0}:{1}', parameters('containerImageName'), parameters('containerImageTag')))]",
                    "linuxFxVersion": "[if(empty(parameters('containerRegistryName')), parameters('runtimeNameAndVersion'), format('DOCKER|{0}/{1}', variables('containerRegistryServerUrl'), variables('containerImageNameAndTag')))]",
                    "appLogCategories": [
                      "AppServiceAppLogs",
                      "AppServiceConsoleLogs",
                      "AppServiceHTTPLogs",
                      "AppServicePlatformLogs",
                      "AppServiceAuthenticationLogs"
                    ],
                    "functionAppLogCategories": [
                      "FunctionAppLogs",
                      "AppServiceAuthenticationLogs"
                    ],
                    "logCategories": "[if(contains(parameters('kind'), 'functionapp'), variables('functionAppLogCategories'), variables('appLogCategories'))]",
                    "diagSettings": "[map(variables('logCategories'), lambda('log', createObject('enabled', true(), 'category', lambdaVariables('log'))))]",
                    "allowedAudiences": "[union(createArray(format('https://{0}.azurewebsites.net', parameters('appServiceName'))), parameters('authAllowedRedirectUrls'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'appsettings')]",
                      "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey, 'APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString, 'ApplicationInsightsAgent_EXTENSION_VERSION', if(contains(parameters('kind'), 'linux'), '~3', '~2')), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri), createObject()), if(not(empty(parameters('authClientSecret'))), createObject('AUTH_CLIENT_SECRET', parameters('authClientSecret')), createObject()), if(equals(parameters('kind'), 'functionapp,linux'), createObject('FUNCTIONS_EXTENSION_VERSION', '~4', 'AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value), 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-05-01').keys[0].value)), createObject()), if(and(equals(parameters('kind'), 'functionapp,linux'), empty(parameters('containerRegistryName'))), createObject('FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')), createObject()), if(not(empty(parameters('containerRegistryName'))), createObject('WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'false', 'DOCKER_REGISTRY_SERVER_URL', variables('containerRegistryServerUrl'), 'DOCKER_REGISTRY_SERVER_USERNAME', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').username, ''), 'DOCKER_REGISTRY_SERVER_PASSWORD', if(reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').adminUserEnabled, listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-11-01-preview').passwords[0].value, '')), createObject()), createObject('WEBSITE_RUN_FROM_PACKAGE', if(parameters('runFromPackage'), 1, 0)), if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject('USER_ASSIGNED_MANAGED_IDENTITY_CLIENT_ID', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').clientId), createObject()))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('kind'), 'app,linux')]",
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'logs')]",
                      "properties": {
                        "applicationLogs": {
                          "fileSystem": {
                            "level": "Verbose"
                          }
                        },
                        "detailedErrorMessages": {
                          "enabled": true
                        },
                        "failedRequestsTracing": {
                          "enabled": true
                        },
                        "httpLogs": {
                          "fileSystem": {
                            "enabled": true,
                            "retentionInDays": 1,
                            "retentionInMb": 35
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                        "[resourceId('Microsoft.Web/sites/config', parameters('appServiceName'), 'appsettings')]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('authClientId')))]",
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'authsettingsV2')]",
                      "properties": {
                        "httpSettings": {
                          "requireHttps": true,
                          "forwardProxy": {
                            "convention": "Standard"
                          }
                        },
                        "globalValidation": {
                          "requireAuthentication": true,
                          "unauthenticatedClientAction": "[parameters('authUnauthenticatedAction')]",
                          "redirectToProvider": "azureactivedirectory"
                        },
                        "identityProviders": {
                          "azureActiveDirectory": {
                            "enabled": true,
                            "registration": {
                              "clientId": "[parameters('authClientId')]",
                              "clientSecretSettingName": "AUTH_CLIENT_SECRET",
                              "openIdIssuer": "[parameters('authIssuerUri')]"
                            },
                            "validation": {
                              "allowedAudiences": "[variables('allowedAudiences')]"
                            }
                          }
                        },
                        "login": {
                          "preserveUrlFragmentsForLogins": true,
                          "tokenStore": {
                            "enabled": true
                          },
                          "allowedExternalRedirectUrls": "[variables('allowedAudiences')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('kind'), 'functionapp,linux')]",
                      "type": "Microsoft.Web/sites/networkConfig",
                      "apiVersion": "2023-12-01",
                      "name": "[format('{0}/{1}', parameters('appServiceName'), 'virtualNetwork')]",
                      "properties": {
                        "subnetResourceId": "[parameters('outboundSubnetResourceId')]",
                        "swiftSupported": true
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('appServiceName')), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-endpoint', parameters('appServiceName')))]"
                      ]
                    },
                    {
                      "condition": "[not(parameters('useExistingAppServicePlan'))]",
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2023-12-01",
                      "name": "[parameters('appServicePlanName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('sku')]",
                        "capacity": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), 1)]"
                      },
                      "kind": "linux",
                      "properties": {
                        "reserved": true,
                        "zoneRedundant": "[parameters('zoneRedundant')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2023-12-01",
                      "name": "[parameters('appServiceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "identity": {
                        "type": "[parameters('identityType')]",
                        "userAssignedIdentities": "[if(and(not(empty(parameters('identityName'))), equals(parameters('identityType'), 'UserAssigned')), createObject(format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))), createObject()), null())]"
                      },
                      "properties": {
                        "serverFarmId": "[if(parameters('useExistingAppServicePlan'), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')), resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName')))]",
                        "virtualNetworkSubnetId": "[parameters('outboundSubnetResourceId')]",
                        "reserved": "[equals(parameters('kind'), 'functionapp,linux')]",
                        "vnetRouteAllEnabled": true,
                        "vnetContentShareEnabled": true,
                        "vnetImagePullEnabled": true,
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "keyVaultReferenceIdentity": "[if(equals(parameters('identityType'), 'UserAssigned'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), null())]",
                        "siteConfig": {
                          "linuxFxVersion": "[variables('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "http20Enabled": true,
                          "minTlsVersion": "1.2",
                          "scmMinTlsVersion": "1.2",
                          "ftpsState": "[parameters('ftpsState')]",
                          "appCommandLine": "[parameters('appCommandLine')]",
                          "ipSecurityRestrictionsDefaultAction": "Deny",
                          "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                          "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                          "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                          "healthCheckPath": "[parameters('healthCheckPath')]",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                          },
                          "elasticWebAppScaleLimit": "[if(not(equals(parameters('elasticWebAppScaleLimit'), -1)), parameters('elasticWebAppScaleLimit'), null())]"
                        },
                        "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                        "httpsOnly": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('applicationInsightsName')))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.Web/sites/{0}', parameters('appServiceName'))]",
                      "name": "default",
                      "properties": {
                        "workspaceId": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').WorkspaceResourceId]",
                        "logs": "[variables('diagSettings')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2024-01-01",
                      "name": "[format('{0}-endpoint', parameters('appServiceName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('inboundSubnetResourceId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[format('{0}-connection', parameters('appServiceName'))]",
                            "properties": {
                              "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
                              "groupIds": [
                                "sites"
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    },
                    {
                      "condition": "[and(not(empty(parameters('containerRegistryName'))), not(equals(parameters('identityType'), 'None')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-registry-access', deployment().name)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerRegistryName": {
                            "value": "[parameters('containerRegistryName')]"
                          },
                          "principalId": "[if(equals(parameters('identityType'), 'UserAssigned'), createObject('value', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId), createObject('value', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "7188722871971346321"
                            },
                            "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
                          },
                          "parameters": {
                            "containerRegistryName": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
                          },
                          "resources": [
                            {
                              "condition": "[not(empty(parameters('containerRegistryName')))]",
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
                              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
                              "properties": {
                                "roleDefinitionId": "[variables('acrPullRole')]",
                                "principalType": "ServicePrincipal",
                                "principalId": "[parameters('principalId')]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(equals(parameters('identityType'), 'SystemAssigned'), reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01', 'full').identity.principalId, if(equals(parameters('identityType'), 'UserAssigned'), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31').principalId, ''))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('appServiceName')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2023-12-01').defaultHostName)]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('func-storage-{0}', parameters('functionAppName')))]"
              ]
            }
          ],
          "outputs": {
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('functionAppName')), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('functionAppName')), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'indexing-function-identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-service",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('searchServiceName'))), createObject('value', parameters('searchServiceName')), createObject('value', format('{0}{1}', variables('abbrs').searchSearchServices, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('searchServiceResourceGroupLocation')]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.defaultSubnetResourceId.value]"
          },
          "linkPrivateEndpointToPrivateDns": {
            "value": "[variables('isDev')]"
          },
          "privateDnsZoneResourceGroup": {
            "value": "[parameters('privateDnsZonesResourceGroupName')]"
          },
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "authOptions": {
            "value": {
              "aadOrApiKey": {
                "aadAuthFailureMode": "http401WithBearerChallenge"
              }
            }
          },
          "sku": {
            "value": {
              "name": "[if(not(empty(parameters('searchServiceSkuName'))), parameters('searchServiceSkuName'), 'standard')]"
            }
          },
          "semanticSearch": "[if(variables('isProd'), createObject('value', 'standard'), createObject('value', 'free'))]",
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "replicas": "[if(variables('isProd'), createObject('value', 3), createObject('value', 1))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13177162270895874483"
            }
          },
          "definitions": {
            "IpRule": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "linkPrivateEndpointToPrivateDns": {
              "type": "bool",
              "defaultValue": true
            },
            "privateDnsZoneResourceGroup": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "ipRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpRule"
              },
              "defaultValue": []
            },
            "replicas": {
              "type": "int",
              "defaultValue": 1
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "standard"
              }
            },
            "authOptions": {
              "type": "object",
              "defaultValue": {}
            },
            "semanticSearch": {
              "type": "string",
              "defaultValue": "disabled"
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "resources": {
            "privateEndpoint::link": {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', format('{0}-endpoint', parameters('name')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config",
                    "properties": {
                      "privateDnsZoneId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('privateDnsZoneResourceGroup')), 'Microsoft.Network/privateDnsZones', 'privatelink.search.windows.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "privateEndpoint"
              ]
            },
            "search": {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2024-06-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "authOptions": "[parameters('authOptions')]",
                "disableLocalAuth": false,
                "disabledDataExfiltrationOptions": [],
                "encryptionWithCmk": {
                  "enforcement": "Unspecified"
                },
                "hostingMode": "default",
                "networkRuleSet": {
                  "bypass": "AzureServices",
                  "ipRules": "[parameters('ipRules')]"
                },
                "partitionCount": 1,
                "publicNetworkAccess": "Disabled",
                "replicaCount": "[parameters('replicas')]",
                "semanticSearch": "[parameters('semanticSearch')]"
              },
              "sku": "[parameters('sku')]"
            },
            "privateEndpoint": {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-endpoint', parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', parameters('name'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]",
                      "groupIds": [
                        "searchService"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "search"
              ]
            },
            "privateDnsZone": {
              "condition": "[parameters('linkPrivateEndpointToPrivateDns')]",
              "existing": true,
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "resourceGroup": "[parameters('privateDnsZoneResourceGroup')]",
              "name": "privatelink.search.windows.net"
            },
            "adminKeySecret": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('accountKeySecret-{0}', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "keyVaultSecretName": {
                    "value": "[format('{0}-key', parameters('name'))]"
                  },
                  "keyVaultSecretValue": {
                    "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('name')), '2024-06-01-preview').primaryKey]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2738895811534356834"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultSecretName": {
                      "type": "string"
                    },
                    "keyVaultSecretValue": {
                      "type": "securestring"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultSecretName'))]",
                      "properties": {
                        "value": "[parameters('keyVaultSecretValue')]"
                      }
                    }
                  ],
                  "outputs": {
                    "secretName": {
                      "type": "string",
                      "value": "[parameters('keyVaultSecretName')]"
                    },
                    "secretUri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('keyVaultSecretName')), '2023-07-01').secretUri]"
                    }
                  }
                }
              },
              "dependsOn": [
                "search"
              ]
            }
          },
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
            },
            "endpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net/', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "skuName": {
              "type": "string",
              "value": "[parameters('sku').name]"
            },
            "adminKeySecretUri": {
              "type": "string",
              "value": "[reference('adminKeySecret').outputs.secretUri.value]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference('search', '2024-06-01-preview', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'keyvault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "app-gateway",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "gatewaySubnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.appGatewaySubnetResourceId.value]"
          },
          "aiName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "apimName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim'), '2022-09-01').outputs.apiManagementServiceName.value]"
          },
          "gatewayName": "[if(not(empty(parameters('gatewayName'))), createObject('value', parameters('gatewayName')), createObject('value', format('{0}{1}', variables('abbrs').networkApplicationGateways, variables('resourceToken'))))]",
          "tags": {
            "value": "[variables('unionTags')]"
          },
          "publicIPName": {
            "value": "[format('{0}{1}', variables('abbrs').networkPublicIPAddresses, variables('resourceToken'))]"
          },
          "domainNameLabel": {
            "value": "[variables('resourceName')]"
          },
          "frontendAppName": {
            "value": "[variables('backendAppServiceName')]"
          },
          "gatewayBase64EncodedCertificate": {
            "value": "[parameters('gatewayBase64EncodedCertificate')]"
          },
          "gatewayCertificatePassword": {
            "value": "[parameters('gatewayCertificatePassword')]"
          },
          "maxCapacity": "[if(variables('isProd'), createObject('value', 5), createObject('value', 2))]",
          "enableZoneRedundancy": {
            "value": "[variables('isProd')]"
          },
          "enablePreventionMode": {
            "value": "[parameters('gatewayPreventionMode')]"
          },
          "allowedIps": {
            "value": "[parameters('gatewayAllowedIps')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4951017041359781855"
            }
          },
          "parameters": {
            "apimName": {
              "type": "string"
            },
            "frontendAppName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "publicIPName": {
              "type": "string"
            },
            "aiName": {
              "type": "string"
            },
            "domainNameLabel": {
              "type": "string"
            },
            "gatewaySubnetResourceId": {
              "type": "string"
            },
            "gatewayName": {
              "type": "string"
            },
            "enableZoneRedundancy": {
              "type": "bool",
              "defaultValue": true
            },
            "enablePreventionMode": {
              "type": "bool",
              "defaultValue": false
            },
            "allowedIps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "defaultValue": []
            },
            "gatewayBase64EncodedCertificate": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "Used by Application Gateway, the Base64 encoded CER/CRT certificate corresponding to the root certificate for Application Gateway."
              }
            },
            "gatewayCertificatePassword": {
              "type": "securestring",
              "defaultValue": ""
            },
            "maxCapacity": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The number of Azure Application Gateway capacity units to provision. This setting has a direct impact on consumption cost and is recommended to be left at the default value of 1"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": {
            "appInsight": {
              "existing": true,
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('aiName')]"
            },
            "applicationGatewayPublicIpAddress": {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-09-01",
              "name": "[parameters('publicIPName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "zones": "[if(parameters('enableZoneRedundancy'), createArray('1', '2', '3'), createArray())]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                  "domainNameLabel": "[parameters('domainNameLabel')]"
                }
              }
            },
            "firewallPolicy": {
              "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}-waf-policy', parameters('gatewayName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "policySettings": {
                  "state": "Enabled",
                  "mode": "[if(parameters('enablePreventionMode'), 'Prevention', 'Detection')]",
                  "requestBodyCheck": true,
                  "maxRequestBodySizeInKb": 128,
                  "fileUploadLimitInMb": 100,
                  "fileUploadEnforcement": true
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "OWASP",
                      "ruleSetVersion": "3.2",
                      "ruleGroupOverrides": []
                    }
                  ]
                },
                "customRules": "[if(empty(parameters('allowedIps')), createArray(), createArray(createObject('priority', 5, 'ruleType', 'MatchRule', 'action', if(parameters('enablePreventionMode'), 'Allow', 'Log'), 'name', 'allowIps', 'state', 'Enabled', 'matchConditions', createArray(createObject('matchValues', parameters('allowedIps'), 'matchVariables', createArray(createObject('variableName', 'RemoteAddr')), 'operator', 'IPMatch', 'negationConditon', false()))), createObject('priority', 10, 'ruleType', 'MatchRule', 'action', if(parameters('enablePreventionMode'), 'Block', 'Log'), 'name', 'blockAll', 'state', 'Enabled', 'matchConditions', createArray(createObject('matchValues', parameters('allowedIps'), 'matchVariables', createArray(createObject('variableName', 'RemoteAddr')), 'operator', 'IPMatch', 'negationConditon', true())))))]"
              }
            },
            "appGateway": {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2024-01-01",
              "name": "[parameters('gatewayName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "zones": "[if(parameters('enableZoneRedundancy'), createArray('1', '2', '3'), createArray())]",
              "properties": {
                "sku": {
                  "name": "WAF_v2",
                  "tier": "WAF_v2"
                },
                "autoscaleConfiguration": {
                  "minCapacity": 1,
                  "maxCapacity": "[if(less(parameters('maxCapacity'), 2), 2, parameters('maxCapacity'))]"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('gatewaySubnetResourceId')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appGwPublicFrontendIp",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "port_80",
                    "properties": {
                      "port": 80
                    }
                  },
                  {
                    "name": "port_443",
                    "properties": {
                      "port": 443
                    }
                  }
                ],
                "sslCertificates": "[if(and(not(empty(parameters('gatewayBase64EncodedCertificate'))), not(empty(parameters('gatewayCertificatePassword')))), createArray(createObject('name', 'appGatewayCert', 'properties', createObject('data', parameters('gatewayBase64EncodedCertificate'), 'password', parameters('gatewayCertificatePassword')))), createArray())]",
                "backendAddressPools": [
                  {
                    "name": "webappBackEnd",
                    "properties": {
                      "backendAddresses": [
                        {
                          "fqdn": "[format('{0}.azurewebsites.net', parameters('frontendAppName'))]"
                        }
                      ]
                    }
                  },
                  {
                    "name": "gatewayBackEnd",
                    "properties": {
                      "backendAddresses": [
                        {
                          "fqdn": "[format('{0}.azure-api.net', parameters('apimName'))]"
                        }
                      ]
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "webapp-http-setting",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled",
                      "hostName": "[format('{0}.azurewebsites.net', parameters('frontendAppName'))]",
                      "pickHostNameFromBackendAddress": false,
                      "requestTimeout": 20,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('gatewayName'), 'webapp-http-probe')]"
                      }
                    }
                  },
                  {
                    "name": "webapp-https-setting",
                    "properties": {
                      "port": 443,
                      "protocol": "Https",
                      "cookieBasedAffinity": "Disabled",
                      "hostName": "[format('{0}.azurewebsites.net', parameters('frontendAppName'))]",
                      "pickHostNameFromBackendAddress": false,
                      "requestTimeout": 20,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('gatewayName'), 'webapp-https-probe')]"
                      }
                    }
                  },
                  {
                    "name": "apim-http-setting",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled",
                      "hostName": "[format('{0}.azure-api.net', parameters('apimName'))]",
                      "pickHostNameFromBackendAddress": false,
                      "requestTimeout": 120,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('gatewayName'), 'apim-http-probe')]"
                      }
                    }
                  },
                  {
                    "name": "apim-https-setting",
                    "properties": {
                      "port": 443,
                      "protocol": "Https",
                      "cookieBasedAffinity": "Disabled",
                      "hostName": "[format('{0}.azure-api.net', parameters('apimName'))]",
                      "pickHostNameFromBackendAddress": false,
                      "requestTimeout": 120,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('gatewayName'), 'apim-https-probe')]"
                      }
                    }
                  }
                ],
                "httpListeners": "[union(createArray(createObject('name', 'port-80-listener', 'properties', createObject('frontendIPConfiguration', createObject('id', resourceId('Microsoft.Network/applicationGateways/frontEndIPConfigurations', parameters('gatewayName'), 'appGwPublicFrontendIp')), 'frontendPort', createObject('id', resourceId('Microsoft.Network/applicationGateways/frontEndPorts', parameters('gatewayName'), 'port_80')), 'protocol', 'Http', 'requireServerNameIndication', false()))), if(and(not(empty(parameters('gatewayBase64EncodedCertificate'))), not(empty(parameters('gatewayCertificatePassword')))), createArray(createObject('name', 'port-443-listener', 'properties', createObject('frontendIPConfiguration', createObject('id', resourceId('Microsoft.Network/applicationGateways/frontEndIPConfigurations', parameters('gatewayName'), 'appGwPublicFrontendIp')), 'frontendPort', createObject('id', resourceId('Microsoft.Network/applicationGateways/frontEndPorts', parameters('gatewayName'), 'port_443')), 'protocol', 'Https', 'requireServerNameIndication', false(), 'sslCertificate', createObject('id', resourceId('Microsoft.Network/applicationGateways/sslCertificates', parameters('gatewayName'), 'appGatewayCert'))))), createArray()))]",
                "requestRoutingRules": "[union(createArray(createObject('name', 'default-http-routing-rule', 'properties', createObject('ruleType', 'PathBasedRouting', 'priority', 1, 'httpListener', createObject('id', resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('gatewayName'), 'port-80-listener')), 'urlPathMap', createObject('id', resourceId('Microsoft.Network/applicationGateways/urlPathMaps', parameters('gatewayName'), 'http-path-map'))))), if(and(not(empty(parameters('gatewayBase64EncodedCertificate'))), not(empty(parameters('gatewayCertificatePassword')))), createArray(createObject('name', 'default-https-routing-rule', 'properties', createObject('ruleType', 'PathBasedRouting', 'priority', 2, 'httpListener', createObject('id', resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('gatewayName'), 'port-443-listener')), 'urlPathMap', createObject('id', resourceId('Microsoft.Network/applicationGateways/urlPathMaps', parameters('gatewayName'), 'https-path-map'))))), createArray()))]",
                "urlPathMaps": [
                  {
                    "name": "http-path-map",
                    "properties": {
                      "defaultBackendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('gatewayName'), 'webappBackEnd')]"
                      },
                      "defaultBackendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('gatewayName'), 'webapp-http-setting')]"
                      },
                      "defaultRedirectConfiguration": null,
                      "defaultRewriteRuleSet": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/rewriteRuleSets', parameters('gatewayName'), 'easy-auth-rewrite-rule-set')]"
                      },
                      "pathRules": [
                        {
                          "name": "apim-http-path-rule",
                          "properties": {
                            "paths": [
                              "/api/*"
                            ],
                            "backendAddressPool": {
                              "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('gatewayName'), 'gatewayBackEnd')]"
                            },
                            "backendHttpSettings": {
                              "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('gatewayName'), 'apim-http-setting')]"
                            },
                            "rewriteRuleSet": {
                              "id": "[resourceId('Microsoft.Network/applicationGateways/rewriteRuleSets', parameters('gatewayName'), 'apim-rewrite-rule-set')]"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "https-path-map",
                    "properties": {
                      "defaultBackendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('gatewayName'), 'webappBackEnd')]"
                      },
                      "defaultBackendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('gatewayName'), 'webapp-https-setting')]"
                      },
                      "defaultRedirectConfiguration": null,
                      "defaultRewriteRuleSet": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/rewriteRuleSets', parameters('gatewayName'), 'easy-auth-rewrite-rule-set')]"
                      },
                      "pathRules": [
                        {
                          "name": "apim-https-path-rule",
                          "properties": {
                            "paths": [
                              "/api/*"
                            ],
                            "backendAddressPool": {
                              "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('gatewayName'), 'gatewayBackEnd')]"
                            },
                            "backendHttpSettings": {
                              "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('gatewayName'), 'apim-https-setting')]"
                            },
                            "rewriteRuleSet": {
                              "id": "[resourceId('Microsoft.Network/applicationGateways/rewriteRuleSets', parameters('gatewayName'), 'apim-rewrite-rule-set')]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "webapp-http-probe",
                    "properties": {
                      "protocol": "Http",
                      "host": "[format('{0}.azurewebsites.net', parameters('frontendAppName'))]",
                      "port": 80,
                      "path": "/",
                      "interval": 30,
                      "timeout": 120,
                      "unhealthyThreshold": 8,
                      "pickHostNameFromBackendHttpSettings": false,
                      "minServers": 0,
                      "match": {
                        "statusCodes": [
                          "200-399",
                          "401"
                        ]
                      }
                    }
                  },
                  {
                    "name": "webapp-https-probe",
                    "properties": {
                      "protocol": "Https",
                      "host": "[format('{0}.azurewebsites.net', parameters('frontendAppName'))]",
                      "port": 443,
                      "path": "/",
                      "interval": 30,
                      "timeout": 120,
                      "unhealthyThreshold": 8,
                      "pickHostNameFromBackendHttpSettings": false,
                      "minServers": 0,
                      "match": {
                        "statusCodes": [
                          "200-399",
                          "401"
                        ]
                      }
                    }
                  },
                  {
                    "name": "apim-http-probe",
                    "properties": {
                      "protocol": "Http",
                      "host": "[format('{0}.azure-api.net', parameters('apimName'))]",
                      "port": 80,
                      "path": "/status-0123456789abcdef",
                      "interval": 30,
                      "timeout": 120,
                      "unhealthyThreshold": 8,
                      "pickHostNameFromBackendHttpSettings": false,
                      "minServers": 0
                    }
                  },
                  {
                    "name": "apim-https-probe",
                    "properties": {
                      "protocol": "Https",
                      "host": "[format('{0}.azure-api.net', parameters('apimName'))]",
                      "port": 443,
                      "path": "/status-0123456789abcdef",
                      "interval": 30,
                      "timeout": 120,
                      "unhealthyThreshold": 8,
                      "pickHostNameFromBackendHttpSettings": false,
                      "minServers": 0
                    }
                  }
                ],
                "rewriteRuleSets": [
                  {
                    "name": "apim-rewrite-rule-set",
                    "properties": {
                      "rewriteRules": [
                        {
                          "ruleSequence": 100,
                          "conditions": [
                            {
                              "variable": "var_uri_path",
                              "pattern": "/api/(.+)",
                              "ignoreCase": true,
                              "negate": false
                            }
                          ],
                          "name": "removeApiPath",
                          "actionSet": {
                            "requestHeaderConfigurations": [],
                            "responseHeaderConfigurations": [],
                            "urlConfiguration": {
                              "modifiedPath": "/backend/{var_uri_path_1}",
                              "reroute": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "easy-auth-rewrite-rule-set",
                    "properties": {
                      "rewriteRules": [
                        {
                          "ruleSequence": 100,
                          "name": "add-forwarded-host-header",
                          "actionSet": {
                            "requestHeaderConfigurations": [
                              {
                                "headerName": "X-Forwarded-Host",
                                "headerValue": "{var_host}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', format('{0}-waf-policy', parameters('gatewayName')))]"
                }
              },
              "dependsOn": [
                "applicationGatewayPublicIpAddress",
                "firewallPolicy"
              ]
            },
            "appGatewaylogToAnalytics": {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/applicationGateways/{0}', parameters('gatewayName'))]",
              "name": "logToAnalytics",
              "properties": {
                "workspaceId": "[reference('appInsight').WorkspaceResourceId]",
                "logs": [
                  {
                    "category": "ApplicationGatewayAccessLog",
                    "enabled": true
                  },
                  {
                    "category": "ApplicationGatewayPerformanceLog",
                    "enabled": true
                  },
                  {
                    "category": "ApplicationGatewayFirewallLog",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "appGateway",
                "appInsight"
              ]
            }
          },
          "outputs": {
            "fqdn": {
              "type": "string",
              "value": "[format('{0}://{1}', if(empty(parameters('gatewayBase64EncodedCertificate')), 'http', 'https'), reference('applicationGatewayPublicIpAddress').dnsSettings.fqdn)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'apim')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vnetResourceGroupName')), 'Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "condition": "[and(and(parameters('assignRbacRoles'), parameters('deployOpenAi')), not(empty(parameters('principalId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-role-user",
      "resourceGroup": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesOpenAIUser]"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), not(empty(parameters('principalId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-role-user",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchIndexDataReader]"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), not(empty(parameters('principalId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-contrib-role-user",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageBlobDataContributor]"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), not(empty(parameters('principalId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-index-data-contrib-role-user",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchIndexDataContributor]"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), not(empty(parameters('principalId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-service-contrib-role-user",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchServiceContributor]"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), not(empty(parameters('principalId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "form-recognizer-role-user",
      "resourceGroup": "[if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesUser]"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-registry-backend-role",
      "resourceGroup": "[if(not(empty(parameters('containerRegistryResourceGroupName'))), parameters('containerRegistryResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "containerRegistryName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('containerRegistryResourceGroupName'))), parameters('containerRegistryResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'container-registry'), '2022-09-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "7188722871971346321"
            },
            "description": "Assigns ACR Pull permissions to access an Azure Container Registry."
          },
          "parameters": {
            "containerRegistryName": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            }
          },
          "variables": {
            "acrPullRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
          },
          "resources": [
            {
              "condition": "[not(empty(parameters('containerRegistryName')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), variables('acrPullRole'))]",
              "properties": {
                "roleDefinitionId": "[variables('acrPullRole')]",
                "principalType": "ServicePrincipal",
                "principalId": "[parameters('principalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('containerRegistryResourceGroupName'))), parameters('containerRegistryResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'container-registry')]"
      ]
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), parameters('deployOpenAi'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-role-backend",
      "resourceGroup": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesOpenAIUser]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[and(parameters('assignRbacRoles'), parameters('deployOpenAi'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-role-function",
      "resourceGroup": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesOpenAIUser]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-role-backend",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageBlobDataReader]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-contributor-role-backend",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageBlobDataContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "queue-contributor-role-backend",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageQueueDataContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "queue-contributor-role-function",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageQueueDataContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "queue-data-proc-role-function",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageQueueDataMessageProcessor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "queue-data-sender-role-function",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageQueueDataMessageSender]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-contributor-role-function",
      "resourceGroup": "[if(not(empty(parameters('storageResourceGroupName'))), parameters('storageResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').StorageBlobDataContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-role-backend",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchIndexDataReader]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-index-contributor-role-backend",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchIndexDataContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-contributor-role-backend",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchServiceContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-contributor-role-function",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchServiceContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-openai-contrib-role",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesOpenAIContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-openai-contrib-role-function",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesOpenAIContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-search-index-role",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchIndexDataReader]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-search-contrib-role",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchServiceContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault-role-backend",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').KeyVaultSecretsUser]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault-role-function",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').KeyVaultSecretsUser]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-index-data-contrib-role-function",
      "resourceGroup": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').SearchIndexDataContributor]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "form-recognizer-user-role-backend",
      "resourceGroup": "[if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesUser]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cognitive-user-role-function",
      "resourceGroup": "[if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CognitiveServicesUser]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos-role-backend",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CosmosDBOperator]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]"
      ]
    },
    {
      "condition": "[parameters('assignRbacRoles')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmos-role-function",
      "resourceGroup": "[variables('mainResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app'), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('azureRoles').CosmosDBOperator]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4114705839230096904"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'index-function-app')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('mainResourceGroupName'))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[variables('mainResourceGroupName')]"
    },
    "BACKEND_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'web'), '2022-09-01').outputs.uri.value]"
    },
    "AZURE_SEARCH_INDEX": {
      "type": "string",
      "value": "[parameters('searchIndexName')]"
    },
    "AZURE_SEARCH_SERVICE": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service'), '2022-09-01').outputs.name.value]"
    },
    "AZURE_SEARCH_SERVICE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))]"
    },
    "AZURE_SEARCH_SKU_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('searchServiceResourceGroupName'))), parameters('searchServiceResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'search-service'), '2022-09-01').outputs.skuName.value]"
    },
    "AZURE_SEARCH_USE_SEMANTIC_SEARCH": {
      "type": "bool",
      "value": "[parameters('searchUseSemanticSearch')]"
    },
    "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": {
      "type": "string",
      "value": "[parameters('searchSemanticSearchConfig')]"
    },
    "AZURE_SEARCH_TOP_K": {
      "type": "int",
      "value": "[parameters('searchTopK')]"
    },
    "AZURE_SEARCH_ENABLE_IN_DOMAIN": {
      "type": "bool",
      "value": "[parameters('searchEnableInDomain')]"
    },
    "AZURE_SEARCH_CONTENT_COLUMNS": {
      "type": "string",
      "value": "[parameters('searchContentColumns')]"
    },
    "AZURE_SEARCH_FILENAME_COLUMN": {
      "type": "string",
      "value": "[parameters('searchFilenameColumn')]"
    },
    "AZURE_SEARCH_TITLE_COLUMN": {
      "type": "string",
      "value": "[parameters('searchTitleColumn')]"
    },
    "AZURE_SEARCH_URL_COLUMN": {
      "type": "string",
      "value": "[parameters('searchUrlColumn')]"
    },
    "AZURE_OPENAI_RESOURCE": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01').outputs.name.value]"
    },
    "AZURE_OPENAI_RESOURCE_GROUP": {
      "type": "string",
      "value": "[if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))]"
    },
    "AZURE_OPENAI_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_OPENAI_MODEL": {
      "type": "string",
      "value": "[parameters('openAIModelDeploymentName')]"
    },
    "AZURE_OPENAI_MODEL_NAME": {
      "type": "string",
      "value": "[parameters('openAIModelName')]"
    },
    "AZURE_OPENAI_SKU_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('openAiResourceGroupName'))), parameters('openAiResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', 'openai'), '2022-09-01').outputs.skuName.value]"
    },
    "AZURE_OPENAI_EMBEDDING_NAME": {
      "type": "string",
      "value": "[parameters('openAIEmbeddingDeploymentName')]"
    },
    "AZURE_OPENAI_TEMPERATURE": {
      "type": "int",
      "value": "[parameters('openAITemperature')]"
    },
    "AZURE_OPENAI_TOP_P": {
      "type": "int",
      "value": "[parameters('openAITopP')]"
    },
    "AZURE_OPENAI_MAX_TOKENS": {
      "type": "int",
      "value": "[parameters('openAIMaxTokens')]"
    },
    "AZURE_OPENAI_STOP_SEQUENCE": {
      "type": "string",
      "value": "[parameters('openAIStopSequence')]"
    },
    "AZURE_OPENAI_SYSTEM_MESSAGE": {
      "type": "string",
      "value": "[parameters('openAISystemMessage')]"
    },
    "AZURE_OPENAI_STREAM": {
      "type": "bool",
      "value": "[parameters('openAIStream')]"
    },
    "AZURE_FORMRECOGNIZER_SERVICE": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', format('formrecognizer{0}', variables('resourceToken'))), '2022-09-01').outputs.name.value]"
    },
    "AZURE_FORMRECOGNIZER_RESOURCE_GROUP": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', format('formrecognizer{0}', variables('resourceToken'))), '2022-09-01').outputs.resourceGroup.value]"
    },
    "AZURE_FORMRECOGNIZER_SKU_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('formRecognizerResourceGroupName'))), parameters('formRecognizerResourceGroupName'), variables('mainResourceGroupName'))), 'Microsoft.Resources/deployments', format('formrecognizer{0}', variables('resourceToken'))), '2022-09-01').outputs.skuName.value]"
    },
    "AZURE_COSMOSDB_ACCOUNT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.accountName.value]"
    },
    "AZURE_COSMOSDB_DATABASE": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.databaseName.value]"
    },
    "AZURE_COSMOSDB_CONVERSATIONS_CONTAINER": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('mainResourceGroupName')), 'Microsoft.Resources/deployments', 'cosmos'), '2022-09-01').outputs.containerName.value]"
    },
    "AUTH_ISSUER_URI": {
      "type": "string",
      "value": "[variables('authIssuerUri')]"
    }
  }
}