name: Deploy Scraping Function

run-name: Build and Deploy Scraping Function to ${{ github.event.inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - uat
          - prd

permissions:
  contents: read
  id-token: write

env:
  CONTAINER_IMAGE_NAME: "scraping-function"
  WORKING_DIR: "${{ github.workspace }}/app/service/scraping/sitemap/"
jobs:
  deploy_dev:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev' }}
    runs-on: ubuntu-latest
    environment: dev
    name: Build and Deploy Scraping Function to Dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - uses: azure/login@v2.1.0
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: ./.github/actions/acr-build-deploy
        name: Build and Deploy to ACR
        id: acr-build-deploy
        with:
          container-registry-name: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
          resource-group: ${{ vars.RG_NAME }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          image-name: ${{ env.CONTAINER_IMAGE_NAME }}
          image-tag: ${{ github.sha }}
          working-dir: ${{ env.WORKING_DIR }}

      - name: Update Function App with New Image
        uses: ./.github/actions/functions-deploy
        with:
          functionapp-name: ${{ vars.SCRAPING_FUNCTION_APP_NAME }}
          resource-group: ${{ vars.RG_NAME }}
          image: ${{ steps.acr-build-deploy.outputs.image }}

  deploy_uat:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'uat' }}
    runs-on: ubuntu-latest
    environment: uat
    name: Build and Deploy Scraping Function to UAT
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - uses: azure/login@v2.1.0
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: ./.github/actions/acr-build-deploy
        name: Build and Deploy to ACR
        id: acr-build-deploy
        with:
          container-registry-name: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
          resource-group: ${{ vars.RG_NAME }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          image-name: ${{ env.CONTAINER_IMAGE_NAME }}
          image-tag: ${{ github.sha }}
          working-dir: ${{ env.WORKING_DIR }}

      - name: Update Function App with New Image
        uses: ./.github/actions/functions-deploy
        with:
          functionapp-name: ${{ vars.SCRAPING_FUNCTION_APP_NAME }}
          resource-group: ${{ vars.RG_NAME }}
          image: ${{ steps.acr-build-deploy.outputs.image }}

  deploy_prd:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prd' }}
    runs-on: ubuntu-latest
    environment: prd
    name: Build and Deploy Scraping Function to PRD
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - uses: azure/login@v2.1.0
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: ./.github/actions/acr-build-deploy
        name: Build and Deploy to ACR
        id: acr-build-deploy
        with:
          container-registry-name: ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}
          resource-group: ${{ vars.RG_NAME }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
          image-name: ${{ env.CONTAINER_IMAGE_NAME }}
          image-tag: ${{ github.sha }}
          working-dir: ${{ env.WORKING_DIR }}

      - name: Update Function App with New Image
        uses: ./.github/actions/functions-deploy
        with:
          functionapp-name: ${{ vars.SCRAPING_FUNCTION_APP_NAME }}
          resource-group: ${{ vars.RG_NAME }}
          image: ${{ steps.acr-build-deploy.outputs.image }}
