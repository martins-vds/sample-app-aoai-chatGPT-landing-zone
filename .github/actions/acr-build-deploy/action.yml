name: "Build and Deploy to Azure Container Registry"
description: "Build and deploy to Azure Container Registry"
inputs:
  resource-group:
    description: "The name of the resource group to deploy to"
    required: true
  container-registry-name:
    description: "The name of the container registry to deploy to"
    required: true
  image-name:
    description: "The name of the image to deploy"
    required: true
  image-tag:
    description: "The tag of the image to deploy"
    required: true
    default: ${{ github.sha }}
  working-dir:
    description: "The path to the Dockerfile"
    required: true
    default: ${{ github.workspace }}
  username:
    description: "The username for the container registry"
    required: true
  password:
    description: "The password for the container registry"
    required: true
outputs:
  image:
    description: "The name of the image that was built and pushed"
    value: "${{ inputs.container-registry-name }}.azurecr.io/${{ inputs.image-name }}:${{ inputs.image-tag }}"
runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.5.0

    - name: Get Runner IP
      id: get-ip
      uses: ./.github/actions/my-ip-address

    - name: Allow Runner IP Temporarily
      uses: azure/cli@v2
      env:
        CONTAINER_REGISTRY_NAME: ${{ inputs.container-registry-name }}
        IP_ADDRESS: ${{ steps.get-ip.outputs.ip_address }}
        RESOURCE_GROUP: ${{ inputs.resource-group }}
      with:
        azcliversion: latest
        inlineScript: |
          duration=1
          az acr update --name "$CONTAINER_REGISTRY_NAME" --public-network-enabled true > /dev/null
          az acr update --name "$CONTAINER_REGISTRY_NAME" --default-action Deny > /dev/null
          az acr network-rule add --name "$CONTAINER_REGISTRY_NAME" --ip-address "$IP_ADDRESS" > /dev/null

          echo "Sleeping for $duration minutes..."
          sleep "$duration"m

    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: "${{ inputs.container-registry-name }}.azurecr.io"
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Build and Push Docker Image
      env:
        CONTAINER_REGISTRY_LOGIN_SERVER: "${{ inputs.container-registry-name }}.azurecr.io"
        CONTAINER_IMAGE_NAME: "${{ inputs.image-name }}:${{ inputs.image-tag }}"
        WORKING_DIR: "${{ inputs.working-dir }}"
      run: |
        docker build -t "$CONTAINER_REGISTRY_LOGIN_SERVER/$CONTAINER_IMAGE_NAME" "$WORKING_DIR"
        docker push "$CONTAINER_REGISTRY_LOGIN_SERVER/$CONTAINER_IMAGE_NAME"
      shell: bash

    - name: Remove Runner IP
      uses: azure/cli@v2
      if: always()
      env:
        CONTAINER_REGISTRY_NAME: ${{ inputs.container-registry-name }}
        IP_ADDRESS: ${{ steps.get-ip.outputs.ip_address }}
        RESOURCE_GROUP: ${{ inputs.resource-group }}
      with:
        azcliversion: latest
        inlineScript: |
          if [ -z "$IP_ADDRESS" ]; then
            echo "IP address not found. Exiting..."
            exit 0
          fi

          az acr network-rule remove --name "$CONTAINER_REGISTRY_NAME" --ip-address "$IP_ADDRESS" > /dev/null
          az acr update --name "$CONTAINER_REGISTRY_NAME" --public-network-enabled false > /dev/null
